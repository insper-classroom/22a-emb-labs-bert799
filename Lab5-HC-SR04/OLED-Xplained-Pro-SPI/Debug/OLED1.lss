
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007124  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407124  00407124  00017124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  0040712c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000308  204009d0  00407afc  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd8  00407e04  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409e04  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00018b20  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000038c3  00000000  00000000  00039577  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000058b7  00000000  00000000  0003ce3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000008c0  00000000  00000000  000426f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000928  00000000  00000000  00042fb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000a2b3  00000000  00000000  000438d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f080  00000000  00000000  0004db8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090210  00000000  00000000  0005cc0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001f3c  00000000  00000000  000ece1c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 41 14 40 00 3d 14 40 00 3d 14 40 00     .,@ A.@.=.@.=.@.
  400010:	3d 14 40 00 3d 14 40 00 3d 14 40 00 00 00 00 00     =.@.=.@.=.@.....
	...
  40002c:	3d 14 40 00 3d 14 40 00 00 00 00 00 3d 14 40 00     =.@.=.@.....=.@.
  40003c:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  40004c:	b5 17 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     ..@.=.@.=.@.=.@.
  40005c:	3d 14 40 00 3d 14 40 00 00 00 00 00 a1 0f 40 00     =.@.=.@.......@.
  40006c:	b5 0f 40 00 c9 0f 40 00 3d 14 40 00 3d 14 40 00     ..@...@.=.@.=.@.
  40007c:	3d 14 40 00 dd 0f 40 00 f1 0f 40 00 3d 14 40 00     =.@...@...@.=.@.
  40008c:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  40009c:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  4000ac:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  4000bc:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  4000cc:	3d 14 40 00 00 00 00 00 3d 14 40 00 00 00 00 00     =.@.....=.@.....
  4000dc:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  4000ec:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  4000fc:	3d 14 40 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     =.@.=.@.=.@.=.@.
  40010c:	3d 14 40 00 3d 14 40 00 00 00 00 00 00 00 00 00     =.@.=.@.........
  40011c:	00 00 00 00 3d 14 40 00 3d 14 40 00 3d 14 40 00     ....=.@.=.@.=.@.
  40012c:	3d 14 40 00 3d 14 40 00 00 00 00 00 3d 14 40 00     =.@.=.@.....=.@.
  40013c:	3d 14 40 00                                         =.@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	0040712c 	.word	0x0040712c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040712c 	.word	0x0040712c
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	0040712c 	.word	0x0040712c
  4001a8:	00000000 	.word	0x00000000

004001ac <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  4001ac:	4b03      	ldr	r3, [pc, #12]	; (4001bc <rtt_init+0x10>)
  4001ae:	681b      	ldr	r3, [r3, #0]
  4001b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  4001b4:	4319      	orrs	r1, r3
  4001b6:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  4001b8:	2000      	movs	r0, #0
  4001ba:	4770      	bx	lr
  4001bc:	204009ec 	.word	0x204009ec

004001c0 <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  4001c0:	b941      	cbnz	r1, 4001d4 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  4001c2:	4a09      	ldr	r2, [pc, #36]	; (4001e8 <rtt_sel_source+0x28>)
  4001c4:	6813      	ldr	r3, [r2, #0]
  4001c6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  4001ca:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001cc:	6802      	ldr	r2, [r0, #0]
  4001ce:	4313      	orrs	r3, r2
  4001d0:	6003      	str	r3, [r0, #0]
  4001d2:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4001d4:	4a04      	ldr	r2, [pc, #16]	; (4001e8 <rtt_sel_source+0x28>)
  4001d6:	6813      	ldr	r3, [r2, #0]
  4001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4001dc:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4001de:	6802      	ldr	r2, [r0, #0]
  4001e0:	4313      	orrs	r3, r2
  4001e2:	6003      	str	r3, [r0, #0]
  4001e4:	4770      	bx	lr
  4001e6:	bf00      	nop
  4001e8:	204009ec 	.word	0x204009ec

004001ec <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  4001ec:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  4001ee:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4001f2:	4b02      	ldr	r3, [pc, #8]	; (4001fc <rtt_disable_interrupt+0x10>)
  4001f4:	681b      	ldr	r3, [r3, #0]
  4001f6:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  4001f8:	6001      	str	r1, [r0, #0]
  4001fa:	4770      	bx	lr
  4001fc:	204009ec 	.word	0x204009ec

00400200 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400200:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400202:	6883      	ldr	r3, [r0, #8]
  400204:	429a      	cmp	r2, r3
  400206:	d003      	beq.n	400210 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400208:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40020a:	6883      	ldr	r3, [r0, #8]
  40020c:	4293      	cmp	r3, r2
  40020e:	d1fb      	bne.n	400208 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400210:	4618      	mov	r0, r3
  400212:	4770      	bx	lr

00400214 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400214:	68c0      	ldr	r0, [r0, #12]
}
  400216:	4770      	bx	lr

00400218 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400218:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40021a:	4b07      	ldr	r3, [pc, #28]	; (400238 <spi_enable_clock+0x20>)
  40021c:	4298      	cmp	r0, r3
  40021e:	d003      	beq.n	400228 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400220:	4b06      	ldr	r3, [pc, #24]	; (40023c <spi_enable_clock+0x24>)
  400222:	4298      	cmp	r0, r3
  400224:	d004      	beq.n	400230 <spi_enable_clock+0x18>
  400226:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400228:	2015      	movs	r0, #21
  40022a:	4b05      	ldr	r3, [pc, #20]	; (400240 <spi_enable_clock+0x28>)
  40022c:	4798      	blx	r3
  40022e:	bd08      	pop	{r3, pc}
  400230:	202a      	movs	r0, #42	; 0x2a
  400232:	4b03      	ldr	r3, [pc, #12]	; (400240 <spi_enable_clock+0x28>)
  400234:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  400236:	e7f6      	b.n	400226 <spi_enable_clock+0xe>
  400238:	40008000 	.word	0x40008000
  40023c:	40058000 	.word	0x40058000
  400240:	00401125 	.word	0x00401125

00400244 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400244:	6843      	ldr	r3, [r0, #4]
  400246:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40024a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40024c:	6843      	ldr	r3, [r0, #4]
  40024e:	0409      	lsls	r1, r1, #16
  400250:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400254:	4319      	orrs	r1, r3
  400256:	6041      	str	r1, [r0, #4]
  400258:	4770      	bx	lr

0040025a <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40025a:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40025c:	f643 2499 	movw	r4, #15001	; 0x3a99
  400260:	6905      	ldr	r5, [r0, #16]
  400262:	f015 0f02 	tst.w	r5, #2
  400266:	d103      	bne.n	400270 <spi_write+0x16>
		if (!timeout--) {
  400268:	3c01      	subs	r4, #1
  40026a:	d1f9      	bne.n	400260 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  40026c:	2001      	movs	r0, #1
  40026e:	e00c      	b.n	40028a <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400270:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400272:	f014 0f02 	tst.w	r4, #2
  400276:	d006      	beq.n	400286 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400278:	0412      	lsls	r2, r2, #16
  40027a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40027e:	4311      	orrs	r1, r2
		if (uc_last) {
  400280:	b10b      	cbz	r3, 400286 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400282:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400286:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400288:	2000      	movs	r0, #0
}
  40028a:	bc30      	pop	{r4, r5}
  40028c:	4770      	bx	lr

0040028e <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40028e:	b932      	cbnz	r2, 40029e <spi_set_clock_polarity+0x10>
  400290:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400294:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400296:	f023 0301 	bic.w	r3, r3, #1
  40029a:	6303      	str	r3, [r0, #48]	; 0x30
  40029c:	4770      	bx	lr
  40029e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002a4:	f043 0301 	orr.w	r3, r3, #1
  4002a8:	6303      	str	r3, [r0, #48]	; 0x30
  4002aa:	4770      	bx	lr

004002ac <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4002ac:	b932      	cbnz	r2, 4002bc <spi_set_clock_phase+0x10>
  4002ae:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4002b2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002b4:	f023 0302 	bic.w	r3, r3, #2
  4002b8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ba:	4770      	bx	lr
  4002bc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4002c0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002c2:	f043 0302 	orr.w	r3, r3, #2
  4002c6:	6303      	str	r3, [r0, #48]	; 0x30
  4002c8:	4770      	bx	lr

004002ca <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4002ca:	2a04      	cmp	r2, #4
  4002cc:	d003      	beq.n	4002d6 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4002ce:	b16a      	cbz	r2, 4002ec <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4002d0:	2a08      	cmp	r2, #8
  4002d2:	d016      	beq.n	400302 <spi_configure_cs_behavior+0x38>
  4002d4:	4770      	bx	lr
  4002d6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002da:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002dc:	f023 0308 	bic.w	r3, r3, #8
  4002e0:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4002e2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002e4:	f043 0304 	orr.w	r3, r3, #4
  4002e8:	6303      	str	r3, [r0, #48]	; 0x30
  4002ea:	4770      	bx	lr
  4002ec:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4002f0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002f2:	f023 0308 	bic.w	r3, r3, #8
  4002f6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4002f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fa:	f023 0304 	bic.w	r3, r3, #4
  4002fe:	6303      	str	r3, [r0, #48]	; 0x30
  400300:	4770      	bx	lr
  400302:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  400306:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400308:	f043 0308 	orr.w	r3, r3, #8
  40030c:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  40030e:	e7e1      	b.n	4002d4 <spi_configure_cs_behavior+0xa>

00400310 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400310:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400314:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400316:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40031a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  40031c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40031e:	431a      	orrs	r2, r3
  400320:	630a      	str	r2, [r1, #48]	; 0x30
  400322:	4770      	bx	lr

00400324 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400324:	1e43      	subs	r3, r0, #1
  400326:	4419      	add	r1, r3
  400328:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  40032c:	1e43      	subs	r3, r0, #1
  40032e:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400330:	bf94      	ite	ls
  400332:	b200      	sxthls	r0, r0
		return -1;
  400334:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400338:	4770      	bx	lr

0040033a <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40033a:	b17a      	cbz	r2, 40035c <spi_set_baudrate_div+0x22>
{
  40033c:	b410      	push	{r4}
  40033e:	4614      	mov	r4, r2
  400340:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400344:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400346:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40034a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40034c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40034e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400352:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400354:	2000      	movs	r0, #0
}
  400356:	f85d 4b04 	ldr.w	r4, [sp], #4
  40035a:	4770      	bx	lr
        return -1;
  40035c:	f04f 30ff 	mov.w	r0, #4294967295
  400360:	4770      	bx	lr
	...

00400364 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400364:	4b01      	ldr	r3, [pc, #4]	; (40036c <gfx_mono_set_framebuffer+0x8>)
  400366:	6018      	str	r0, [r3, #0]
  400368:	4770      	bx	lr
  40036a:	bf00      	nop
  40036c:	204009f0 	.word	0x204009f0

00400370 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400370:	4b02      	ldr	r3, [pc, #8]	; (40037c <gfx_mono_framebuffer_put_byte+0xc>)
  400372:	681b      	ldr	r3, [r3, #0]
  400374:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400378:	5442      	strb	r2, [r0, r1]
  40037a:	4770      	bx	lr
  40037c:	204009f0 	.word	0x204009f0

00400380 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400380:	4b02      	ldr	r3, [pc, #8]	; (40038c <gfx_mono_framebuffer_get_byte+0xc>)
  400382:	681b      	ldr	r3, [r3, #0]
  400384:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400388:	5c40      	ldrb	r0, [r0, r1]
  40038a:	4770      	bx	lr
  40038c:	204009f0 	.word	0x204009f0

00400390 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400394:	1884      	adds	r4, r0, r2
  400396:	2c80      	cmp	r4, #128	; 0x80
  400398:	dd02      	ble.n	4003a0 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40039a:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  40039e:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4003a0:	b322      	cbz	r2, 4003ec <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4003a2:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4003a4:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4003a8:	2601      	movs	r6, #1
  4003aa:	fa06 f101 	lsl.w	r1, r6, r1
  4003ae:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4003b0:	2b01      	cmp	r3, #1
  4003b2:	d01d      	beq.n	4003f0 <gfx_mono_generic_draw_horizontal_line+0x60>
  4003b4:	2b00      	cmp	r3, #0
  4003b6:	d035      	beq.n	400424 <gfx_mono_generic_draw_horizontal_line+0x94>
  4003b8:	2b02      	cmp	r3, #2
  4003ba:	d117      	bne.n	4003ec <gfx_mono_generic_draw_horizontal_line+0x5c>
  4003bc:	3801      	subs	r0, #1
  4003be:	b2c7      	uxtb	r7, r0
  4003c0:	19d4      	adds	r4, r2, r7
  4003c2:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  4003c4:	f8df a090 	ldr.w	sl, [pc, #144]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  4003c8:	f04f 0900 	mov.w	r9, #0
  4003cc:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4003d0:	4621      	mov	r1, r4
  4003d2:	4628      	mov	r0, r5
  4003d4:	47d0      	blx	sl
			temp ^= pixelmask;
  4003d6:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003da:	464b      	mov	r3, r9
  4003dc:	b2d2      	uxtb	r2, r2
  4003de:	4621      	mov	r1, r4
  4003e0:	4628      	mov	r0, r5
  4003e2:	47c0      	blx	r8
  4003e4:	3c01      	subs	r4, #1
  4003e6:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003e8:	42bc      	cmp	r4, r7
  4003ea:	d1f1      	bne.n	4003d0 <gfx_mono_generic_draw_horizontal_line+0x40>
  4003ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003f0:	3801      	subs	r0, #1
  4003f2:	b2c7      	uxtb	r7, r0
  4003f4:	19d4      	adds	r4, r2, r7
  4003f6:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4003f8:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4003fc:	f04f 0900 	mov.w	r9, #0
  400400:	f8df 8058 	ldr.w	r8, [pc, #88]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400404:	4621      	mov	r1, r4
  400406:	4628      	mov	r0, r5
  400408:	47d0      	blx	sl
			temp |= pixelmask;
  40040a:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40040e:	464b      	mov	r3, r9
  400410:	b2d2      	uxtb	r2, r2
  400412:	4621      	mov	r1, r4
  400414:	4628      	mov	r0, r5
  400416:	47c0      	blx	r8
  400418:	3c01      	subs	r4, #1
  40041a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40041c:	42bc      	cmp	r4, r7
  40041e:	d1f1      	bne.n	400404 <gfx_mono_generic_draw_horizontal_line+0x74>
  400420:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400424:	3801      	subs	r0, #1
  400426:	b2c7      	uxtb	r7, r0
  400428:	19d4      	adds	r4, r2, r7
  40042a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40042c:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400458 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400430:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  400432:	f8df 9028 	ldr.w	r9, [pc, #40]	; 40045c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400436:	4621      	mov	r1, r4
  400438:	4628      	mov	r0, r5
  40043a:	47c0      	blx	r8
			temp &= ~pixelmask;
  40043c:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400440:	2300      	movs	r3, #0
  400442:	b2d2      	uxtb	r2, r2
  400444:	4621      	mov	r1, r4
  400446:	4628      	mov	r0, r5
  400448:	47c8      	blx	r9
  40044a:	3c01      	subs	r4, #1
  40044c:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40044e:	42bc      	cmp	r4, r7
  400450:	d1f1      	bne.n	400436 <gfx_mono_generic_draw_horizontal_line+0xa6>
  400452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400456:	bf00      	nop
  400458:	0040089d 	.word	0x0040089d
  40045c:	00400799 	.word	0x00400799

00400460 <gfx_mono_generic_draw_vertical_line>:
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
	if (length == 0) {
  400460:	2a00      	cmp	r2, #0
  400462:	d048      	beq.n	4004f6 <gfx_mono_generic_draw_vertical_line+0x96>
{
  400464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400468:	4614      	mov	r4, r2
  40046a:	461f      	mov	r7, r3
  40046c:	4606      	mov	r6, r0
		return;
	}

	gfx_coord_t y2 = y + length - 1;
  40046e:	1e4a      	subs	r2, r1, #1
  400470:	4422      	add	r2, r4
  400472:	b2d2      	uxtb	r2, r2

	if (y == y2) {
  400474:	4291      	cmp	r1, r2
  400476:	d031      	beq.n	4004dc <gfx_mono_generic_draw_vertical_line+0x7c>
  400478:	2a1f      	cmp	r2, #31
  40047a:	bf28      	it	cs
  40047c:	221f      	movcs	r2, #31
  40047e:	4615      	mov	r5, r2

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
		y2 = GFX_MONO_LCD_HEIGHT - 1;
	}

	gfx_coord_t y1page = y / 8;
  400480:	08cc      	lsrs	r4, r1, #3
	gfx_coord_t y2page = y2 / 8;
  400482:	ea4f 08d2 	mov.w	r8, r2, lsr #3

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
  400486:	f001 0207 	and.w	r2, r1, #7
  40048a:	23ff      	movs	r3, #255	; 0xff
  40048c:	fa03 f202 	lsl.w	r2, r3, r2
  400490:	b2d2      	uxtb	r2, r2
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
  400492:	f005 0507 	and.w	r5, r5, #7
  400496:	f1c5 0507 	rsb	r5, r5, #7
  40049a:	fa43 f505 	asr.w	r5, r3, r5
  40049e:	b2ed      	uxtb	r5, r5

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
  4004a0:	4544      	cmp	r4, r8
  4004a2:	d020      	beq.n	4004e6 <gfx_mono_generic_draw_vertical_line+0x86>
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);
  4004a4:	463b      	mov	r3, r7
  4004a6:	4601      	mov	r1, r0
  4004a8:	4620      	mov	r0, r4
  4004aa:	f8df 904c 	ldr.w	r9, [pc, #76]	; 4004f8 <gfx_mono_generic_draw_vertical_line+0x98>
  4004ae:	47c8      	blx	r9

		while (++y1page < y2page) {
  4004b0:	3401      	adds	r4, #1
  4004b2:	45a0      	cmp	r8, r4
  4004b4:	d90a      	bls.n	4004cc <gfx_mono_generic_draw_vertical_line+0x6c>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
  4004b6:	f04f 0aff 	mov.w	sl, #255	; 0xff
  4004ba:	463b      	mov	r3, r7
  4004bc:	4652      	mov	r2, sl
  4004be:	4631      	mov	r1, r6
  4004c0:	4620      	mov	r0, r4
  4004c2:	47c8      	blx	r9
		while (++y1page < y2page) {
  4004c4:	3401      	adds	r4, #1
  4004c6:	b2e4      	uxtb	r4, r4
  4004c8:	45a0      	cmp	r8, r4
  4004ca:	d8f6      	bhi.n	4004ba <gfx_mono_generic_draw_vertical_line+0x5a>
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
  4004cc:	463b      	mov	r3, r7
  4004ce:	462a      	mov	r2, r5
  4004d0:	4631      	mov	r1, r6
  4004d2:	4640      	mov	r0, r8
  4004d4:	4c08      	ldr	r4, [pc, #32]	; (4004f8 <gfx_mono_generic_draw_vertical_line+0x98>)
  4004d6:	47a0      	blx	r4
  4004d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_draw_pixel(x, y, color);
  4004dc:	461a      	mov	r2, r3
  4004de:	4b07      	ldr	r3, [pc, #28]	; (4004fc <gfx_mono_generic_draw_vertical_line+0x9c>)
  4004e0:	4798      	blx	r3
		return;
  4004e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
  4004e6:	463b      	mov	r3, r7
  4004e8:	402a      	ands	r2, r5
  4004ea:	4601      	mov	r1, r0
  4004ec:	4620      	mov	r0, r4
  4004ee:	4c02      	ldr	r4, [pc, #8]	; (4004f8 <gfx_mono_generic_draw_vertical_line+0x98>)
  4004f0:	47a0      	blx	r4
  4004f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4004f6:	4770      	bx	lr
  4004f8:	004008a9 	.word	0x004008a9
  4004fc:	00400839 	.word	0x00400839

00400500 <gfx_mono_generic_draw_rect>:
 * \param[in] color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400504:	4604      	mov	r4, r0
  400506:	460f      	mov	r7, r1
  400508:	4616      	mov	r6, r2
  40050a:	4698      	mov	r8, r3
  40050c:	f89d 5020 	ldrb.w	r5, [sp, #32]
	gfx_mono_draw_horizontal_line(x, y, width, color);
  400510:	462b      	mov	r3, r5
  400512:	f8df 9034 	ldr.w	r9, [pc, #52]	; 400548 <gfx_mono_generic_draw_rect+0x48>
  400516:	47c8      	blx	r9
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
  400518:	f108 31ff 	add.w	r1, r8, #4294967295
  40051c:	4439      	add	r1, r7
  40051e:	462b      	mov	r3, r5
  400520:	4632      	mov	r2, r6
  400522:	b2c9      	uxtb	r1, r1
  400524:	4620      	mov	r0, r4
  400526:	47c8      	blx	r9

	gfx_mono_draw_vertical_line(x, y, height, color);
  400528:	462b      	mov	r3, r5
  40052a:	4642      	mov	r2, r8
  40052c:	4639      	mov	r1, r7
  40052e:	4620      	mov	r0, r4
  400530:	f8df 9018 	ldr.w	r9, [pc, #24]	; 40054c <gfx_mono_generic_draw_rect+0x4c>
  400534:	47c8      	blx	r9
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
  400536:	1e70      	subs	r0, r6, #1
  400538:	4420      	add	r0, r4
  40053a:	462b      	mov	r3, r5
  40053c:	4642      	mov	r2, r8
  40053e:	4639      	mov	r1, r7
  400540:	b2c0      	uxtb	r0, r0
  400542:	47c8      	blx	r9
  400544:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400548:	00400391 	.word	0x00400391
  40054c:	00400461 	.word	0x00400461

00400550 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400550:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400554:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400558:	b18b      	cbz	r3, 40057e <gfx_mono_generic_draw_filled_rect+0x2e>
  40055a:	461c      	mov	r4, r3
  40055c:	4690      	mov	r8, r2
  40055e:	4606      	mov	r6, r0
  400560:	1e4d      	subs	r5, r1, #1
  400562:	b2ed      	uxtb	r5, r5
  400564:	442c      	add	r4, r5
  400566:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400568:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400584 <gfx_mono_generic_draw_filled_rect+0x34>
  40056c:	463b      	mov	r3, r7
  40056e:	4642      	mov	r2, r8
  400570:	4621      	mov	r1, r4
  400572:	4630      	mov	r0, r6
  400574:	47c8      	blx	r9
  400576:	3c01      	subs	r4, #1
  400578:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40057a:	42ac      	cmp	r4, r5
  40057c:	d1f6      	bne.n	40056c <gfx_mono_generic_draw_filled_rect+0x1c>
  40057e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400582:	bf00      	nop
  400584:	00400391 	.word	0x00400391

00400588 <gfx_mono_generic_draw_filled_circle>:
 * \param[in]  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
  400588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40058c:	b085      	sub	sp, #20
  40058e:	4681      	mov	r9, r0
  400590:	9100      	str	r1, [sp, #0]
  400592:	9301      	str	r3, [sp, #4]
  400594:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
  400598:	b17a      	cbz	r2, 4005ba <gfx_mono_generic_draw_filled_circle+0x32>
  40059a:	4616      	mov	r6, r2
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
  40059c:	0055      	lsls	r5, r2, #1
  40059e:	f1c5 0503 	rsb	r5, r5, #3
  4005a2:	2701      	movs	r7, #1
  4005a4:	f04f 0800 	mov.w	r8, #0

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
  4005a8:	f00b 0303 	and.w	r3, fp, #3
  4005ac:	9302      	str	r3, [sp, #8]
			gfx_mono_draw_vertical_line(x + offset_y,
  4005ae:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 4006a0 <gfx_mono_generic_draw_filled_circle+0x118>
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
  4005b2:	f00b 030c 	and.w	r3, fp, #12
  4005b6:	9303      	str	r3, [sp, #12]
  4005b8:	e04d      	b.n	400656 <gfx_mono_generic_draw_filled_circle+0xce>
		gfx_mono_draw_pixel(x, y, color);
  4005ba:	461a      	mov	r2, r3
  4005bc:	4b37      	ldr	r3, [pc, #220]	; (40069c <gfx_mono_generic_draw_filled_circle+0x114>)
  4005be:	4798      	blx	r3
		}

		/* Next X. */
		++offset_x;
	}
}
  4005c0:	b005      	add	sp, #20
  4005c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			gfx_mono_draw_vertical_line(x + offset_y,
  4005c6:	9b00      	ldr	r3, [sp, #0]
  4005c8:	1b19      	subs	r1, r3, r4
  4005ca:	eb09 0006 	add.w	r0, r9, r6
  4005ce:	9b01      	ldr	r3, [sp, #4]
  4005d0:	463a      	mov	r2, r7
  4005d2:	b2c9      	uxtb	r1, r1
  4005d4:	b2c0      	uxtb	r0, r0
  4005d6:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  4005d8:	1c72      	adds	r2, r6, #1
  4005da:	9900      	ldr	r1, [sp, #0]
  4005dc:	1b89      	subs	r1, r1, r6
  4005de:	eb09 0004 	add.w	r0, r9, r4
  4005e2:	9b01      	ldr	r3, [sp, #4]
  4005e4:	b2d2      	uxtb	r2, r2
  4005e6:	b2c9      	uxtb	r1, r1
  4005e8:	b2c0      	uxtb	r0, r0
  4005ea:	47d0      	blx	sl
  4005ec:	e038      	b.n	400660 <gfx_mono_generic_draw_filled_circle+0xd8>
			gfx_mono_draw_vertical_line(x - offset_y,
  4005ee:	9b00      	ldr	r3, [sp, #0]
  4005f0:	1b19      	subs	r1, r3, r4
  4005f2:	eba9 0006 	sub.w	r0, r9, r6
  4005f6:	9b01      	ldr	r3, [sp, #4]
  4005f8:	463a      	mov	r2, r7
  4005fa:	b2c9      	uxtb	r1, r1
  4005fc:	b2c0      	uxtb	r0, r0
  4005fe:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400600:	1c72      	adds	r2, r6, #1
  400602:	9900      	ldr	r1, [sp, #0]
  400604:	1b89      	subs	r1, r1, r6
  400606:	eba9 0004 	sub.w	r0, r9, r4
  40060a:	9b01      	ldr	r3, [sp, #4]
  40060c:	b2d2      	uxtb	r2, r2
  40060e:	b2c9      	uxtb	r1, r1
  400610:	b2c0      	uxtb	r0, r0
  400612:	47d0      	blx	sl
  400614:	e027      	b.n	400666 <gfx_mono_generic_draw_filled_circle+0xde>
			gfx_mono_draw_vertical_line(x - offset_y,
  400616:	eba9 0006 	sub.w	r0, r9, r6
  40061a:	9b01      	ldr	r3, [sp, #4]
  40061c:	463a      	mov	r2, r7
  40061e:	9900      	ldr	r1, [sp, #0]
  400620:	b2c0      	uxtb	r0, r0
  400622:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x - offset_x,
  400624:	1c72      	adds	r2, r6, #1
  400626:	eba9 0004 	sub.w	r0, r9, r4
  40062a:	9b01      	ldr	r3, [sp, #4]
  40062c:	b2d2      	uxtb	r2, r2
  40062e:	9900      	ldr	r1, [sp, #0]
  400630:	b2c0      	uxtb	r0, r0
  400632:	47d0      	blx	sl
  400634:	e01a      	b.n	40066c <gfx_mono_generic_draw_filled_circle+0xe4>
		if (error < 0) {
  400636:	2d00      	cmp	r5, #0
  400638:	db2b      	blt.n	400692 <gfx_mono_generic_draw_filled_circle+0x10a>
			error += (((offset_x - offset_y) << 2) + 10);
  40063a:	1ba4      	subs	r4, r4, r6
  40063c:	350a      	adds	r5, #10
  40063e:	eb05 0484 	add.w	r4, r5, r4, lsl #2
  400642:	b225      	sxth	r5, r4
			--offset_y;
  400644:	3e01      	subs	r6, #1
  400646:	b2f6      	uxtb	r6, r6
  400648:	f108 0801 	add.w	r8, r8, #1
  40064c:	1c7b      	adds	r3, r7, #1
  40064e:	b2db      	uxtb	r3, r3
	while (offset_x <= offset_y) {
  400650:	42be      	cmp	r6, r7
  400652:	d3b5      	bcc.n	4005c0 <gfx_mono_generic_draw_filled_circle+0x38>
  400654:	461f      	mov	r7, r3
  400656:	fa5f f488 	uxtb.w	r4, r8
		if (quadrant_mask & GFX_QUADRANT0) {
  40065a:	9b02      	ldr	r3, [sp, #8]
  40065c:	2b00      	cmp	r3, #0
  40065e:	d1b2      	bne.n	4005c6 <gfx_mono_generic_draw_filled_circle+0x3e>
		if (quadrant_mask & GFX_QUADRANT1) {
  400660:	9b03      	ldr	r3, [sp, #12]
  400662:	2b00      	cmp	r3, #0
  400664:	d1c3      	bne.n	4005ee <gfx_mono_generic_draw_filled_circle+0x66>
		if (quadrant_mask & GFX_QUADRANT2) {
  400666:	f01b 0f30 	tst.w	fp, #48	; 0x30
  40066a:	d1d4      	bne.n	400616 <gfx_mono_generic_draw_filled_circle+0x8e>
		if (quadrant_mask & GFX_QUADRANT3) {
  40066c:	f01b 0fc0 	tst.w	fp, #192	; 0xc0
  400670:	d0e1      	beq.n	400636 <gfx_mono_generic_draw_filled_circle+0xae>
			gfx_mono_draw_vertical_line(x + offset_y,
  400672:	eb09 0006 	add.w	r0, r9, r6
  400676:	9b01      	ldr	r3, [sp, #4]
  400678:	463a      	mov	r2, r7
  40067a:	9900      	ldr	r1, [sp, #0]
  40067c:	b2c0      	uxtb	r0, r0
  40067e:	47d0      	blx	sl
			gfx_mono_draw_vertical_line(x + offset_x,
  400680:	1c72      	adds	r2, r6, #1
  400682:	eb09 0004 	add.w	r0, r9, r4
  400686:	9b01      	ldr	r3, [sp, #4]
  400688:	b2d2      	uxtb	r2, r2
  40068a:	9900      	ldr	r1, [sp, #0]
  40068c:	b2c0      	uxtb	r0, r0
  40068e:	47d0      	blx	sl
  400690:	e7d1      	b.n	400636 <gfx_mono_generic_draw_filled_circle+0xae>
			error += ((offset_x << 2) + 6);
  400692:	3506      	adds	r5, #6
  400694:	eb05 0584 	add.w	r5, r5, r4, lsl #2
  400698:	b22d      	sxth	r5, r5
  40069a:	e7d5      	b.n	400648 <gfx_mono_generic_draw_filled_circle+0xc0>
  40069c:	00400839 	.word	0x00400839
  4006a0:	00400461 	.word	0x00400461

004006a4 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4006a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006a8:	b083      	sub	sp, #12
  4006aa:	4604      	mov	r4, r0
  4006ac:	4688      	mov	r8, r1
  4006ae:	4691      	mov	r9, r2
  4006b0:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4006b2:	7a5b      	ldrb	r3, [r3, #9]
  4006b4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006b8:	2100      	movs	r1, #0
  4006ba:	9100      	str	r1, [sp, #0]
  4006bc:	4649      	mov	r1, r9
  4006be:	4640      	mov	r0, r8
  4006c0:	4d21      	ldr	r5, [pc, #132]	; (400748 <gfx_mono_draw_char+0xa4>)
  4006c2:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4006c4:	f89b 3000 	ldrb.w	r3, [fp]
  4006c8:	b113      	cbz	r3, 4006d0 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4006ca:	b003      	add	sp, #12
  4006cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  4006d0:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006d4:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  4006d6:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  4006da:	bf18      	it	ne
  4006dc:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  4006de:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  4006e2:	f89b 700a 	ldrb.w	r7, [fp, #10]
  4006e6:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  4006e8:	fb17 f70a 	smulbb	r7, r7, sl
  4006ec:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4006f0:	f8db 3004 	ldr.w	r3, [fp, #4]
  4006f4:	fa13 f787 	uxtah	r7, r3, r7
  4006f8:	e01f      	b.n	40073a <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4006fa:	0064      	lsls	r4, r4, #1
  4006fc:	b2e4      	uxtb	r4, r4
  4006fe:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400700:	b2eb      	uxtb	r3, r5
  400702:	429e      	cmp	r6, r3
  400704:	d910      	bls.n	400728 <gfx_mono_draw_char+0x84>
  400706:	b2eb      	uxtb	r3, r5
  400708:	eb08 0003 	add.w	r0, r8, r3
  40070c:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40070e:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400712:	bf08      	it	eq
  400714:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400718:	f014 0f80 	tst.w	r4, #128	; 0x80
  40071c:	d0ed      	beq.n	4006fa <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40071e:	2201      	movs	r2, #1
  400720:	4649      	mov	r1, r9
  400722:	4b0a      	ldr	r3, [pc, #40]	; (40074c <gfx_mono_draw_char+0xa8>)
  400724:	4798      	blx	r3
  400726:	e7e8      	b.n	4006fa <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400728:	f109 0901 	add.w	r9, r9, #1
  40072c:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400730:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400734:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400738:	d0c7      	beq.n	4006ca <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40073a:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40073e:	2e00      	cmp	r6, #0
  400740:	d0f2      	beq.n	400728 <gfx_mono_draw_char+0x84>
  400742:	2500      	movs	r5, #0
  400744:	462c      	mov	r4, r5
  400746:	e7de      	b.n	400706 <gfx_mono_draw_char+0x62>
  400748:	00400551 	.word	0x00400551
  40074c:	00400839 	.word	0x00400839

00400750 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400750:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400754:	4604      	mov	r4, r0
  400756:	4690      	mov	r8, r2
  400758:	461d      	mov	r5, r3
  40075a:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  40075c:	4f0d      	ldr	r7, [pc, #52]	; (400794 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  40075e:	460e      	mov	r6, r1
  400760:	e008      	b.n	400774 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400762:	7a6a      	ldrb	r2, [r5, #9]
  400764:	3201      	adds	r2, #1
  400766:	4442      	add	r2, r8
  400768:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  40076c:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  40076e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  400772:	b16b      	cbz	r3, 400790 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400774:	7820      	ldrb	r0, [r4, #0]
  400776:	280a      	cmp	r0, #10
  400778:	d0f3      	beq.n	400762 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  40077a:	280d      	cmp	r0, #13
  40077c:	d0f7      	beq.n	40076e <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  40077e:	462b      	mov	r3, r5
  400780:	4642      	mov	r2, r8
  400782:	4649      	mov	r1, r9
  400784:	47b8      	blx	r7
			x += font->width;
  400786:	7a2b      	ldrb	r3, [r5, #8]
  400788:	4499      	add	r9, r3
  40078a:	fa5f f989 	uxtb.w	r9, r9
  40078e:	e7ee      	b.n	40076e <gfx_mono_draw_string+0x1e>
}
  400790:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400794:	004006a5 	.word	0x004006a5

00400798 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400798:	b570      	push	{r4, r5, r6, lr}
  40079a:	4604      	mov	r4, r0
  40079c:	460d      	mov	r5, r1
  40079e:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4007a0:	b91b      	cbnz	r3, 4007aa <gfx_mono_ssd1306_put_byte+0x12>
  4007a2:	4b0d      	ldr	r3, [pc, #52]	; (4007d8 <gfx_mono_ssd1306_put_byte+0x40>)
  4007a4:	4798      	blx	r3
  4007a6:	42b0      	cmp	r0, r6
  4007a8:	d015      	beq.n	4007d6 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4007aa:	4632      	mov	r2, r6
  4007ac:	4629      	mov	r1, r5
  4007ae:	4620      	mov	r0, r4
  4007b0:	4b0a      	ldr	r3, [pc, #40]	; (4007dc <gfx_mono_ssd1306_put_byte+0x44>)
  4007b2:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4007b4:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4007b8:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4007bc:	4c08      	ldr	r4, [pc, #32]	; (4007e0 <gfx_mono_ssd1306_put_byte+0x48>)
  4007be:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4007c0:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4007c4:	f040 0010 	orr.w	r0, r0, #16
  4007c8:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4007ca:	f005 000f 	and.w	r0, r5, #15
  4007ce:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  4007d0:	4630      	mov	r0, r6
  4007d2:	4b04      	ldr	r3, [pc, #16]	; (4007e4 <gfx_mono_ssd1306_put_byte+0x4c>)
  4007d4:	4798      	blx	r3
  4007d6:	bd70      	pop	{r4, r5, r6, pc}
  4007d8:	00400381 	.word	0x00400381
  4007dc:	00400371 	.word	0x00400371
  4007e0:	004008ed 	.word	0x004008ed
  4007e4:	00400b0d 	.word	0x00400b0d

004007e8 <gfx_mono_ssd1306_init>:
{
  4007e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4007ec:	480d      	ldr	r0, [pc, #52]	; (400824 <gfx_mono_ssd1306_init+0x3c>)
  4007ee:	4b0e      	ldr	r3, [pc, #56]	; (400828 <gfx_mono_ssd1306_init+0x40>)
  4007f0:	4798      	blx	r3
	ssd1306_init();
  4007f2:	4b0e      	ldr	r3, [pc, #56]	; (40082c <gfx_mono_ssd1306_init+0x44>)
  4007f4:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4007f6:	2040      	movs	r0, #64	; 0x40
  4007f8:	4b0d      	ldr	r3, [pc, #52]	; (400830 <gfx_mono_ssd1306_init+0x48>)
  4007fa:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4007fc:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4007fe:	f04f 0801 	mov.w	r8, #1
  400802:	462f      	mov	r7, r5
  400804:	4e0b      	ldr	r6, [pc, #44]	; (400834 <gfx_mono_ssd1306_init+0x4c>)
{
  400806:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400808:	4643      	mov	r3, r8
  40080a:	463a      	mov	r2, r7
  40080c:	b2e1      	uxtb	r1, r4
  40080e:	4628      	mov	r0, r5
  400810:	47b0      	blx	r6
  400812:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400814:	2c80      	cmp	r4, #128	; 0x80
  400816:	d1f7      	bne.n	400808 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400818:	3501      	adds	r5, #1
  40081a:	b2ed      	uxtb	r5, r5
  40081c:	2d04      	cmp	r5, #4
  40081e:	d1f2      	bne.n	400806 <gfx_mono_ssd1306_init+0x1e>
  400820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400824:	204009f4 	.word	0x204009f4
  400828:	00400365 	.word	0x00400365
  40082c:	0040092d 	.word	0x0040092d
  400830:	004008ed 	.word	0x004008ed
  400834:	00400799 	.word	0x00400799

00400838 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400838:	09c3      	lsrs	r3, r0, #7
  40083a:	d12a      	bne.n	400892 <gfx_mono_ssd1306_draw_pixel+0x5a>
  40083c:	291f      	cmp	r1, #31
  40083e:	d828      	bhi.n	400892 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400844:	4614      	mov	r4, r2
  400846:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400848:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40084a:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40084e:	2201      	movs	r2, #1
  400850:	fa02 f701 	lsl.w	r7, r2, r1
  400854:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400858:	4601      	mov	r1, r0
  40085a:	4630      	mov	r0, r6
  40085c:	4b0d      	ldr	r3, [pc, #52]	; (400894 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  40085e:	4798      	blx	r3
  400860:	4602      	mov	r2, r0
	switch (color) {
  400862:	2c01      	cmp	r4, #1
  400864:	d009      	beq.n	40087a <gfx_mono_ssd1306_draw_pixel+0x42>
  400866:	b164      	cbz	r4, 400882 <gfx_mono_ssd1306_draw_pixel+0x4a>
  400868:	2c02      	cmp	r4, #2
  40086a:	d00e      	beq.n	40088a <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  40086c:	2300      	movs	r3, #0
  40086e:	4629      	mov	r1, r5
  400870:	4630      	mov	r0, r6
  400872:	4c09      	ldr	r4, [pc, #36]	; (400898 <gfx_mono_ssd1306_draw_pixel+0x60>)
  400874:	47a0      	blx	r4
  400876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  40087a:	ea48 0200 	orr.w	r2, r8, r0
  40087e:	b2d2      	uxtb	r2, r2
		break;
  400880:	e7f4      	b.n	40086c <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  400882:	ea20 0207 	bic.w	r2, r0, r7
  400886:	b2d2      	uxtb	r2, r2
		break;
  400888:	e7f0      	b.n	40086c <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  40088a:	ea88 0200 	eor.w	r2, r8, r0
  40088e:	b2d2      	uxtb	r2, r2
		break;
  400890:	e7ec      	b.n	40086c <gfx_mono_ssd1306_draw_pixel+0x34>
  400892:	4770      	bx	lr
  400894:	00400381 	.word	0x00400381
  400898:	00400799 	.word	0x00400799

0040089c <gfx_mono_ssd1306_get_byte>:
{
  40089c:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  40089e:	4b01      	ldr	r3, [pc, #4]	; (4008a4 <gfx_mono_ssd1306_get_byte+0x8>)
  4008a0:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4008a2:	bd08      	pop	{r3, pc}
  4008a4:	00400381 	.word	0x00400381

004008a8 <gfx_mono_ssd1306_mask_byte>:
	gfx_mono_ssd1306_mask_byte(0,0,0xAA,GFX_PIXEL_XOR);
\endcode
 */
void gfx_mono_ssd1306_mask_byte(gfx_coord_t page, gfx_coord_t column,
		gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
  4008a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4008aa:	4605      	mov	r5, r0
  4008ac:	460e      	mov	r6, r1
  4008ae:	4617      	mov	r7, r2
  4008b0:	461c      	mov	r4, r3
	return gfx_mono_framebuffer_get_byte(page, column);
  4008b2:	4b0c      	ldr	r3, [pc, #48]	; (4008e4 <gfx_mono_ssd1306_mask_byte+0x3c>)
  4008b4:	4798      	blx	r3
  4008b6:	4602      	mov	r2, r0
	gfx_mono_color_t temp = gfx_mono_get_byte(page, column);

	switch (color) {
  4008b8:	2c01      	cmp	r4, #1
  4008ba:	d008      	beq.n	4008ce <gfx_mono_ssd1306_mask_byte+0x26>
  4008bc:	b154      	cbz	r4, 4008d4 <gfx_mono_ssd1306_mask_byte+0x2c>
  4008be:	2c02      	cmp	r4, #2
  4008c0:	d00c      	beq.n	4008dc <gfx_mono_ssd1306_mask_byte+0x34>

	default:
		break;
	}

	gfx_mono_put_byte(page, column, temp);
  4008c2:	2300      	movs	r3, #0
  4008c4:	4631      	mov	r1, r6
  4008c6:	4628      	mov	r0, r5
  4008c8:	4c07      	ldr	r4, [pc, #28]	; (4008e8 <gfx_mono_ssd1306_mask_byte+0x40>)
  4008ca:	47a0      	blx	r4
  4008cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		temp |= pixel_mask;
  4008ce:	433a      	orrs	r2, r7
  4008d0:	b2d2      	uxtb	r2, r2
		break;
  4008d2:	e7f6      	b.n	4008c2 <gfx_mono_ssd1306_mask_byte+0x1a>
		temp &= ~pixel_mask;
  4008d4:	ea20 0207 	bic.w	r2, r0, r7
  4008d8:	b2d2      	uxtb	r2, r2
		break;
  4008da:	e7f2      	b.n	4008c2 <gfx_mono_ssd1306_mask_byte+0x1a>
		temp ^= pixel_mask;
  4008dc:	407a      	eors	r2, r7
  4008de:	b2d2      	uxtb	r2, r2
		break;
  4008e0:	e7ef      	b.n	4008c2 <gfx_mono_ssd1306_mask_byte+0x1a>
  4008e2:	bf00      	nop
  4008e4:	00400381 	.word	0x00400381
  4008e8:	00400799 	.word	0x00400799

004008ec <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4008ec:	b538      	push	{r3, r4, r5, lr}
  4008ee:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008f0:	2208      	movs	r2, #8
  4008f2:	4b09      	ldr	r3, [pc, #36]	; (400918 <ssd1306_write_command+0x2c>)
  4008f4:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008f6:	4c09      	ldr	r4, [pc, #36]	; (40091c <ssd1306_write_command+0x30>)
  4008f8:	2101      	movs	r1, #1
  4008fa:	4620      	mov	r0, r4
  4008fc:	4b08      	ldr	r3, [pc, #32]	; (400920 <ssd1306_write_command+0x34>)
  4008fe:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400900:	2301      	movs	r3, #1
  400902:	461a      	mov	r2, r3
  400904:	4629      	mov	r1, r5
  400906:	4620      	mov	r0, r4
  400908:	4c06      	ldr	r4, [pc, #24]	; (400924 <ssd1306_write_command+0x38>)
  40090a:	47a0      	blx	r4
	delay_us(10);
  40090c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400910:	4b05      	ldr	r3, [pc, #20]	; (400928 <ssd1306_write_command+0x3c>)
  400912:	4798      	blx	r3
  400914:	bd38      	pop	{r3, r4, r5, pc}
  400916:	bf00      	nop
  400918:	400e1000 	.word	0x400e1000
  40091c:	40008000 	.word	0x40008000
  400920:	00400245 	.word	0x00400245
  400924:	0040025b 	.word	0x0040025b
  400928:	20400001 	.word	0x20400001

0040092c <ssd1306_init>:
{
  40092c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400930:	4d66      	ldr	r5, [pc, #408]	; (400acc <ssd1306_init+0x1a0>)
  400932:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400936:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400938:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40093c:	4b64      	ldr	r3, [pc, #400]	; (400ad0 <ssd1306_init+0x1a4>)
  40093e:	2708      	movs	r7, #8
  400940:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400942:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400946:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400948:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  40094c:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40094e:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400950:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400954:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400956:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40095a:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40095c:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40095e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400962:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400964:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400966:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40096a:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40096c:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40096e:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400972:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400974:	f022 0208 	bic.w	r2, r2, #8
  400978:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40097a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40097c:	f022 0208 	bic.w	r2, r2, #8
  400980:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400982:	601f      	str	r7, [r3, #0]
  400984:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400986:	631f      	str	r7, [r3, #48]	; 0x30
  400988:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40098a:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400b08 <ssd1306_init+0x1dc>
  40098e:	2300      	movs	r3, #0
  400990:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400994:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400998:	4640      	mov	r0, r8
  40099a:	4c4e      	ldr	r4, [pc, #312]	; (400ad4 <ssd1306_init+0x1a8>)
  40099c:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40099e:	2300      	movs	r3, #0
  4009a0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009a4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009a8:	4640      	mov	r0, r8
  4009aa:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009ac:	2300      	movs	r3, #0
  4009ae:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009b2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009b6:	4640      	mov	r0, r8
  4009b8:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4009ba:	2300      	movs	r3, #0
  4009bc:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4009c0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009c4:	4640      	mov	r0, r8
  4009c6:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4009c8:	2300      	movs	r3, #0
  4009ca:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009ce:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009d2:	4640      	mov	r0, r8
  4009d4:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009d6:	2300      	movs	r3, #0
  4009d8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009dc:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009e0:	4640      	mov	r0, r8
  4009e2:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4009e4:	4c3c      	ldr	r4, [pc, #240]	; (400ad8 <ssd1306_init+0x1ac>)
  4009e6:	f04f 0902 	mov.w	r9, #2
  4009ea:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4009ee:	f04f 0880 	mov.w	r8, #128	; 0x80
  4009f2:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4009f6:	6863      	ldr	r3, [r4, #4]
  4009f8:	f043 0301 	orr.w	r3, r3, #1
  4009fc:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4009fe:	463a      	mov	r2, r7
  400a00:	2101      	movs	r1, #1
  400a02:	4620      	mov	r0, r4
  400a04:	4b35      	ldr	r3, [pc, #212]	; (400adc <ssd1306_init+0x1b0>)
  400a06:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400a08:	2200      	movs	r2, #0
  400a0a:	2101      	movs	r1, #1
  400a0c:	4620      	mov	r0, r4
  400a0e:	4b34      	ldr	r3, [pc, #208]	; (400ae0 <ssd1306_init+0x1b4>)
  400a10:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400a12:	2200      	movs	r2, #0
  400a14:	2101      	movs	r1, #1
  400a16:	4620      	mov	r0, r4
  400a18:	4b32      	ldr	r3, [pc, #200]	; (400ae4 <ssd1306_init+0x1b8>)
  400a1a:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400a1c:	6863      	ldr	r3, [r4, #4]
  400a1e:	f023 0302 	bic.w	r3, r3, #2
  400a22:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400a24:	2200      	movs	r2, #0
  400a26:	2101      	movs	r1, #1
  400a28:	4620      	mov	r0, r4
  400a2a:	4b2f      	ldr	r3, [pc, #188]	; (400ae8 <ssd1306_init+0x1bc>)
  400a2c:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400a2e:	6863      	ldr	r3, [r4, #4]
  400a30:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400a34:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400a36:	6863      	ldr	r3, [r4, #4]
  400a38:	f043 0310 	orr.w	r3, r3, #16
  400a3c:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400a3e:	492b      	ldr	r1, [pc, #172]	; (400aec <ssd1306_init+0x1c0>)
  400a40:	482b      	ldr	r0, [pc, #172]	; (400af0 <ssd1306_init+0x1c4>)
  400a42:	4b2c      	ldr	r3, [pc, #176]	; (400af4 <ssd1306_init+0x1c8>)
  400a44:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400a46:	b2c2      	uxtb	r2, r0
  400a48:	2101      	movs	r1, #1
  400a4a:	4620      	mov	r0, r4
  400a4c:	4b2a      	ldr	r3, [pc, #168]	; (400af8 <ssd1306_init+0x1cc>)
  400a4e:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400a50:	4620      	mov	r0, r4
  400a52:	4b2a      	ldr	r3, [pc, #168]	; (400afc <ssd1306_init+0x1d0>)
  400a54:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400a56:	2301      	movs	r3, #1
  400a58:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a5a:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400a5c:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a60:	4c27      	ldr	r4, [pc, #156]	; (400b00 <ssd1306_init+0x1d4>)
  400a62:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a64:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400a66:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a6a:	47a0      	blx	r4
  400a6c:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400a6e:	20a8      	movs	r0, #168	; 0xa8
  400a70:	4c24      	ldr	r4, [pc, #144]	; (400b04 <ssd1306_init+0x1d8>)
  400a72:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400a74:	201f      	movs	r0, #31
  400a76:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400a78:	20d3      	movs	r0, #211	; 0xd3
  400a7a:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400a7c:	2000      	movs	r0, #0
  400a7e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400a80:	2040      	movs	r0, #64	; 0x40
  400a82:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400a84:	20a1      	movs	r0, #161	; 0xa1
  400a86:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400a88:	20c8      	movs	r0, #200	; 0xc8
  400a8a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a8c:	20da      	movs	r0, #218	; 0xda
  400a8e:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a90:	4648      	mov	r0, r9
  400a92:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a94:	2081      	movs	r0, #129	; 0x81
  400a96:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a98:	208f      	movs	r0, #143	; 0x8f
  400a9a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a9c:	20a4      	movs	r0, #164	; 0xa4
  400a9e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400aa0:	20a6      	movs	r0, #166	; 0xa6
  400aa2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400aa4:	20d5      	movs	r0, #213	; 0xd5
  400aa6:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400aa8:	4640      	mov	r0, r8
  400aaa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400aac:	208d      	movs	r0, #141	; 0x8d
  400aae:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400ab0:	2014      	movs	r0, #20
  400ab2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400ab4:	20db      	movs	r0, #219	; 0xdb
  400ab6:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400ab8:	2040      	movs	r0, #64	; 0x40
  400aba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400abc:	20d9      	movs	r0, #217	; 0xd9
  400abe:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400ac0:	20f1      	movs	r0, #241	; 0xf1
  400ac2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400ac4:	20af      	movs	r0, #175	; 0xaf
  400ac6:	47a0      	blx	r4
  400ac8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400acc:	400e1200 	.word	0x400e1200
  400ad0:	400e1000 	.word	0x400e1000
  400ad4:	00400e11 	.word	0x00400e11
  400ad8:	40008000 	.word	0x40008000
  400adc:	004002cb 	.word	0x004002cb
  400ae0:	0040028f 	.word	0x0040028f
  400ae4:	004002ad 	.word	0x004002ad
  400ae8:	00400311 	.word	0x00400311
  400aec:	08f0d180 	.word	0x08f0d180
  400af0:	001e8480 	.word	0x001e8480
  400af4:	00400325 	.word	0x00400325
  400af8:	0040033b 	.word	0x0040033b
  400afc:	00400219 	.word	0x00400219
  400b00:	20400001 	.word	0x20400001
  400b04:	004008ed 	.word	0x004008ed
  400b08:	400e1400 	.word	0x400e1400

00400b0c <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400b0c:	b538      	push	{r3, r4, r5, lr}
  400b0e:	4605      	mov	r5, r0
  400b10:	2208      	movs	r2, #8
  400b12:	4b09      	ldr	r3, [pc, #36]	; (400b38 <ssd1306_write_data+0x2c>)
  400b14:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400b16:	4c09      	ldr	r4, [pc, #36]	; (400b3c <ssd1306_write_data+0x30>)
  400b18:	2101      	movs	r1, #1
  400b1a:	4620      	mov	r0, r4
  400b1c:	4b08      	ldr	r3, [pc, #32]	; (400b40 <ssd1306_write_data+0x34>)
  400b1e:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400b20:	2301      	movs	r3, #1
  400b22:	461a      	mov	r2, r3
  400b24:	4629      	mov	r1, r5
  400b26:	4620      	mov	r0, r4
  400b28:	4c06      	ldr	r4, [pc, #24]	; (400b44 <ssd1306_write_data+0x38>)
  400b2a:	47a0      	blx	r4
	delay_us(10);
  400b2c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400b30:	4b05      	ldr	r3, [pc, #20]	; (400b48 <ssd1306_write_data+0x3c>)
  400b32:	4798      	blx	r3
  400b34:	bd38      	pop	{r3, r4, r5, pc}
  400b36:	bf00      	nop
  400b38:	400e1000 	.word	0x400e1000
  400b3c:	40008000 	.word	0x40008000
  400b40:	00400245 	.word	0x00400245
  400b44:	0040025b 	.word	0x0040025b
  400b48:	20400001 	.word	0x20400001

00400b4c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b4c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b4e:	4810      	ldr	r0, [pc, #64]	; (400b90 <sysclk_init+0x44>)
  400b50:	4b10      	ldr	r3, [pc, #64]	; (400b94 <sysclk_init+0x48>)
  400b52:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b54:	213e      	movs	r1, #62	; 0x3e
  400b56:	2000      	movs	r0, #0
  400b58:	4b0f      	ldr	r3, [pc, #60]	; (400b98 <sysclk_init+0x4c>)
  400b5a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b5c:	4c0f      	ldr	r4, [pc, #60]	; (400b9c <sysclk_init+0x50>)
  400b5e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b60:	2800      	cmp	r0, #0
  400b62:	d0fc      	beq.n	400b5e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b64:	4b0e      	ldr	r3, [pc, #56]	; (400ba0 <sysclk_init+0x54>)
  400b66:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b68:	4a0e      	ldr	r2, [pc, #56]	; (400ba4 <sysclk_init+0x58>)
  400b6a:	4b0f      	ldr	r3, [pc, #60]	; (400ba8 <sysclk_init+0x5c>)
  400b6c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400b6e:	4c0f      	ldr	r4, [pc, #60]	; (400bac <sysclk_init+0x60>)
  400b70:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b72:	2800      	cmp	r0, #0
  400b74:	d0fc      	beq.n	400b70 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400b76:	2002      	movs	r0, #2
  400b78:	4b0d      	ldr	r3, [pc, #52]	; (400bb0 <sysclk_init+0x64>)
  400b7a:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b7c:	2000      	movs	r0, #0
  400b7e:	4b0d      	ldr	r3, [pc, #52]	; (400bb4 <sysclk_init+0x68>)
  400b80:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b82:	4b0d      	ldr	r3, [pc, #52]	; (400bb8 <sysclk_init+0x6c>)
  400b84:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b86:	4802      	ldr	r0, [pc, #8]	; (400b90 <sysclk_init+0x44>)
  400b88:	4b02      	ldr	r3, [pc, #8]	; (400b94 <sysclk_init+0x48>)
  400b8a:	4798      	blx	r3
  400b8c:	bd10      	pop	{r4, pc}
  400b8e:	bf00      	nop
  400b90:	11e1a300 	.word	0x11e1a300
  400b94:	00401615 	.word	0x00401615
  400b98:	004010a1 	.word	0x004010a1
  400b9c:	004010f5 	.word	0x004010f5
  400ba0:	00401105 	.word	0x00401105
  400ba4:	20183f01 	.word	0x20183f01
  400ba8:	400e0600 	.word	0x400e0600
  400bac:	00401115 	.word	0x00401115
  400bb0:	00401005 	.word	0x00401005
  400bb4:	0040103d 	.word	0x0040103d
  400bb8:	00401509 	.word	0x00401509

00400bbc <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400bbe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400bc2:	4b48      	ldr	r3, [pc, #288]	; (400ce4 <board_init+0x128>)
  400bc4:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400bc6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bca:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400bce:	4b46      	ldr	r3, [pc, #280]	; (400ce8 <board_init+0x12c>)
  400bd0:	2200      	movs	r2, #0
  400bd2:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400bd6:	695a      	ldr	r2, [r3, #20]
  400bd8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400bdc:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400bde:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400be2:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400be6:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400bea:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400bee:	f007 0007 	and.w	r0, r7, #7
  400bf2:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400bf4:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400bf8:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400bfc:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400c00:	f3bf 8f4f 	dsb	sy
  400c04:	f04f 34ff 	mov.w	r4, #4294967295
  400c08:	fa04 fc00 	lsl.w	ip, r4, r0
  400c0c:	fa06 f000 	lsl.w	r0, r6, r0
  400c10:	fa04 f40e 	lsl.w	r4, r4, lr
  400c14:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400c18:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400c1a:	463a      	mov	r2, r7
  400c1c:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400c1e:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400c22:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400c26:	3a01      	subs	r2, #1
  400c28:	4423      	add	r3, r4
  400c2a:	f1b2 3fff 	cmp.w	r2, #4294967295
  400c2e:	d1f6      	bne.n	400c1e <board_init+0x62>
        } while(sets--);
  400c30:	3e01      	subs	r6, #1
  400c32:	4460      	add	r0, ip
  400c34:	f1b6 3fff 	cmp.w	r6, #4294967295
  400c38:	d1ef      	bne.n	400c1a <board_init+0x5e>
  400c3a:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400c3e:	4b2a      	ldr	r3, [pc, #168]	; (400ce8 <board_init+0x12c>)
  400c40:	695a      	ldr	r2, [r3, #20]
  400c42:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400c46:	615a      	str	r2, [r3, #20]
  400c48:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c4c:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c50:	4a26      	ldr	r2, [pc, #152]	; (400cec <board_init+0x130>)
  400c52:	4927      	ldr	r1, [pc, #156]	; (400cf0 <board_init+0x134>)
  400c54:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c56:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400c5a:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400c5c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c60:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400c64:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400c68:	f022 0201 	bic.w	r2, r2, #1
  400c6c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400c70:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400c74:	f022 0201 	bic.w	r2, r2, #1
  400c78:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400c7c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c80:	f3bf 8f6f 	isb	sy
  400c84:	200a      	movs	r0, #10
  400c86:	4c1b      	ldr	r4, [pc, #108]	; (400cf4 <board_init+0x138>)
  400c88:	47a0      	blx	r4
  400c8a:	200b      	movs	r0, #11
  400c8c:	47a0      	blx	r4
  400c8e:	200c      	movs	r0, #12
  400c90:	47a0      	blx	r4
  400c92:	2010      	movs	r0, #16
  400c94:	47a0      	blx	r4
  400c96:	2011      	movs	r0, #17
  400c98:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c9a:	4b17      	ldr	r3, [pc, #92]	; (400cf8 <board_init+0x13c>)
  400c9c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400ca0:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400ca2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400ca6:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400ca8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400cac:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400cb0:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400cb2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400cb6:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400cb8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400cbc:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400cbe:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400cc0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400cc4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400cc6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cca:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ccc:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400cce:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400cd2:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400cd4:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400cd8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400cdc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400ce0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ce2:	bf00      	nop
  400ce4:	400e1850 	.word	0x400e1850
  400ce8:	e000ed00 	.word	0xe000ed00
  400cec:	400e0c00 	.word	0x400e0c00
  400cf0:	5a00080c 	.word	0x5a00080c
  400cf4:	00401125 	.word	0x00401125
  400cf8:	400e1200 	.word	0x400e1200

00400cfc <pio_set_debounce_filter>:
void pio_set_debounce_filter(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_cut_off)
{
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Set Debouncing, 0 bit field no effect */
	p_pio->PIO_IFSCER = ul_mask;
  400cfc:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
	/*
	 * The debouncing filter can filter a pulse of less than 1/2 Period of a
	 * programmable Divided Slow Clock:
	 * Tdiv_slclk = ((DIV+1)*2).Tslow_clock
	 */
	p_pio->PIO_SCDR = PIO_SCDR_DIV((FREQ_SLOW_CLOCK_EXT /
  400d00:	0053      	lsls	r3, r2, #1
  400d02:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400d06:	fbb2 f2f3 	udiv	r2, r2, r3
  400d0a:	3a01      	subs	r2, #1
  400d0c:	f3c2 020d 	ubfx	r2, r2, #0, #14
  400d10:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
  400d14:	4770      	bx	lr

00400d16 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400d16:	6301      	str	r1, [r0, #48]	; 0x30
  400d18:	4770      	bx	lr

00400d1a <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400d1a:	6341      	str	r1, [r0, #52]	; 0x34
  400d1c:	4770      	bx	lr

00400d1e <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400d1e:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d20:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d24:	d03a      	beq.n	400d9c <pio_set_peripheral+0x7e>
  400d26:	d813      	bhi.n	400d50 <pio_set_peripheral+0x32>
  400d28:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d2c:	d025      	beq.n	400d7a <pio_set_peripheral+0x5c>
  400d2e:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d32:	d10a      	bne.n	400d4a <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d34:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d36:	4313      	orrs	r3, r2
  400d38:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400d3a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d3c:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d3e:	400b      	ands	r3, r1
  400d40:	ea23 0302 	bic.w	r3, r3, r2
  400d44:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400d46:	6042      	str	r2, [r0, #4]
  400d48:	4770      	bx	lr
	switch (ul_type) {
  400d4a:	2900      	cmp	r1, #0
  400d4c:	d1fb      	bne.n	400d46 <pio_set_peripheral+0x28>
  400d4e:	4770      	bx	lr
  400d50:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d54:	d021      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d56:	d809      	bhi.n	400d6c <pio_set_peripheral+0x4e>
  400d58:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d5c:	d1f3      	bne.n	400d46 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d5e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d60:	4313      	orrs	r3, r2
  400d62:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d64:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d66:	4313      	orrs	r3, r2
  400d68:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d6a:	e7ec      	b.n	400d46 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d6c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d70:	d013      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d72:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d76:	d010      	beq.n	400d9a <pio_set_peripheral+0x7c>
  400d78:	e7e5      	b.n	400d46 <pio_set_peripheral+0x28>
{
  400d7a:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d7c:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d7e:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d80:	43d3      	mvns	r3, r2
  400d82:	4021      	ands	r1, r4
  400d84:	461c      	mov	r4, r3
  400d86:	4019      	ands	r1, r3
  400d88:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d8a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d8c:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d8e:	400b      	ands	r3, r1
  400d90:	4023      	ands	r3, r4
  400d92:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d94:	6042      	str	r2, [r0, #4]
}
  400d96:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d9a:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d9c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d9e:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400da0:	400b      	ands	r3, r1
  400da2:	ea23 0302 	bic.w	r3, r3, r2
  400da6:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400da8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400daa:	4313      	orrs	r3, r2
  400dac:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dae:	e7ca      	b.n	400d46 <pio_set_peripheral+0x28>

00400db0 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400db0:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400db2:	f012 0f01 	tst.w	r2, #1
  400db6:	d10d      	bne.n	400dd4 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400db8:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400dba:	f012 0f0a 	tst.w	r2, #10
  400dbe:	d00b      	beq.n	400dd8 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400dc0:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400dc2:	f012 0f02 	tst.w	r2, #2
  400dc6:	d109      	bne.n	400ddc <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400dc8:	f012 0f08 	tst.w	r2, #8
  400dcc:	d008      	beq.n	400de0 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400dce:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400dd2:	e005      	b.n	400de0 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400dd4:	6641      	str	r1, [r0, #100]	; 0x64
  400dd6:	e7f0      	b.n	400dba <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400dd8:	6241      	str	r1, [r0, #36]	; 0x24
  400dda:	e7f2      	b.n	400dc2 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400ddc:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400de0:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400de2:	6001      	str	r1, [r0, #0]
  400de4:	4770      	bx	lr

00400de6 <pio_set_output>:
{
  400de6:	b410      	push	{r4}
  400de8:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400dea:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400dec:	b94c      	cbnz	r4, 400e02 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400dee:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400df0:	b14b      	cbz	r3, 400e06 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400df2:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400df4:	b94a      	cbnz	r2, 400e0a <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400df6:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400df8:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400dfa:	6001      	str	r1, [r0, #0]
}
  400dfc:	f85d 4b04 	ldr.w	r4, [sp], #4
  400e00:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400e02:	6641      	str	r1, [r0, #100]	; 0x64
  400e04:	e7f4      	b.n	400df0 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400e06:	6541      	str	r1, [r0, #84]	; 0x54
  400e08:	e7f4      	b.n	400df4 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400e0a:	6301      	str	r1, [r0, #48]	; 0x30
  400e0c:	e7f4      	b.n	400df8 <pio_set_output+0x12>
	...

00400e10 <pio_configure>:
{
  400e10:	b570      	push	{r4, r5, r6, lr}
  400e12:	b082      	sub	sp, #8
  400e14:	4605      	mov	r5, r0
  400e16:	4616      	mov	r6, r2
  400e18:	461c      	mov	r4, r3
	switch (ul_type) {
  400e1a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400e1e:	d014      	beq.n	400e4a <pio_configure+0x3a>
  400e20:	d90a      	bls.n	400e38 <pio_configure+0x28>
  400e22:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e26:	d024      	beq.n	400e72 <pio_configure+0x62>
  400e28:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e2c:	d021      	beq.n	400e72 <pio_configure+0x62>
  400e2e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400e32:	d017      	beq.n	400e64 <pio_configure+0x54>
		return 0;
  400e34:	2000      	movs	r0, #0
  400e36:	e01a      	b.n	400e6e <pio_configure+0x5e>
	switch (ul_type) {
  400e38:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e3c:	d005      	beq.n	400e4a <pio_configure+0x3a>
  400e3e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e42:	d002      	beq.n	400e4a <pio_configure+0x3a>
  400e44:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e48:	d1f4      	bne.n	400e34 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400e4a:	4632      	mov	r2, r6
  400e4c:	4628      	mov	r0, r5
  400e4e:	4b11      	ldr	r3, [pc, #68]	; (400e94 <pio_configure+0x84>)
  400e50:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e52:	f014 0f01 	tst.w	r4, #1
  400e56:	d102      	bne.n	400e5e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400e58:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400e5a:	2001      	movs	r0, #1
  400e5c:	e007      	b.n	400e6e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400e5e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400e60:	2001      	movs	r0, #1
  400e62:	e004      	b.n	400e6e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e64:	461a      	mov	r2, r3
  400e66:	4631      	mov	r1, r6
  400e68:	4b0b      	ldr	r3, [pc, #44]	; (400e98 <pio_configure+0x88>)
  400e6a:	4798      	blx	r3
	return 1;
  400e6c:	2001      	movs	r0, #1
}
  400e6e:	b002      	add	sp, #8
  400e70:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400e72:	f004 0301 	and.w	r3, r4, #1
  400e76:	9300      	str	r3, [sp, #0]
  400e78:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400e7c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e80:	bf14      	ite	ne
  400e82:	2200      	movne	r2, #0
  400e84:	2201      	moveq	r2, #1
  400e86:	4631      	mov	r1, r6
  400e88:	4628      	mov	r0, r5
  400e8a:	4c04      	ldr	r4, [pc, #16]	; (400e9c <pio_configure+0x8c>)
  400e8c:	47a0      	blx	r4
	return 1;
  400e8e:	2001      	movs	r0, #1
		break;
  400e90:	e7ed      	b.n	400e6e <pio_configure+0x5e>
  400e92:	bf00      	nop
  400e94:	00400d1f 	.word	0x00400d1f
  400e98:	00400db1 	.word	0x00400db1
  400e9c:	00400de7 	.word	0x00400de7

00400ea0 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400ea0:	f012 0f10 	tst.w	r2, #16
  400ea4:	d012      	beq.n	400ecc <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400ea6:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400eaa:	f012 0f20 	tst.w	r2, #32
  400eae:	d007      	beq.n	400ec0 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400eb0:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400eb4:	f012 0f40 	tst.w	r2, #64	; 0x40
  400eb8:	d005      	beq.n	400ec6 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400eba:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400ebe:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400ec0:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ec4:	e7f6      	b.n	400eb4 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400ec6:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400eca:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400ecc:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400ed0:	4770      	bx	lr

00400ed2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400ed2:	6401      	str	r1, [r0, #64]	; 0x40
  400ed4:	4770      	bx	lr

00400ed6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400ed6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400ed8:	4770      	bx	lr

00400eda <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400eda:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400edc:	4770      	bx	lr
	...

00400ee0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400ee4:	4604      	mov	r4, r0
  400ee6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400ee8:	4b0e      	ldr	r3, [pc, #56]	; (400f24 <pio_handler_process+0x44>)
  400eea:	4798      	blx	r3
  400eec:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400eee:	4620      	mov	r0, r4
  400ef0:	4b0d      	ldr	r3, [pc, #52]	; (400f28 <pio_handler_process+0x48>)
  400ef2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400ef4:	4005      	ands	r5, r0
  400ef6:	d013      	beq.n	400f20 <pio_handler_process+0x40>
  400ef8:	4c0c      	ldr	r4, [pc, #48]	; (400f2c <pio_handler_process+0x4c>)
  400efa:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400efe:	e003      	b.n	400f08 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400f00:	42b4      	cmp	r4, r6
  400f02:	d00d      	beq.n	400f20 <pio_handler_process+0x40>
  400f04:	3410      	adds	r4, #16
		while (status != 0) {
  400f06:	b15d      	cbz	r5, 400f20 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400f08:	6820      	ldr	r0, [r4, #0]
  400f0a:	4540      	cmp	r0, r8
  400f0c:	d1f8      	bne.n	400f00 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400f0e:	6861      	ldr	r1, [r4, #4]
  400f10:	4229      	tst	r1, r5
  400f12:	d0f5      	beq.n	400f00 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400f14:	68e3      	ldr	r3, [r4, #12]
  400f16:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400f18:	6863      	ldr	r3, [r4, #4]
  400f1a:	ea25 0503 	bic.w	r5, r5, r3
  400f1e:	e7ef      	b.n	400f00 <pio_handler_process+0x20>
  400f20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f24:	00400ed7 	.word	0x00400ed7
  400f28:	00400edb 	.word	0x00400edb
  400f2c:	20400bf4 	.word	0x20400bf4

00400f30 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400f30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400f32:	4c18      	ldr	r4, [pc, #96]	; (400f94 <pio_handler_set+0x64>)
  400f34:	6826      	ldr	r6, [r4, #0]
  400f36:	2e06      	cmp	r6, #6
  400f38:	d82a      	bhi.n	400f90 <pio_handler_set+0x60>
  400f3a:	f04f 0c00 	mov.w	ip, #0
  400f3e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f40:	4f15      	ldr	r7, [pc, #84]	; (400f98 <pio_handler_set+0x68>)
  400f42:	e004      	b.n	400f4e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400f44:	3401      	adds	r4, #1
  400f46:	b2e4      	uxtb	r4, r4
  400f48:	46a4      	mov	ip, r4
  400f4a:	42a6      	cmp	r6, r4
  400f4c:	d309      	bcc.n	400f62 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400f4e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f50:	0125      	lsls	r5, r4, #4
  400f52:	597d      	ldr	r5, [r7, r5]
  400f54:	428d      	cmp	r5, r1
  400f56:	d1f5      	bne.n	400f44 <pio_handler_set+0x14>
  400f58:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f5c:	686d      	ldr	r5, [r5, #4]
  400f5e:	4295      	cmp	r5, r2
  400f60:	d1f0      	bne.n	400f44 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f62:	4d0d      	ldr	r5, [pc, #52]	; (400f98 <pio_handler_set+0x68>)
  400f64:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f68:	eb05 040e 	add.w	r4, r5, lr
  400f6c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f70:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f72:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f74:	9906      	ldr	r1, [sp, #24]
  400f76:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f78:	3601      	adds	r6, #1
  400f7a:	4566      	cmp	r6, ip
  400f7c:	d005      	beq.n	400f8a <pio_handler_set+0x5a>
  400f7e:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f80:	461a      	mov	r2, r3
  400f82:	4b06      	ldr	r3, [pc, #24]	; (400f9c <pio_handler_set+0x6c>)
  400f84:	4798      	blx	r3

	return 0;
  400f86:	2000      	movs	r0, #0
  400f88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400f8a:	4902      	ldr	r1, [pc, #8]	; (400f94 <pio_handler_set+0x64>)
  400f8c:	600e      	str	r6, [r1, #0]
  400f8e:	e7f6      	b.n	400f7e <pio_handler_set+0x4e>
		return 1;
  400f90:	2001      	movs	r0, #1
}
  400f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f94:	20400c64 	.word	0x20400c64
  400f98:	20400bf4 	.word	0x20400bf4
  400f9c:	00400ea1 	.word	0x00400ea1

00400fa0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400fa0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400fa2:	210a      	movs	r1, #10
  400fa4:	4801      	ldr	r0, [pc, #4]	; (400fac <PIOA_Handler+0xc>)
  400fa6:	4b02      	ldr	r3, [pc, #8]	; (400fb0 <PIOA_Handler+0x10>)
  400fa8:	4798      	blx	r3
  400faa:	bd08      	pop	{r3, pc}
  400fac:	400e0e00 	.word	0x400e0e00
  400fb0:	00400ee1 	.word	0x00400ee1

00400fb4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400fb4:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400fb6:	210b      	movs	r1, #11
  400fb8:	4801      	ldr	r0, [pc, #4]	; (400fc0 <PIOB_Handler+0xc>)
  400fba:	4b02      	ldr	r3, [pc, #8]	; (400fc4 <PIOB_Handler+0x10>)
  400fbc:	4798      	blx	r3
  400fbe:	bd08      	pop	{r3, pc}
  400fc0:	400e1000 	.word	0x400e1000
  400fc4:	00400ee1 	.word	0x00400ee1

00400fc8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400fc8:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400fca:	210c      	movs	r1, #12
  400fcc:	4801      	ldr	r0, [pc, #4]	; (400fd4 <PIOC_Handler+0xc>)
  400fce:	4b02      	ldr	r3, [pc, #8]	; (400fd8 <PIOC_Handler+0x10>)
  400fd0:	4798      	blx	r3
  400fd2:	bd08      	pop	{r3, pc}
  400fd4:	400e1200 	.word	0x400e1200
  400fd8:	00400ee1 	.word	0x00400ee1

00400fdc <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400fdc:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400fde:	2110      	movs	r1, #16
  400fe0:	4801      	ldr	r0, [pc, #4]	; (400fe8 <PIOD_Handler+0xc>)
  400fe2:	4b02      	ldr	r3, [pc, #8]	; (400fec <PIOD_Handler+0x10>)
  400fe4:	4798      	blx	r3
  400fe6:	bd08      	pop	{r3, pc}
  400fe8:	400e1400 	.word	0x400e1400
  400fec:	00400ee1 	.word	0x00400ee1

00400ff0 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400ff0:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400ff2:	2111      	movs	r1, #17
  400ff4:	4801      	ldr	r0, [pc, #4]	; (400ffc <PIOE_Handler+0xc>)
  400ff6:	4b02      	ldr	r3, [pc, #8]	; (401000 <PIOE_Handler+0x10>)
  400ff8:	4798      	blx	r3
  400ffa:	bd08      	pop	{r3, pc}
  400ffc:	400e1600 	.word	0x400e1600
  401000:	00400ee1 	.word	0x00400ee1

00401004 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  401004:	2803      	cmp	r0, #3
  401006:	d011      	beq.n	40102c <pmc_mck_set_division+0x28>
  401008:	2804      	cmp	r0, #4
  40100a:	d012      	beq.n	401032 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  40100c:	2802      	cmp	r0, #2
  40100e:	bf0c      	ite	eq
  401010:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401014:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  401016:	4a08      	ldr	r2, [pc, #32]	; (401038 <pmc_mck_set_division+0x34>)
  401018:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40101a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40101e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  401020:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401022:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401024:	f013 0f08 	tst.w	r3, #8
  401028:	d0fb      	beq.n	401022 <pmc_mck_set_division+0x1e>
}
  40102a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  40102c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  401030:	e7f1      	b.n	401016 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  401032:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  401036:	e7ee      	b.n	401016 <pmc_mck_set_division+0x12>
  401038:	400e0600 	.word	0x400e0600

0040103c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  40103c:	4a17      	ldr	r2, [pc, #92]	; (40109c <pmc_switch_mck_to_pllack+0x60>)
  40103e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401040:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401044:	4318      	orrs	r0, r3
  401046:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401048:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40104a:	f013 0f08 	tst.w	r3, #8
  40104e:	d10a      	bne.n	401066 <pmc_switch_mck_to_pllack+0x2a>
  401050:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401054:	4911      	ldr	r1, [pc, #68]	; (40109c <pmc_switch_mck_to_pllack+0x60>)
  401056:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401058:	f012 0f08 	tst.w	r2, #8
  40105c:	d103      	bne.n	401066 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40105e:	3b01      	subs	r3, #1
  401060:	d1f9      	bne.n	401056 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  401062:	2001      	movs	r0, #1
  401064:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401066:	4a0d      	ldr	r2, [pc, #52]	; (40109c <pmc_switch_mck_to_pllack+0x60>)
  401068:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40106a:	f023 0303 	bic.w	r3, r3, #3
  40106e:	f043 0302 	orr.w	r3, r3, #2
  401072:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401074:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401076:	f013 0f08 	tst.w	r3, #8
  40107a:	d10a      	bne.n	401092 <pmc_switch_mck_to_pllack+0x56>
  40107c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401080:	4906      	ldr	r1, [pc, #24]	; (40109c <pmc_switch_mck_to_pllack+0x60>)
  401082:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401084:	f012 0f08 	tst.w	r2, #8
  401088:	d105      	bne.n	401096 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40108a:	3b01      	subs	r3, #1
  40108c:	d1f9      	bne.n	401082 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40108e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401090:	4770      	bx	lr
	return 0;
  401092:	2000      	movs	r0, #0
  401094:	4770      	bx	lr
  401096:	2000      	movs	r0, #0
  401098:	4770      	bx	lr
  40109a:	bf00      	nop
  40109c:	400e0600 	.word	0x400e0600

004010a0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4010a0:	b9a0      	cbnz	r0, 4010cc <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010a2:	480e      	ldr	r0, [pc, #56]	; (4010dc <pmc_switch_mainck_to_xtal+0x3c>)
  4010a4:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4010a6:	0209      	lsls	r1, r1, #8
  4010a8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4010aa:	4a0d      	ldr	r2, [pc, #52]	; (4010e0 <pmc_switch_mainck_to_xtal+0x40>)
  4010ac:	401a      	ands	r2, r3
  4010ae:	4b0d      	ldr	r3, [pc, #52]	; (4010e4 <pmc_switch_mainck_to_xtal+0x44>)
  4010b0:	4313      	orrs	r3, r2
  4010b2:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010b4:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4010b6:	4602      	mov	r2, r0
  4010b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010ba:	f013 0f01 	tst.w	r3, #1
  4010be:	d0fb      	beq.n	4010b8 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4010c0:	4a06      	ldr	r2, [pc, #24]	; (4010dc <pmc_switch_mainck_to_xtal+0x3c>)
  4010c2:	6a11      	ldr	r1, [r2, #32]
  4010c4:	4b08      	ldr	r3, [pc, #32]	; (4010e8 <pmc_switch_mainck_to_xtal+0x48>)
  4010c6:	430b      	orrs	r3, r1
  4010c8:	6213      	str	r3, [r2, #32]
  4010ca:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010cc:	4903      	ldr	r1, [pc, #12]	; (4010dc <pmc_switch_mainck_to_xtal+0x3c>)
  4010ce:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4010d0:	4a06      	ldr	r2, [pc, #24]	; (4010ec <pmc_switch_mainck_to_xtal+0x4c>)
  4010d2:	401a      	ands	r2, r3
  4010d4:	4b06      	ldr	r3, [pc, #24]	; (4010f0 <pmc_switch_mainck_to_xtal+0x50>)
  4010d6:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010d8:	620b      	str	r3, [r1, #32]
  4010da:	4770      	bx	lr
  4010dc:	400e0600 	.word	0x400e0600
  4010e0:	ffc8fffc 	.word	0xffc8fffc
  4010e4:	00370001 	.word	0x00370001
  4010e8:	01370000 	.word	0x01370000
  4010ec:	fec8fffc 	.word	0xfec8fffc
  4010f0:	01370002 	.word	0x01370002

004010f4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4010f4:	4b02      	ldr	r3, [pc, #8]	; (401100 <pmc_osc_is_ready_mainck+0xc>)
  4010f6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010f8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4010fc:	4770      	bx	lr
  4010fe:	bf00      	nop
  401100:	400e0600 	.word	0x400e0600

00401104 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401104:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401108:	4b01      	ldr	r3, [pc, #4]	; (401110 <pmc_disable_pllack+0xc>)
  40110a:	629a      	str	r2, [r3, #40]	; 0x28
  40110c:	4770      	bx	lr
  40110e:	bf00      	nop
  401110:	400e0600 	.word	0x400e0600

00401114 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401114:	4b02      	ldr	r3, [pc, #8]	; (401120 <pmc_is_locked_pllack+0xc>)
  401116:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401118:	f000 0002 	and.w	r0, r0, #2
  40111c:	4770      	bx	lr
  40111e:	bf00      	nop
  401120:	400e0600 	.word	0x400e0600

00401124 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401124:	283f      	cmp	r0, #63	; 0x3f
  401126:	d81e      	bhi.n	401166 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401128:	281f      	cmp	r0, #31
  40112a:	d80c      	bhi.n	401146 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40112c:	4b11      	ldr	r3, [pc, #68]	; (401174 <pmc_enable_periph_clk+0x50>)
  40112e:	699a      	ldr	r2, [r3, #24]
  401130:	2301      	movs	r3, #1
  401132:	4083      	lsls	r3, r0
  401134:	4393      	bics	r3, r2
  401136:	d018      	beq.n	40116a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401138:	2301      	movs	r3, #1
  40113a:	fa03 f000 	lsl.w	r0, r3, r0
  40113e:	4b0d      	ldr	r3, [pc, #52]	; (401174 <pmc_enable_periph_clk+0x50>)
  401140:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  401142:	2000      	movs	r0, #0
  401144:	4770      	bx	lr
		ul_id -= 32;
  401146:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401148:	4b0a      	ldr	r3, [pc, #40]	; (401174 <pmc_enable_periph_clk+0x50>)
  40114a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40114e:	2301      	movs	r3, #1
  401150:	4083      	lsls	r3, r0
  401152:	4393      	bics	r3, r2
  401154:	d00b      	beq.n	40116e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401156:	2301      	movs	r3, #1
  401158:	fa03 f000 	lsl.w	r0, r3, r0
  40115c:	4b05      	ldr	r3, [pc, #20]	; (401174 <pmc_enable_periph_clk+0x50>)
  40115e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  401162:	2000      	movs	r0, #0
  401164:	4770      	bx	lr
		return 1;
  401166:	2001      	movs	r0, #1
  401168:	4770      	bx	lr
	return 0;
  40116a:	2000      	movs	r0, #0
  40116c:	4770      	bx	lr
  40116e:	2000      	movs	r0, #0
}
  401170:	4770      	bx	lr
  401172:	bf00      	nop
  401174:	400e0600 	.word	0x400e0600

00401178 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  401178:	4770      	bx	lr
	...

0040117c <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  40117c:	4a10      	ldr	r2, [pc, #64]	; (4011c0 <pmc_enable_waitmode+0x44>)
  40117e:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401180:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401184:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401188:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  40118a:	6a11      	ldr	r1, [r2, #32]
  40118c:	4b0d      	ldr	r3, [pc, #52]	; (4011c4 <pmc_enable_waitmode+0x48>)
  40118e:	430b      	orrs	r3, r1
  401190:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401192:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401194:	f013 0f08 	tst.w	r3, #8
  401198:	d0fb      	beq.n	401192 <pmc_enable_waitmode+0x16>
  40119a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  40119e:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  4011a0:	3b01      	subs	r3, #1
  4011a2:	d1fc      	bne.n	40119e <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  4011a4:	4a06      	ldr	r2, [pc, #24]	; (4011c0 <pmc_enable_waitmode+0x44>)
  4011a6:	6a13      	ldr	r3, [r2, #32]
  4011a8:	f013 0f08 	tst.w	r3, #8
  4011ac:	d0fb      	beq.n	4011a6 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  4011ae:	4a04      	ldr	r2, [pc, #16]	; (4011c0 <pmc_enable_waitmode+0x44>)
  4011b0:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4011b2:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4011b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  4011ba:	6713      	str	r3, [r2, #112]	; 0x70
  4011bc:	4770      	bx	lr
  4011be:	bf00      	nop
  4011c0:	400e0600 	.word	0x400e0600
  4011c4:	00370004 	.word	0x00370004

004011c8 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  4011c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  4011cc:	1e43      	subs	r3, r0, #1
  4011ce:	2b04      	cmp	r3, #4
  4011d0:	f200 8107 	bhi.w	4013e2 <pmc_sleep+0x21a>
  4011d4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4011d8:	00050005 	.word	0x00050005
  4011dc:	00150015 	.word	0x00150015
  4011e0:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  4011e2:	4a81      	ldr	r2, [pc, #516]	; (4013e8 <pmc_sleep+0x220>)
  4011e4:	6913      	ldr	r3, [r2, #16]
  4011e6:	f023 0304 	bic.w	r3, r3, #4
  4011ea:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  4011ec:	2201      	movs	r2, #1
  4011ee:	4b7f      	ldr	r3, [pc, #508]	; (4013ec <pmc_sleep+0x224>)
  4011f0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4011f2:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4011f6:	b662      	cpsie	i
  __ASM volatile ("dsb");
  4011f8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4011fc:	bf30      	wfi
  4011fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401202:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  401204:	2803      	cmp	r0, #3
  401206:	bf0c      	ite	eq
  401208:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  40120a:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  40120e:	4b78      	ldr	r3, [pc, #480]	; (4013f0 <pmc_sleep+0x228>)
  401210:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  401212:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401214:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401218:	2200      	movs	r2, #0
  40121a:	4b74      	ldr	r3, [pc, #464]	; (4013ec <pmc_sleep+0x224>)
  40121c:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  40121e:	2201      	movs	r2, #1
  401220:	4b74      	ldr	r3, [pc, #464]	; (4013f4 <pmc_sleep+0x22c>)
  401222:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401224:	4b74      	ldr	r3, [pc, #464]	; (4013f8 <pmc_sleep+0x230>)
  401226:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401228:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  40122a:	4a74      	ldr	r2, [pc, #464]	; (4013fc <pmc_sleep+0x234>)
  40122c:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  401230:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  401232:	4a73      	ldr	r2, [pc, #460]	; (401400 <pmc_sleep+0x238>)
  401234:	433a      	orrs	r2, r7
  401236:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401238:	f005 0903 	and.w	r9, r5, #3
  40123c:	f1b9 0f01 	cmp.w	r9, #1
  401240:	f240 8089 	bls.w	401356 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401244:	f025 0103 	bic.w	r1, r5, #3
  401248:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  40124c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40124e:	461a      	mov	r2, r3
  401250:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401252:	f013 0f08 	tst.w	r3, #8
  401256:	d0fb      	beq.n	401250 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401258:	f011 0f70 	tst.w	r1, #112	; 0x70
  40125c:	d008      	beq.n	401270 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  40125e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  401262:	4b65      	ldr	r3, [pc, #404]	; (4013f8 <pmc_sleep+0x230>)
  401264:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401266:	461a      	mov	r2, r3
  401268:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40126a:	f013 0f08 	tst.w	r3, #8
  40126e:	d0fb      	beq.n	401268 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401270:	4b64      	ldr	r3, [pc, #400]	; (401404 <pmc_sleep+0x23c>)
  401272:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401274:	4a60      	ldr	r2, [pc, #384]	; (4013f8 <pmc_sleep+0x230>)
  401276:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401278:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40127c:	d0fb      	beq.n	401276 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40127e:	4a5e      	ldr	r2, [pc, #376]	; (4013f8 <pmc_sleep+0x230>)
  401280:	6a11      	ldr	r1, [r2, #32]
  401282:	4b61      	ldr	r3, [pc, #388]	; (401408 <pmc_sleep+0x240>)
  401284:	400b      	ands	r3, r1
  401286:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40128a:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  40128c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40128e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401292:	d0fb      	beq.n	40128c <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401294:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401298:	4a58      	ldr	r2, [pc, #352]	; (4013fc <pmc_sleep+0x234>)
  40129a:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  40129c:	2c04      	cmp	r4, #4
  40129e:	d05c      	beq.n	40135a <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  4012a0:	4c52      	ldr	r4, [pc, #328]	; (4013ec <pmc_sleep+0x224>)
  4012a2:	2301      	movs	r3, #1
  4012a4:	7023      	strb	r3, [r4, #0]
  4012a6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012aa:	b662      	cpsie	i

		pmc_enable_waitmode();
  4012ac:	4b57      	ldr	r3, [pc, #348]	; (40140c <pmc_sleep+0x244>)
  4012ae:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4012b0:	b672      	cpsid	i
  4012b2:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  4012b6:	2300      	movs	r3, #0
  4012b8:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  4012ba:	f017 0f02 	tst.w	r7, #2
  4012be:	d055      	beq.n	40136c <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4012c0:	4a4d      	ldr	r2, [pc, #308]	; (4013f8 <pmc_sleep+0x230>)
  4012c2:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4012c4:	4952      	ldr	r1, [pc, #328]	; (401410 <pmc_sleep+0x248>)
  4012c6:	4019      	ands	r1, r3
  4012c8:	4b52      	ldr	r3, [pc, #328]	; (401414 <pmc_sleep+0x24c>)
  4012ca:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4012cc:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012ce:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4012d0:	4b51      	ldr	r3, [pc, #324]	; (401418 <pmc_sleep+0x250>)
  4012d2:	400b      	ands	r3, r1
  4012d4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012d8:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4012da:	4b50      	ldr	r3, [pc, #320]	; (40141c <pmc_sleep+0x254>)
  4012dc:	4033      	ands	r3, r6
  4012de:	2b00      	cmp	r3, #0
  4012e0:	d06e      	beq.n	4013c0 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4012e2:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4012e6:	4b44      	ldr	r3, [pc, #272]	; (4013f8 <pmc_sleep+0x230>)
  4012e8:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4012ea:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4012ec:	f1b9 0f02 	cmp.w	r9, #2
  4012f0:	d104      	bne.n	4012fc <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4012f2:	4a41      	ldr	r2, [pc, #260]	; (4013f8 <pmc_sleep+0x230>)
  4012f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012f6:	f013 0f02 	tst.w	r3, #2
  4012fa:	d0fb      	beq.n	4012f4 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4012fc:	4a3e      	ldr	r2, [pc, #248]	; (4013f8 <pmc_sleep+0x230>)
  4012fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401300:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  401304:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401308:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  40130a:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40130c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40130e:	f013 0f08 	tst.w	r3, #8
  401312:	d0fb      	beq.n	40130c <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401314:	4b39      	ldr	r3, [pc, #228]	; (4013fc <pmc_sleep+0x234>)
  401316:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  40131a:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40131e:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401320:	461a      	mov	r2, r3
  401322:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401324:	f013 0f08 	tst.w	r3, #8
  401328:	d0fb      	beq.n	401322 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  40132a:	4a33      	ldr	r2, [pc, #204]	; (4013f8 <pmc_sleep+0x230>)
  40132c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40132e:	420b      	tst	r3, r1
  401330:	d0fc      	beq.n	40132c <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  401332:	2200      	movs	r2, #0
  401334:	4b2f      	ldr	r3, [pc, #188]	; (4013f4 <pmc_sleep+0x22c>)
  401336:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401338:	4b39      	ldr	r3, [pc, #228]	; (401420 <pmc_sleep+0x258>)
  40133a:	681b      	ldr	r3, [r3, #0]
  40133c:	b11b      	cbz	r3, 401346 <pmc_sleep+0x17e>
			callback_clocks_restored();
  40133e:	4798      	blx	r3
			callback_clocks_restored = NULL;
  401340:	2200      	movs	r2, #0
  401342:	4b37      	ldr	r3, [pc, #220]	; (401420 <pmc_sleep+0x258>)
  401344:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401346:	2201      	movs	r2, #1
  401348:	4b28      	ldr	r3, [pc, #160]	; (4013ec <pmc_sleep+0x224>)
  40134a:	701a      	strb	r2, [r3, #0]
  40134c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401350:	b662      	cpsie	i
  401352:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401356:	4629      	mov	r1, r5
  401358:	e77e      	b.n	401258 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40135a:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  40135e:	6a11      	ldr	r1, [r2, #32]
  401360:	4b30      	ldr	r3, [pc, #192]	; (401424 <pmc_sleep+0x25c>)
  401362:	400b      	ands	r3, r1
  401364:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401368:	6213      	str	r3, [r2, #32]
  40136a:	e799      	b.n	4012a0 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  40136c:	f017 0f01 	tst.w	r7, #1
  401370:	d0b3      	beq.n	4012da <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  401372:	4b21      	ldr	r3, [pc, #132]	; (4013f8 <pmc_sleep+0x230>)
  401374:	6a1b      	ldr	r3, [r3, #32]
  401376:	f013 0f01 	tst.w	r3, #1
  40137a:	d10b      	bne.n	401394 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40137c:	491e      	ldr	r1, [pc, #120]	; (4013f8 <pmc_sleep+0x230>)
  40137e:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401380:	4a29      	ldr	r2, [pc, #164]	; (401428 <pmc_sleep+0x260>)
  401382:	401a      	ands	r2, r3
  401384:	4b29      	ldr	r3, [pc, #164]	; (40142c <pmc_sleep+0x264>)
  401386:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401388:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40138a:	460a      	mov	r2, r1
  40138c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40138e:	f013 0f01 	tst.w	r3, #1
  401392:	d0fb      	beq.n	40138c <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401394:	4b18      	ldr	r3, [pc, #96]	; (4013f8 <pmc_sleep+0x230>)
  401396:	6a1b      	ldr	r3, [r3, #32]
  401398:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40139c:	d108      	bne.n	4013b0 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40139e:	4a16      	ldr	r2, [pc, #88]	; (4013f8 <pmc_sleep+0x230>)
  4013a0:	6a11      	ldr	r1, [r2, #32]
  4013a2:	4b23      	ldr	r3, [pc, #140]	; (401430 <pmc_sleep+0x268>)
  4013a4:	430b      	orrs	r3, r1
  4013a6:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4013a8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013aa:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4013ae:	d0fb      	beq.n	4013a8 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4013b0:	4a11      	ldr	r2, [pc, #68]	; (4013f8 <pmc_sleep+0x230>)
  4013b2:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  4013b4:	4b18      	ldr	r3, [pc, #96]	; (401418 <pmc_sleep+0x250>)
  4013b6:	400b      	ands	r3, r1
  4013b8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4013bc:	6213      	str	r3, [r2, #32]
  4013be:	e78c      	b.n	4012da <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  4013c0:	2100      	movs	r1, #0
  4013c2:	e793      	b.n	4012ec <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  4013c4:	4a08      	ldr	r2, [pc, #32]	; (4013e8 <pmc_sleep+0x220>)
  4013c6:	6913      	ldr	r3, [r2, #16]
  4013c8:	f043 0304 	orr.w	r3, r3, #4
  4013cc:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  4013ce:	4a19      	ldr	r2, [pc, #100]	; (401434 <pmc_sleep+0x26c>)
  4013d0:	4b19      	ldr	r3, [pc, #100]	; (401438 <pmc_sleep+0x270>)
  4013d2:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  4013d4:	2201      	movs	r2, #1
  4013d6:	4b05      	ldr	r3, [pc, #20]	; (4013ec <pmc_sleep+0x224>)
  4013d8:	701a      	strb	r2, [r3, #0]
  4013da:	f3bf 8f5f 	dmb	sy
  4013de:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4013e0:	bf30      	wfi
  4013e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4013e6:	bf00      	nop
  4013e8:	e000ed00 	.word	0xe000ed00
  4013ec:	20400018 	.word	0x20400018
  4013f0:	00401179 	.word	0x00401179
  4013f4:	20400c68 	.word	0x20400c68
  4013f8:	400e0600 	.word	0x400e0600
  4013fc:	400e0c00 	.word	0x400e0c00
  401400:	00370008 	.word	0x00370008
  401404:	00401105 	.word	0x00401105
  401408:	fec8ffff 	.word	0xfec8ffff
  40140c:	0040117d 	.word	0x0040117d
  401410:	fec8fffc 	.word	0xfec8fffc
  401414:	01370002 	.word	0x01370002
  401418:	ffc8ff87 	.word	0xffc8ff87
  40141c:	07ff0000 	.word	0x07ff0000
  401420:	20400c6c 	.word	0x20400c6c
  401424:	ffc8fffe 	.word	0xffc8fffe
  401428:	ffc8fffc 	.word	0xffc8fffc
  40142c:	00370001 	.word	0x00370001
  401430:	01370000 	.word	0x01370000
  401434:	a5000004 	.word	0xa5000004
  401438:	400e1810 	.word	0x400e1810

0040143c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40143c:	e7fe      	b.n	40143c <Dummy_Handler>
	...

00401440 <Reset_Handler>:
{
  401440:	b500      	push	{lr}
  401442:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401444:	4b25      	ldr	r3, [pc, #148]	; (4014dc <Reset_Handler+0x9c>)
  401446:	4a26      	ldr	r2, [pc, #152]	; (4014e0 <Reset_Handler+0xa0>)
  401448:	429a      	cmp	r2, r3
  40144a:	d010      	beq.n	40146e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  40144c:	4b25      	ldr	r3, [pc, #148]	; (4014e4 <Reset_Handler+0xa4>)
  40144e:	4a23      	ldr	r2, [pc, #140]	; (4014dc <Reset_Handler+0x9c>)
  401450:	429a      	cmp	r2, r3
  401452:	d20c      	bcs.n	40146e <Reset_Handler+0x2e>
  401454:	3b01      	subs	r3, #1
  401456:	1a9b      	subs	r3, r3, r2
  401458:	f023 0303 	bic.w	r3, r3, #3
  40145c:	3304      	adds	r3, #4
  40145e:	4413      	add	r3, r2
  401460:	491f      	ldr	r1, [pc, #124]	; (4014e0 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401462:	f851 0b04 	ldr.w	r0, [r1], #4
  401466:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  40146a:	429a      	cmp	r2, r3
  40146c:	d1f9      	bne.n	401462 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40146e:	4b1e      	ldr	r3, [pc, #120]	; (4014e8 <Reset_Handler+0xa8>)
  401470:	4a1e      	ldr	r2, [pc, #120]	; (4014ec <Reset_Handler+0xac>)
  401472:	429a      	cmp	r2, r3
  401474:	d20a      	bcs.n	40148c <Reset_Handler+0x4c>
  401476:	3b01      	subs	r3, #1
  401478:	1a9b      	subs	r3, r3, r2
  40147a:	f023 0303 	bic.w	r3, r3, #3
  40147e:	3304      	adds	r3, #4
  401480:	4413      	add	r3, r2
                *pDest++ = 0;
  401482:	2100      	movs	r1, #0
  401484:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401488:	4293      	cmp	r3, r2
  40148a:	d1fb      	bne.n	401484 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40148c:	4a18      	ldr	r2, [pc, #96]	; (4014f0 <Reset_Handler+0xb0>)
  40148e:	4b19      	ldr	r3, [pc, #100]	; (4014f4 <Reset_Handler+0xb4>)
  401490:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401494:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401496:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40149a:	fab3 f383 	clz	r3, r3
  40149e:	095b      	lsrs	r3, r3, #5
  4014a0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4014a2:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4014a4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4014a8:	2200      	movs	r2, #0
  4014aa:	4b13      	ldr	r3, [pc, #76]	; (4014f8 <Reset_Handler+0xb8>)
  4014ac:	701a      	strb	r2, [r3, #0]
	return flags;
  4014ae:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4014b0:	4a12      	ldr	r2, [pc, #72]	; (4014fc <Reset_Handler+0xbc>)
  4014b2:	6813      	ldr	r3, [r2, #0]
  4014b4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4014b8:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  4014ba:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4014be:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4014c2:	b129      	cbz	r1, 4014d0 <Reset_Handler+0x90>
		cpu_irq_enable();
  4014c4:	2201      	movs	r2, #1
  4014c6:	4b0c      	ldr	r3, [pc, #48]	; (4014f8 <Reset_Handler+0xb8>)
  4014c8:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4014ca:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4014ce:	b662      	cpsie	i
        __libc_init_array();
  4014d0:	4b0b      	ldr	r3, [pc, #44]	; (401500 <Reset_Handler+0xc0>)
  4014d2:	4798      	blx	r3
        main();
  4014d4:	4b0b      	ldr	r3, [pc, #44]	; (401504 <Reset_Handler+0xc4>)
  4014d6:	4798      	blx	r3
  4014d8:	e7fe      	b.n	4014d8 <Reset_Handler+0x98>
  4014da:	bf00      	nop
  4014dc:	20400000 	.word	0x20400000
  4014e0:	0040712c 	.word	0x0040712c
  4014e4:	204009d0 	.word	0x204009d0
  4014e8:	20400cd8 	.word	0x20400cd8
  4014ec:	204009d0 	.word	0x204009d0
  4014f0:	e000ed00 	.word	0xe000ed00
  4014f4:	00400000 	.word	0x00400000
  4014f8:	20400018 	.word	0x20400018
  4014fc:	e000ed88 	.word	0xe000ed88
  401500:	004022d1 	.word	0x004022d1
  401504:	004019f1 	.word	0x004019f1

00401508 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401508:	4b3b      	ldr	r3, [pc, #236]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  40150a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40150c:	f003 0303 	and.w	r3, r3, #3
  401510:	2b01      	cmp	r3, #1
  401512:	d01d      	beq.n	401550 <SystemCoreClockUpdate+0x48>
  401514:	b183      	cbz	r3, 401538 <SystemCoreClockUpdate+0x30>
  401516:	2b02      	cmp	r3, #2
  401518:	d036      	beq.n	401588 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40151a:	4b37      	ldr	r3, [pc, #220]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  40151c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40151e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401522:	2b70      	cmp	r3, #112	; 0x70
  401524:	d05f      	beq.n	4015e6 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401526:	4b34      	ldr	r3, [pc, #208]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  401528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40152a:	4934      	ldr	r1, [pc, #208]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  40152c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401530:	680b      	ldr	r3, [r1, #0]
  401532:	40d3      	lsrs	r3, r2
  401534:	600b      	str	r3, [r1, #0]
  401536:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401538:	4b31      	ldr	r3, [pc, #196]	; (401600 <SystemCoreClockUpdate+0xf8>)
  40153a:	695b      	ldr	r3, [r3, #20]
  40153c:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401540:	bf14      	ite	ne
  401542:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401546:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40154a:	4b2c      	ldr	r3, [pc, #176]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  40154c:	601a      	str	r2, [r3, #0]
  40154e:	e7e4      	b.n	40151a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401550:	4b29      	ldr	r3, [pc, #164]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  401552:	6a1b      	ldr	r3, [r3, #32]
  401554:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401558:	d003      	beq.n	401562 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  40155a:	4a2a      	ldr	r2, [pc, #168]	; (401604 <SystemCoreClockUpdate+0xfc>)
  40155c:	4b27      	ldr	r3, [pc, #156]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  40155e:	601a      	str	r2, [r3, #0]
  401560:	e7db      	b.n	40151a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401562:	4a29      	ldr	r2, [pc, #164]	; (401608 <SystemCoreClockUpdate+0x100>)
  401564:	4b25      	ldr	r3, [pc, #148]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  401566:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401568:	4b23      	ldr	r3, [pc, #140]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  40156a:	6a1b      	ldr	r3, [r3, #32]
  40156c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401570:	2b10      	cmp	r3, #16
  401572:	d005      	beq.n	401580 <SystemCoreClockUpdate+0x78>
  401574:	2b20      	cmp	r3, #32
  401576:	d1d0      	bne.n	40151a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401578:	4a22      	ldr	r2, [pc, #136]	; (401604 <SystemCoreClockUpdate+0xfc>)
  40157a:	4b20      	ldr	r3, [pc, #128]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  40157c:	601a      	str	r2, [r3, #0]
          break;
  40157e:	e7cc      	b.n	40151a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401580:	4a22      	ldr	r2, [pc, #136]	; (40160c <SystemCoreClockUpdate+0x104>)
  401582:	4b1e      	ldr	r3, [pc, #120]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  401584:	601a      	str	r2, [r3, #0]
          break;
  401586:	e7c8      	b.n	40151a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401588:	4b1b      	ldr	r3, [pc, #108]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  40158a:	6a1b      	ldr	r3, [r3, #32]
  40158c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401590:	d016      	beq.n	4015c0 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401592:	4a1c      	ldr	r2, [pc, #112]	; (401604 <SystemCoreClockUpdate+0xfc>)
  401594:	4b19      	ldr	r3, [pc, #100]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  401596:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401598:	4b17      	ldr	r3, [pc, #92]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  40159a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40159c:	f003 0303 	and.w	r3, r3, #3
  4015a0:	2b02      	cmp	r3, #2
  4015a2:	d1ba      	bne.n	40151a <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4015a4:	4a14      	ldr	r2, [pc, #80]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  4015a6:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4015a8:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4015aa:	4814      	ldr	r0, [pc, #80]	; (4015fc <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4015ac:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4015b0:	6803      	ldr	r3, [r0, #0]
  4015b2:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4015b6:	b2d2      	uxtb	r2, r2
  4015b8:	fbb3 f3f2 	udiv	r3, r3, r2
  4015bc:	6003      	str	r3, [r0, #0]
  4015be:	e7ac      	b.n	40151a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4015c0:	4a11      	ldr	r2, [pc, #68]	; (401608 <SystemCoreClockUpdate+0x100>)
  4015c2:	4b0e      	ldr	r3, [pc, #56]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  4015c4:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4015c6:	4b0c      	ldr	r3, [pc, #48]	; (4015f8 <SystemCoreClockUpdate+0xf0>)
  4015c8:	6a1b      	ldr	r3, [r3, #32]
  4015ca:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4015ce:	2b10      	cmp	r3, #16
  4015d0:	d005      	beq.n	4015de <SystemCoreClockUpdate+0xd6>
  4015d2:	2b20      	cmp	r3, #32
  4015d4:	d1e0      	bne.n	401598 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4015d6:	4a0b      	ldr	r2, [pc, #44]	; (401604 <SystemCoreClockUpdate+0xfc>)
  4015d8:	4b08      	ldr	r3, [pc, #32]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  4015da:	601a      	str	r2, [r3, #0]
          break;
  4015dc:	e7dc      	b.n	401598 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4015de:	4a0b      	ldr	r2, [pc, #44]	; (40160c <SystemCoreClockUpdate+0x104>)
  4015e0:	4b06      	ldr	r3, [pc, #24]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  4015e2:	601a      	str	r2, [r3, #0]
          break;
  4015e4:	e7d8      	b.n	401598 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4015e6:	4a05      	ldr	r2, [pc, #20]	; (4015fc <SystemCoreClockUpdate+0xf4>)
  4015e8:	6813      	ldr	r3, [r2, #0]
  4015ea:	4909      	ldr	r1, [pc, #36]	; (401610 <SystemCoreClockUpdate+0x108>)
  4015ec:	fba1 1303 	umull	r1, r3, r1, r3
  4015f0:	085b      	lsrs	r3, r3, #1
  4015f2:	6013      	str	r3, [r2, #0]
  4015f4:	4770      	bx	lr
  4015f6:	bf00      	nop
  4015f8:	400e0600 	.word	0x400e0600
  4015fc:	2040001c 	.word	0x2040001c
  401600:	400e1810 	.word	0x400e1810
  401604:	00b71b00 	.word	0x00b71b00
  401608:	003d0900 	.word	0x003d0900
  40160c:	007a1200 	.word	0x007a1200
  401610:	aaaaaaab 	.word	0xaaaaaaab

00401614 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401614:	4b16      	ldr	r3, [pc, #88]	; (401670 <system_init_flash+0x5c>)
  401616:	4298      	cmp	r0, r3
  401618:	d913      	bls.n	401642 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40161a:	4b16      	ldr	r3, [pc, #88]	; (401674 <system_init_flash+0x60>)
  40161c:	4298      	cmp	r0, r3
  40161e:	d915      	bls.n	40164c <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401620:	4b15      	ldr	r3, [pc, #84]	; (401678 <system_init_flash+0x64>)
  401622:	4298      	cmp	r0, r3
  401624:	d916      	bls.n	401654 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401626:	4b15      	ldr	r3, [pc, #84]	; (40167c <system_init_flash+0x68>)
  401628:	4298      	cmp	r0, r3
  40162a:	d917      	bls.n	40165c <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  40162c:	4b14      	ldr	r3, [pc, #80]	; (401680 <system_init_flash+0x6c>)
  40162e:	4298      	cmp	r0, r3
  401630:	d918      	bls.n	401664 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401632:	4b14      	ldr	r3, [pc, #80]	; (401684 <system_init_flash+0x70>)
  401634:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401636:	bf94      	ite	ls
  401638:	4a13      	ldrls	r2, [pc, #76]	; (401688 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40163a:	4a14      	ldrhi	r2, [pc, #80]	; (40168c <system_init_flash+0x78>)
  40163c:	4b14      	ldr	r3, [pc, #80]	; (401690 <system_init_flash+0x7c>)
  40163e:	601a      	str	r2, [r3, #0]
  401640:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401642:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401646:	4b12      	ldr	r3, [pc, #72]	; (401690 <system_init_flash+0x7c>)
  401648:	601a      	str	r2, [r3, #0]
  40164a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40164c:	4a11      	ldr	r2, [pc, #68]	; (401694 <system_init_flash+0x80>)
  40164e:	4b10      	ldr	r3, [pc, #64]	; (401690 <system_init_flash+0x7c>)
  401650:	601a      	str	r2, [r3, #0]
  401652:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401654:	4a10      	ldr	r2, [pc, #64]	; (401698 <system_init_flash+0x84>)
  401656:	4b0e      	ldr	r3, [pc, #56]	; (401690 <system_init_flash+0x7c>)
  401658:	601a      	str	r2, [r3, #0]
  40165a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40165c:	4a0f      	ldr	r2, [pc, #60]	; (40169c <system_init_flash+0x88>)
  40165e:	4b0c      	ldr	r3, [pc, #48]	; (401690 <system_init_flash+0x7c>)
  401660:	601a      	str	r2, [r3, #0]
  401662:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401664:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401668:	4b09      	ldr	r3, [pc, #36]	; (401690 <system_init_flash+0x7c>)
  40166a:	601a      	str	r2, [r3, #0]
  40166c:	4770      	bx	lr
  40166e:	bf00      	nop
  401670:	015ef3bf 	.word	0x015ef3bf
  401674:	02bde77f 	.word	0x02bde77f
  401678:	041cdb3f 	.word	0x041cdb3f
  40167c:	057bceff 	.word	0x057bceff
  401680:	06dac2bf 	.word	0x06dac2bf
  401684:	0839b67f 	.word	0x0839b67f
  401688:	04000500 	.word	0x04000500
  40168c:	04000600 	.word	0x04000600
  401690:	400e0c00 	.word	0x400e0c00
  401694:	04000100 	.word	0x04000100
  401698:	04000200 	.word	0x04000200
  40169c:	04000300 	.word	0x04000300

004016a0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4016a0:	4b0a      	ldr	r3, [pc, #40]	; (4016cc <_sbrk+0x2c>)
  4016a2:	681b      	ldr	r3, [r3, #0]
  4016a4:	b153      	cbz	r3, 4016bc <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4016a6:	4b09      	ldr	r3, [pc, #36]	; (4016cc <_sbrk+0x2c>)
  4016a8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4016aa:	181a      	adds	r2, r3, r0
  4016ac:	4908      	ldr	r1, [pc, #32]	; (4016d0 <_sbrk+0x30>)
  4016ae:	4291      	cmp	r1, r2
  4016b0:	db08      	blt.n	4016c4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4016b2:	4610      	mov	r0, r2
  4016b4:	4a05      	ldr	r2, [pc, #20]	; (4016cc <_sbrk+0x2c>)
  4016b6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4016b8:	4618      	mov	r0, r3
  4016ba:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4016bc:	4a05      	ldr	r2, [pc, #20]	; (4016d4 <_sbrk+0x34>)
  4016be:	4b03      	ldr	r3, [pc, #12]	; (4016cc <_sbrk+0x2c>)
  4016c0:	601a      	str	r2, [r3, #0]
  4016c2:	e7f0      	b.n	4016a6 <_sbrk+0x6>
		return (caddr_t) -1;	
  4016c4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4016c8:	4770      	bx	lr
  4016ca:	bf00      	nop
  4016cc:	20400c70 	.word	0x20400c70
  4016d0:	2045fffc 	.word	0x2045fffc
  4016d4:	20402ed8 	.word	0x20402ed8

004016d8 <but1_callback>:
		//rtt_disable(RTT);
		}
}

void but1_callback(void){
	flag_but1 = 1;
  4016d8:	2201      	movs	r2, #1
  4016da:	4b01      	ldr	r3, [pc, #4]	; (4016e0 <but1_callback+0x8>)
  4016dc:	701a      	strb	r2, [r3, #0]
  4016de:	4770      	bx	lr
  4016e0:	20400c74 	.word	0x20400c74

004016e4 <echo_callback>:
void echo_callback(void){
  4016e4:	b530      	push	{r4, r5, lr}
  4016e6:	b083      	sub	sp, #12
	if (flag_echo == 0){
  4016e8:	4b1b      	ldr	r3, [pc, #108]	; (401758 <echo_callback+0x74>)
  4016ea:	781b      	ldrb	r3, [r3, #0]
  4016ec:	b14b      	cbz	r3, 401702 <echo_callback+0x1e>
		flag_echo = 0;
  4016ee:	2200      	movs	r2, #0
  4016f0:	4b19      	ldr	r3, [pc, #100]	; (401758 <echo_callback+0x74>)
  4016f2:	701a      	strb	r2, [r3, #0]
		tempo = rtt_read_timer_value(RTT);
  4016f4:	4819      	ldr	r0, [pc, #100]	; (40175c <echo_callback+0x78>)
  4016f6:	4b1a      	ldr	r3, [pc, #104]	; (401760 <echo_callback+0x7c>)
  4016f8:	4798      	blx	r3
  4016fa:	4b1a      	ldr	r3, [pc, #104]	; (401764 <echo_callback+0x80>)
  4016fc:	6018      	str	r0, [r3, #0]
}
  4016fe:	b003      	add	sp, #12
  401700:	bd30      	pop	{r4, r5, pc}
	int alarm_time = ((float)4/340)*freq*2;
  401702:	4b19      	ldr	r3, [pc, #100]	; (401768 <echo_callback+0x84>)
  401704:	681d      	ldr	r5, [r3, #0]
		flag_echo = 1;
  401706:	2201      	movs	r2, #1
  401708:	4b13      	ldr	r3, [pc, #76]	; (401758 <echo_callback+0x74>)
  40170a:	701a      	strb	r2, [r3, #0]

static void RTT_init(float freqPrescale, uint32_t IrqNPulses, uint32_t rttIRQSource) {

	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
	
	rtt_sel_source(RTT, false);
  40170c:	4c13      	ldr	r4, [pc, #76]	; (40175c <echo_callback+0x78>)
  40170e:	2100      	movs	r1, #0
  401710:	4620      	mov	r0, r4
  401712:	4b16      	ldr	r3, [pc, #88]	; (40176c <echo_callback+0x88>)
  401714:	4798      	blx	r3
	int alarm_time = ((float)4/340)*freq*2;
  401716:	ee07 5a90 	vmov	s15, r5
  40171a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
	uint16_t pllPreScale = (int) (((float) 32768) / freqPrescale);
  40171e:	eddf 6a14 	vldr	s13, [pc, #80]	; 401770 <echo_callback+0x8c>
  401722:	ee86 7aa7 	vdiv.f32	s14, s13, s15
  401726:	eefd 7ac7 	vcvt.s32.f32	s15, s14
  40172a:	edcd 7a01 	vstr	s15, [sp, #4]
	rtt_init(RTT, pllPreScale);
  40172e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
  401732:	4620      	mov	r0, r4
  401734:	4b0f      	ldr	r3, [pc, #60]	; (401774 <echo_callback+0x90>)
  401736:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401738:	4b0f      	ldr	r3, [pc, #60]	; (401778 <echo_callback+0x94>)
  40173a:	2208      	movs	r2, #8
  40173c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401740:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHPR[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401744:	2180      	movs	r1, #128	; 0x80
  401746:	f883 1303 	strb.w	r1, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40174a:	601a      	str	r2, [r3, #0]

	/* Enable RTT interrupt */
	if (rttIRQSource & (RTT_MR_RTTINCIEN | RTT_MR_ALMIEN))
	rtt_enable_interrupt(RTT, rttIRQSource);
	else
	rtt_disable_interrupt(RTT, RTT_MR_RTTINCIEN | RTT_MR_ALMIEN);
  40174c:	f44f 3140 	mov.w	r1, #196608	; 0x30000
  401750:	4620      	mov	r0, r4
  401752:	4b0a      	ldr	r3, [pc, #40]	; (40177c <echo_callback+0x98>)
  401754:	4798      	blx	r3
  401756:	e7d2      	b.n	4016fe <echo_callback+0x1a>
  401758:	20400c75 	.word	0x20400c75
  40175c:	400e1830 	.word	0x400e1830
  401760:	00400201 	.word	0x00400201
  401764:	20400c78 	.word	0x20400c78
  401768:	20400020 	.word	0x20400020
  40176c:	004001c1 	.word	0x004001c1
  401770:	47000000 	.word	0x47000000
  401774:	004001ad 	.word	0x004001ad
  401778:	e000e100 	.word	0xe000e100
  40177c:	004001ed 	.word	0x004001ed

00401780 <BUT_init>:
void BUT_init(Pio *pio, uint32_t ul_id, uint32_t mask, int estado) {
  401780:	b570      	push	{r4, r5, r6, lr}
  401782:	4604      	mov	r4, r0
  401784:	4615      	mov	r5, r2
	pmc_enable_periph_clk(ul_id);
  401786:	4608      	mov	r0, r1
  401788:	4b07      	ldr	r3, [pc, #28]	; (4017a8 <BUT_init+0x28>)
  40178a:	4798      	blx	r3
	pio_configure(pio, PIO_INPUT, mask, PIO_PULLUP|PIO_DEBOUNCE);
  40178c:	2309      	movs	r3, #9
  40178e:	462a      	mov	r2, r5
  401790:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401794:	4620      	mov	r0, r4
  401796:	4e05      	ldr	r6, [pc, #20]	; (4017ac <BUT_init+0x2c>)
  401798:	47b0      	blx	r6
	pio_set_debounce_filter(pio, mask, 60);
  40179a:	223c      	movs	r2, #60	; 0x3c
  40179c:	4629      	mov	r1, r5
  40179e:	4620      	mov	r0, r4
  4017a0:	4b03      	ldr	r3, [pc, #12]	; (4017b0 <BUT_init+0x30>)
  4017a2:	4798      	blx	r3
  4017a4:	bd70      	pop	{r4, r5, r6, pc}
  4017a6:	bf00      	nop
  4017a8:	00401125 	.word	0x00401125
  4017ac:	00400e11 	.word	0x00400e11
  4017b0:	00400cfd 	.word	0x00400cfd

004017b4 <RTT_Handler>:
	
}

void RTT_Handler(void) {
  4017b4:	b508      	push	{r3, lr}
	uint32_t ul_status;

	/* Get RTT status - ACK */
	ul_status = rtt_get_status(RTT);
  4017b6:	4805      	ldr	r0, [pc, #20]	; (4017cc <RTT_Handler+0x18>)
  4017b8:	4b05      	ldr	r3, [pc, #20]	; (4017d0 <RTT_Handler+0x1c>)
  4017ba:	4798      	blx	r3

	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  4017bc:	f010 0f01 	tst.w	r0, #1
  4017c0:	d002      	beq.n	4017c8 <RTT_Handler+0x14>
		flag_error = 1;
  4017c2:	2201      	movs	r2, #1
  4017c4:	4b03      	ldr	r3, [pc, #12]	; (4017d4 <RTT_Handler+0x20>)
  4017c6:	701a      	strb	r2, [r3, #0]
  4017c8:	bd08      	pop	{r3, pc}
  4017ca:	bf00      	nop
  4017cc:	400e1830 	.word	0x400e1830
  4017d0:	00400215 	.word	0x00400215
  4017d4:	20400c76 	.word	0x20400c76

004017d8 <draw>:

static float get_time_rtt(){
	uint ul_previous_time = rtt_read_timer_value(RTT);
}

void draw (int time, int *medicoes){
  4017d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4017da:	ed2d 8b02 	vpush	{d8}
  4017de:	b089      	sub	sp, #36	; 0x24
	char string [20];
	float dist;
	dist = ((float)time/(freq*2))*340;
  4017e0:	ee07 0a90 	vmov	s15, r0
  4017e4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
  4017e8:	4b39      	ldr	r3, [pc, #228]	; (4018d0 <draw+0xf8>)
  4017ea:	681b      	ldr	r3, [r3, #0]
  4017ec:	005b      	lsls	r3, r3, #1
  4017ee:	ee07 3a90 	vmov	s15, r3
  4017f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
  4017f6:	ee87 8a27 	vdiv.f32	s16, s14, s15
  4017fa:	eddf 7a36 	vldr	s15, [pc, #216]	; 4018d4 <draw+0xfc>
  4017fe:	ee28 8a27 	vmul.f32	s16, s16, s15
	if(flag_error || dist > 4.0){
  401802:	4b35      	ldr	r3, [pc, #212]	; (4018d8 <draw+0x100>)
  401804:	781b      	ldrb	r3, [r3, #0]
  401806:	b93b      	cbnz	r3, 401818 <draw+0x40>
  401808:	460d      	mov	r5, r1
  40180a:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
  40180e:	eeb4 8ae7 	vcmpe.f32	s16, s15
  401812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
  401816:	dd0a      	ble.n	40182e <draw+0x56>
		sprintf(string, "Erro. %2.2f m");
  401818:	4930      	ldr	r1, [pc, #192]	; (4018dc <draw+0x104>)
  40181a:	a803      	add	r0, sp, #12
  40181c:	4b30      	ldr	r3, [pc, #192]	; (4018e0 <draw+0x108>)
  40181e:	4798      	blx	r3
		flag_error = 0;
  401820:	2200      	movs	r2, #0
  401822:	4b2d      	ldr	r3, [pc, #180]	; (4018d8 <draw+0x100>)
  401824:	701a      	strb	r2, [r3, #0]
		gfx_mono_generic_draw_filled_rect(0, 0, 127, 13, GFX_PIXEL_CLR);
		gfx_mono_draw_string(string,0 ,0, &sysfont);
		gfx_mono_generic_draw_rect(2, 14, 126, 18, GFX_PIXEL_SET);
		gfx_mono_draw_filled_circle(i, (int)(115.68-13*dist)/3.98,  1, GFX_PIXEL_SET, GFX_WHOLE);
	}
}
  401826:	b009      	add	sp, #36	; 0x24
  401828:	ecbd 8b02 	vpop	{d8}
  40182c:	bdf0      	pop	{r4, r5, r6, r7, pc}
		sprintf(string, "dist: %2.2f m", dist);
  40182e:	4e2d      	ldr	r6, [pc, #180]	; (4018e4 <draw+0x10c>)
  401830:	ee18 0a10 	vmov	r0, s16
  401834:	47b0      	blx	r6
  401836:	4602      	mov	r2, r0
  401838:	460b      	mov	r3, r1
  40183a:	492b      	ldr	r1, [pc, #172]	; (4018e8 <draw+0x110>)
  40183c:	a803      	add	r0, sp, #12
  40183e:	4c28      	ldr	r4, [pc, #160]	; (4018e0 <draw+0x108>)
  401840:	47a0      	blx	r4
		int i = 5 + 5**medicoes;
  401842:	682c      	ldr	r4, [r5, #0]
  401844:	3401      	adds	r4, #1
		*medicoes+=1;
  401846:	602c      	str	r4, [r5, #0]
		gfx_mono_generic_draw_filled_rect(0, 0, 127, 13, GFX_PIXEL_CLR);
  401848:	2500      	movs	r5, #0
  40184a:	9500      	str	r5, [sp, #0]
  40184c:	230d      	movs	r3, #13
  40184e:	227f      	movs	r2, #127	; 0x7f
  401850:	4629      	mov	r1, r5
  401852:	4628      	mov	r0, r5
  401854:	4f25      	ldr	r7, [pc, #148]	; (4018ec <draw+0x114>)
  401856:	47b8      	blx	r7
		gfx_mono_draw_string(string,0 ,0, &sysfont);
  401858:	4b25      	ldr	r3, [pc, #148]	; (4018f0 <draw+0x118>)
  40185a:	462a      	mov	r2, r5
  40185c:	4629      	mov	r1, r5
  40185e:	a803      	add	r0, sp, #12
  401860:	4d24      	ldr	r5, [pc, #144]	; (4018f4 <draw+0x11c>)
  401862:	47a8      	blx	r5
		gfx_mono_generic_draw_rect(2, 14, 126, 18, GFX_PIXEL_SET);
  401864:	2501      	movs	r5, #1
  401866:	9500      	str	r5, [sp, #0]
  401868:	2312      	movs	r3, #18
  40186a:	227e      	movs	r2, #126	; 0x7e
  40186c:	210e      	movs	r1, #14
  40186e:	2002      	movs	r0, #2
  401870:	4f21      	ldr	r7, [pc, #132]	; (4018f8 <draw+0x120>)
  401872:	47b8      	blx	r7
		gfx_mono_draw_filled_circle(i, (int)(115.68-13*dist)/3.98,  1, GFX_PIXEL_SET, GFX_WHOLE);
  401874:	eef2 7a0a 	vmov.f32	s15, #42	; 0x41500000  13.0
  401878:	ee68 7a27 	vmul.f32	s15, s16, s15
  40187c:	ee17 0a90 	vmov	r0, s15
  401880:	47b0      	blx	r6
  401882:	4602      	mov	r2, r0
  401884:	460b      	mov	r3, r1
  401886:	a10e      	add	r1, pc, #56	; (adr r1, 4018c0 <draw+0xe8>)
  401888:	e9d1 0100 	ldrd	r0, r1, [r1]
  40188c:	4e1b      	ldr	r6, [pc, #108]	; (4018fc <draw+0x124>)
  40188e:	47b0      	blx	r6
  401890:	4b1b      	ldr	r3, [pc, #108]	; (401900 <draw+0x128>)
  401892:	4798      	blx	r3
  401894:	4b1b      	ldr	r3, [pc, #108]	; (401904 <draw+0x12c>)
  401896:	4798      	blx	r3
  401898:	a30b      	add	r3, pc, #44	; (adr r3, 4018c8 <draw+0xf0>)
  40189a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40189e:	4e1a      	ldr	r6, [pc, #104]	; (401908 <draw+0x130>)
  4018a0:	47b0      	blx	r6
  4018a2:	4b1a      	ldr	r3, [pc, #104]	; (40190c <draw+0x134>)
  4018a4:	4798      	blx	r3
		int i = 5 + 5**medicoes;
  4018a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
		gfx_mono_draw_filled_circle(i, (int)(115.68-13*dist)/3.98,  1, GFX_PIXEL_SET, GFX_WHOLE);
  4018aa:	23ff      	movs	r3, #255	; 0xff
  4018ac:	9300      	str	r3, [sp, #0]
  4018ae:	462b      	mov	r3, r5
  4018b0:	462a      	mov	r2, r5
  4018b2:	b2c1      	uxtb	r1, r0
  4018b4:	b2e0      	uxtb	r0, r4
  4018b6:	4c16      	ldr	r4, [pc, #88]	; (401910 <draw+0x138>)
  4018b8:	47a0      	blx	r4
}
  4018ba:	e7b4      	b.n	401826 <draw+0x4e>
  4018bc:	f3af 8000 	nop.w
  4018c0:	1eb851ec 	.word	0x1eb851ec
  4018c4:	405ceb85 	.word	0x405ceb85
  4018c8:	3d70a3d7 	.word	0x3d70a3d7
  4018cc:	400fd70a 	.word	0x400fd70a
  4018d0:	20400020 	.word	0x20400020
  4018d4:	43aa0000 	.word	0x43aa0000
  4018d8:	20400c76 	.word	0x20400c76
  4018dc:	00406e58 	.word	0x00406e58
  4018e0:	004023bd 	.word	0x004023bd
  4018e4:	00401d75 	.word	0x00401d75
  4018e8:	00406e68 	.word	0x00406e68
  4018ec:	00400551 	.word	0x00400551
  4018f0:	2040000c 	.word	0x2040000c
  4018f4:	00400751 	.word	0x00400751
  4018f8:	00400501 	.word	0x00400501
  4018fc:	00401ab5 	.word	0x00401ab5
  401900:	00402241 	.word	0x00402241
  401904:	00401d51 	.word	0x00401d51
  401908:	00402071 	.word	0x00402071
  40190c:	00402291 	.word	0x00402291
  401910:	00400589 	.word	0x00400589

00401914 <io_init>:



void io_init(void){	
  401914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401918:	b083      	sub	sp, #12
	BUT_init(BUT1_PIO, BUT1_PIO_ID, BUT1_PIO_IDX_MASK, 1);
  40191a:	4c28      	ldr	r4, [pc, #160]	; (4019bc <io_init+0xa8>)
  40191c:	2301      	movs	r3, #1
  40191e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401922:	2110      	movs	r1, #16
  401924:	4620      	mov	r0, r4
  401926:	4d26      	ldr	r5, [pc, #152]	; (4019c0 <io_init+0xac>)
  401928:	47a8      	blx	r5
	pmc_enable_periph_clk(ECH_PIO_ID);
  40192a:	200a      	movs	r0, #10
  40192c:	4d25      	ldr	r5, [pc, #148]	; (4019c4 <io_init+0xb0>)
  40192e:	47a8      	blx	r5
	pmc_enable_periph_clk(TRG_PIO_ID);
  401930:	2010      	movs	r0, #16
  401932:	47a8      	blx	r5
	pio_set_output(TRG_PIO, TRG_PIO_IDX_MASK, 0, 0, 0);
  401934:	2200      	movs	r2, #0
  401936:	9200      	str	r2, [sp, #0]
  401938:	4613      	mov	r3, r2
  40193a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40193e:	4620      	mov	r0, r4
  401940:	4d21      	ldr	r5, [pc, #132]	; (4019c8 <io_init+0xb4>)
  401942:	47a8      	blx	r5
	pio_configure(ECH_PIO, PIO_INPUT, ECH_PIO_IDX_MASK, PIO_DEBOUNCE);
  401944:	4d21      	ldr	r5, [pc, #132]	; (4019cc <io_init+0xb8>)
  401946:	2308      	movs	r3, #8
  401948:	2240      	movs	r2, #64	; 0x40
  40194a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40194e:	4628      	mov	r0, r5
  401950:	4e1f      	ldr	r6, [pc, #124]	; (4019d0 <io_init+0xbc>)
  401952:	47b0      	blx	r6
	pio_set_debounce_filter(ECH_PIO_IDX, ECH_PIO_IDX_MASK, 60);
  401954:	223c      	movs	r2, #60	; 0x3c
  401956:	2140      	movs	r1, #64	; 0x40
  401958:	2006      	movs	r0, #6
  40195a:	4b1e      	ldr	r3, [pc, #120]	; (4019d4 <io_init+0xc0>)
  40195c:	4798      	blx	r3
	
	pio_handler_set(BUT1_PIO,
  40195e:	4b1e      	ldr	r3, [pc, #120]	; (4019d8 <io_init+0xc4>)
  401960:	9300      	str	r3, [sp, #0]
  401962:	2340      	movs	r3, #64	; 0x40
  401964:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401968:	2110      	movs	r1, #16
  40196a:	4620      	mov	r0, r4
  40196c:	f8df 9078 	ldr.w	r9, [pc, #120]	; 4019e8 <io_init+0xd4>
  401970:	47c8      	blx	r9
					BUT1_PIO_ID,
					BUT1_PIO_IDX_MASK,
					PIO_IT_EDGE,
					but1_callback);
	pio_enable_interrupt(BUT1_PIO, BUT1_PIO_IDX_MASK);
  401972:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401976:	4620      	mov	r0, r4
  401978:	f8df 8070 	ldr.w	r8, [pc, #112]	; 4019ec <io_init+0xd8>
  40197c:	47c0      	blx	r8
	pio_get_interrupt_status(BUT1_PIO);
  40197e:	4620      	mov	r0, r4
  401980:	4f16      	ldr	r7, [pc, #88]	; (4019dc <io_init+0xc8>)
  401982:	47b8      	blx	r7
  401984:	4c16      	ldr	r4, [pc, #88]	; (4019e0 <io_init+0xcc>)
  401986:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  40198a:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40198c:	2640      	movs	r6, #64	; 0x40
  40198e:	f884 6310 	strb.w	r6, [r4, #784]	; 0x310
	NVIC_EnableIRQ(BUT1_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 2);
	
	pio_handler_set(ECH_PIO,
  401992:	4b14      	ldr	r3, [pc, #80]	; (4019e4 <io_init+0xd0>)
  401994:	9300      	str	r3, [sp, #0]
  401996:	4633      	mov	r3, r6
  401998:	4632      	mov	r2, r6
  40199a:	210a      	movs	r1, #10
  40199c:	4628      	mov	r0, r5
  40199e:	47c8      	blx	r9
					ECH_PIO_ID,
					ECH_PIO_IDX_MASK,
					PIO_IT_EDGE,
					echo_callback);
	pio_enable_interrupt(ECH_PIO, ECH_PIO_IDX_MASK);
  4019a0:	4631      	mov	r1, r6
  4019a2:	4628      	mov	r0, r5
  4019a4:	47c0      	blx	r8
	pio_get_interrupt_status(ECH_PIO);
  4019a6:	4628      	mov	r0, r5
  4019a8:	47b8      	blx	r7
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4019aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4019ae:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4019b0:	2320      	movs	r3, #32
  4019b2:	f884 330a 	strb.w	r3, [r4, #778]	; 0x30a
	NVIC_EnableIRQ(ECH_PIO_ID);
	NVIC_SetPriority(ECH_PIO_ID, 1);
}
  4019b6:	b003      	add	sp, #12
  4019b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4019bc:	400e1400 	.word	0x400e1400
  4019c0:	00401781 	.word	0x00401781
  4019c4:	00401125 	.word	0x00401125
  4019c8:	00400de7 	.word	0x00400de7
  4019cc:	400e0e00 	.word	0x400e0e00
  4019d0:	00400e11 	.word	0x00400e11
  4019d4:	00400cfd 	.word	0x00400cfd
  4019d8:	004016d9 	.word	0x004016d9
  4019dc:	00400ed7 	.word	0x00400ed7
  4019e0:	e000e100 	.word	0xe000e100
  4019e4:	004016e5 	.word	0x004016e5
  4019e8:	00400f31 	.word	0x00400f31
  4019ec:	00400ed3 	.word	0x00400ed3

004019f0 <main>:

int main (void)
{
  4019f0:	b580      	push	{r7, lr}
  4019f2:	b084      	sub	sp, #16
	sysclk_init();
  4019f4:	4b1e      	ldr	r3, [pc, #120]	; (401a70 <main+0x80>)
  4019f6:	4798      	blx	r3
	WDT->WDT_MR = WDT_MR_WDDIS;
  4019f8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4019fc:	4b1d      	ldr	r3, [pc, #116]	; (401a74 <main+0x84>)
  4019fe:	605a      	str	r2, [r3, #4]
	io_init();	
  401a00:	4b1d      	ldr	r3, [pc, #116]	; (401a78 <main+0x88>)
  401a02:	4798      	blx	r3
	board_init();
  401a04:	4b1d      	ldr	r3, [pc, #116]	; (401a7c <main+0x8c>)
  401a06:	4798      	blx	r3
	delay_init();

	// Init OLED
	gfx_mono_ssd1306_init();
  401a08:	4b1d      	ldr	r3, [pc, #116]	; (401a80 <main+0x90>)
  401a0a:	4798      	blx	r3
	int medicoes = 0;
  401a0c:	2300      	movs	r3, #0
  401a0e:	9303      	str	r3, [sp, #12]
  /* Insert application code here, after the board has been initialized. */
	while(1) {
		if(flag_but1){
  401a10:	4c1c      	ldr	r4, [pc, #112]	; (401a84 <main+0x94>)
			draw(tempo, &medicoes);
			delay_ms(300);
  401a12:	4e1d      	ldr	r6, [pc, #116]	; (401a88 <main+0x98>)
			if(medicoes>24){
				medicoes = 0;
				gfx_mono_generic_draw_filled_rect(3, 16, 124, 14, GFX_PIXEL_CLR);
			}
			flag_but1 = 0;
			pio_set(TRG_PIO, TRG_PIO_IDX_MASK);
  401a14:	4d1d      	ldr	r5, [pc, #116]	; (401a8c <main+0x9c>)
  401a16:	e012      	b.n	401a3e <main+0x4e>
			flag_but1 = 0;
  401a18:	2300      	movs	r3, #0
  401a1a:	7023      	strb	r3, [r4, #0]
			pio_set(TRG_PIO, TRG_PIO_IDX_MASK);
  401a1c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401a20:	4628      	mov	r0, r5
  401a22:	4b1b      	ldr	r3, [pc, #108]	; (401a90 <main+0xa0>)
  401a24:	4798      	blx	r3
			delay_us(10);
  401a26:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  401a2a:	4b1a      	ldr	r3, [pc, #104]	; (401a94 <main+0xa4>)
  401a2c:	4798      	blx	r3
			pio_clear(TRG_PIO, TRG_PIO_IDX_MASK);
  401a2e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401a32:	4628      	mov	r0, r5
  401a34:	4b18      	ldr	r3, [pc, #96]	; (401a98 <main+0xa8>)
  401a36:	4798      	blx	r3
			
		}
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401a38:	2002      	movs	r0, #2
  401a3a:	4b18      	ldr	r3, [pc, #96]	; (401a9c <main+0xac>)
  401a3c:	4798      	blx	r3
		if(flag_but1){
  401a3e:	7823      	ldrb	r3, [r4, #0]
  401a40:	2b00      	cmp	r3, #0
  401a42:	d0f9      	beq.n	401a38 <main+0x48>
			draw(tempo, &medicoes);
  401a44:	4b16      	ldr	r3, [pc, #88]	; (401aa0 <main+0xb0>)
  401a46:	6818      	ldr	r0, [r3, #0]
  401a48:	a903      	add	r1, sp, #12
  401a4a:	4b16      	ldr	r3, [pc, #88]	; (401aa4 <main+0xb4>)
  401a4c:	4798      	blx	r3
			delay_ms(300);
  401a4e:	4630      	mov	r0, r6
  401a50:	4b10      	ldr	r3, [pc, #64]	; (401a94 <main+0xa4>)
  401a52:	4798      	blx	r3
			if(medicoes>24){
  401a54:	9b03      	ldr	r3, [sp, #12]
  401a56:	2b18      	cmp	r3, #24
  401a58:	ddde      	ble.n	401a18 <main+0x28>
				medicoes = 0;
  401a5a:	2300      	movs	r3, #0
  401a5c:	9303      	str	r3, [sp, #12]
				gfx_mono_generic_draw_filled_rect(3, 16, 124, 14, GFX_PIXEL_CLR);
  401a5e:	9300      	str	r3, [sp, #0]
  401a60:	230e      	movs	r3, #14
  401a62:	227c      	movs	r2, #124	; 0x7c
  401a64:	2110      	movs	r1, #16
  401a66:	2003      	movs	r0, #3
  401a68:	4f0f      	ldr	r7, [pc, #60]	; (401aa8 <main+0xb8>)
  401a6a:	47b8      	blx	r7
  401a6c:	e7d4      	b.n	401a18 <main+0x28>
  401a6e:	bf00      	nop
  401a70:	00400b4d 	.word	0x00400b4d
  401a74:	400e1850 	.word	0x400e1850
  401a78:	00401915 	.word	0x00401915
  401a7c:	00400bbd 	.word	0x00400bbd
  401a80:	004007e9 	.word	0x004007e9
  401a84:	20400c74 	.word	0x20400c74
  401a88:	00e7816d 	.word	0x00e7816d
  401a8c:	400e1400 	.word	0x400e1400
  401a90:	00400d17 	.word	0x00400d17
  401a94:	20400001 	.word	0x20400001
  401a98:	00400d1b 	.word	0x00400d1b
  401a9c:	004011c9 	.word	0x004011c9
  401aa0:	20400c78 	.word	0x20400c78
  401aa4:	004017d9 	.word	0x004017d9
  401aa8:	00400551 	.word	0x00400551

00401aac <__aeabi_drsub>:
  401aac:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401ab0:	e002      	b.n	401ab8 <__adddf3>
  401ab2:	bf00      	nop

00401ab4 <__aeabi_dsub>:
  401ab4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401ab8 <__adddf3>:
  401ab8:	b530      	push	{r4, r5, lr}
  401aba:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401abe:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401ac2:	ea94 0f05 	teq	r4, r5
  401ac6:	bf08      	it	eq
  401ac8:	ea90 0f02 	teqeq	r0, r2
  401acc:	bf1f      	itttt	ne
  401ace:	ea54 0c00 	orrsne.w	ip, r4, r0
  401ad2:	ea55 0c02 	orrsne.w	ip, r5, r2
  401ad6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401ada:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401ade:	f000 80e2 	beq.w	401ca6 <__adddf3+0x1ee>
  401ae2:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401ae6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401aea:	bfb8      	it	lt
  401aec:	426d      	neglt	r5, r5
  401aee:	dd0c      	ble.n	401b0a <__adddf3+0x52>
  401af0:	442c      	add	r4, r5
  401af2:	ea80 0202 	eor.w	r2, r0, r2
  401af6:	ea81 0303 	eor.w	r3, r1, r3
  401afa:	ea82 0000 	eor.w	r0, r2, r0
  401afe:	ea83 0101 	eor.w	r1, r3, r1
  401b02:	ea80 0202 	eor.w	r2, r0, r2
  401b06:	ea81 0303 	eor.w	r3, r1, r3
  401b0a:	2d36      	cmp	r5, #54	; 0x36
  401b0c:	bf88      	it	hi
  401b0e:	bd30      	pophi	{r4, r5, pc}
  401b10:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401b14:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401b18:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401b1c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401b20:	d002      	beq.n	401b28 <__adddf3+0x70>
  401b22:	4240      	negs	r0, r0
  401b24:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b28:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401b2c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401b30:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401b34:	d002      	beq.n	401b3c <__adddf3+0x84>
  401b36:	4252      	negs	r2, r2
  401b38:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401b3c:	ea94 0f05 	teq	r4, r5
  401b40:	f000 80a7 	beq.w	401c92 <__adddf3+0x1da>
  401b44:	f1a4 0401 	sub.w	r4, r4, #1
  401b48:	f1d5 0e20 	rsbs	lr, r5, #32
  401b4c:	db0d      	blt.n	401b6a <__adddf3+0xb2>
  401b4e:	fa02 fc0e 	lsl.w	ip, r2, lr
  401b52:	fa22 f205 	lsr.w	r2, r2, r5
  401b56:	1880      	adds	r0, r0, r2
  401b58:	f141 0100 	adc.w	r1, r1, #0
  401b5c:	fa03 f20e 	lsl.w	r2, r3, lr
  401b60:	1880      	adds	r0, r0, r2
  401b62:	fa43 f305 	asr.w	r3, r3, r5
  401b66:	4159      	adcs	r1, r3
  401b68:	e00e      	b.n	401b88 <__adddf3+0xd0>
  401b6a:	f1a5 0520 	sub.w	r5, r5, #32
  401b6e:	f10e 0e20 	add.w	lr, lr, #32
  401b72:	2a01      	cmp	r2, #1
  401b74:	fa03 fc0e 	lsl.w	ip, r3, lr
  401b78:	bf28      	it	cs
  401b7a:	f04c 0c02 	orrcs.w	ip, ip, #2
  401b7e:	fa43 f305 	asr.w	r3, r3, r5
  401b82:	18c0      	adds	r0, r0, r3
  401b84:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401b88:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401b8c:	d507      	bpl.n	401b9e <__adddf3+0xe6>
  401b8e:	f04f 0e00 	mov.w	lr, #0
  401b92:	f1dc 0c00 	rsbs	ip, ip, #0
  401b96:	eb7e 0000 	sbcs.w	r0, lr, r0
  401b9a:	eb6e 0101 	sbc.w	r1, lr, r1
  401b9e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401ba2:	d31b      	bcc.n	401bdc <__adddf3+0x124>
  401ba4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401ba8:	d30c      	bcc.n	401bc4 <__adddf3+0x10c>
  401baa:	0849      	lsrs	r1, r1, #1
  401bac:	ea5f 0030 	movs.w	r0, r0, rrx
  401bb0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401bb4:	f104 0401 	add.w	r4, r4, #1
  401bb8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401bbc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401bc0:	f080 809a 	bcs.w	401cf8 <__adddf3+0x240>
  401bc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401bc8:	bf08      	it	eq
  401bca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401bce:	f150 0000 	adcs.w	r0, r0, #0
  401bd2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401bd6:	ea41 0105 	orr.w	r1, r1, r5
  401bda:	bd30      	pop	{r4, r5, pc}
  401bdc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401be0:	4140      	adcs	r0, r0
  401be2:	eb41 0101 	adc.w	r1, r1, r1
  401be6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401bea:	f1a4 0401 	sub.w	r4, r4, #1
  401bee:	d1e9      	bne.n	401bc4 <__adddf3+0x10c>
  401bf0:	f091 0f00 	teq	r1, #0
  401bf4:	bf04      	itt	eq
  401bf6:	4601      	moveq	r1, r0
  401bf8:	2000      	moveq	r0, #0
  401bfa:	fab1 f381 	clz	r3, r1
  401bfe:	bf08      	it	eq
  401c00:	3320      	addeq	r3, #32
  401c02:	f1a3 030b 	sub.w	r3, r3, #11
  401c06:	f1b3 0220 	subs.w	r2, r3, #32
  401c0a:	da0c      	bge.n	401c26 <__adddf3+0x16e>
  401c0c:	320c      	adds	r2, #12
  401c0e:	dd08      	ble.n	401c22 <__adddf3+0x16a>
  401c10:	f102 0c14 	add.w	ip, r2, #20
  401c14:	f1c2 020c 	rsb	r2, r2, #12
  401c18:	fa01 f00c 	lsl.w	r0, r1, ip
  401c1c:	fa21 f102 	lsr.w	r1, r1, r2
  401c20:	e00c      	b.n	401c3c <__adddf3+0x184>
  401c22:	f102 0214 	add.w	r2, r2, #20
  401c26:	bfd8      	it	le
  401c28:	f1c2 0c20 	rsble	ip, r2, #32
  401c2c:	fa01 f102 	lsl.w	r1, r1, r2
  401c30:	fa20 fc0c 	lsr.w	ip, r0, ip
  401c34:	bfdc      	itt	le
  401c36:	ea41 010c 	orrle.w	r1, r1, ip
  401c3a:	4090      	lslle	r0, r2
  401c3c:	1ae4      	subs	r4, r4, r3
  401c3e:	bfa2      	ittt	ge
  401c40:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401c44:	4329      	orrge	r1, r5
  401c46:	bd30      	popge	{r4, r5, pc}
  401c48:	ea6f 0404 	mvn.w	r4, r4
  401c4c:	3c1f      	subs	r4, #31
  401c4e:	da1c      	bge.n	401c8a <__adddf3+0x1d2>
  401c50:	340c      	adds	r4, #12
  401c52:	dc0e      	bgt.n	401c72 <__adddf3+0x1ba>
  401c54:	f104 0414 	add.w	r4, r4, #20
  401c58:	f1c4 0220 	rsb	r2, r4, #32
  401c5c:	fa20 f004 	lsr.w	r0, r0, r4
  401c60:	fa01 f302 	lsl.w	r3, r1, r2
  401c64:	ea40 0003 	orr.w	r0, r0, r3
  401c68:	fa21 f304 	lsr.w	r3, r1, r4
  401c6c:	ea45 0103 	orr.w	r1, r5, r3
  401c70:	bd30      	pop	{r4, r5, pc}
  401c72:	f1c4 040c 	rsb	r4, r4, #12
  401c76:	f1c4 0220 	rsb	r2, r4, #32
  401c7a:	fa20 f002 	lsr.w	r0, r0, r2
  401c7e:	fa01 f304 	lsl.w	r3, r1, r4
  401c82:	ea40 0003 	orr.w	r0, r0, r3
  401c86:	4629      	mov	r1, r5
  401c88:	bd30      	pop	{r4, r5, pc}
  401c8a:	fa21 f004 	lsr.w	r0, r1, r4
  401c8e:	4629      	mov	r1, r5
  401c90:	bd30      	pop	{r4, r5, pc}
  401c92:	f094 0f00 	teq	r4, #0
  401c96:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401c9a:	bf06      	itte	eq
  401c9c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401ca0:	3401      	addeq	r4, #1
  401ca2:	3d01      	subne	r5, #1
  401ca4:	e74e      	b.n	401b44 <__adddf3+0x8c>
  401ca6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401caa:	bf18      	it	ne
  401cac:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401cb0:	d029      	beq.n	401d06 <__adddf3+0x24e>
  401cb2:	ea94 0f05 	teq	r4, r5
  401cb6:	bf08      	it	eq
  401cb8:	ea90 0f02 	teqeq	r0, r2
  401cbc:	d005      	beq.n	401cca <__adddf3+0x212>
  401cbe:	ea54 0c00 	orrs.w	ip, r4, r0
  401cc2:	bf04      	itt	eq
  401cc4:	4619      	moveq	r1, r3
  401cc6:	4610      	moveq	r0, r2
  401cc8:	bd30      	pop	{r4, r5, pc}
  401cca:	ea91 0f03 	teq	r1, r3
  401cce:	bf1e      	ittt	ne
  401cd0:	2100      	movne	r1, #0
  401cd2:	2000      	movne	r0, #0
  401cd4:	bd30      	popne	{r4, r5, pc}
  401cd6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401cda:	d105      	bne.n	401ce8 <__adddf3+0x230>
  401cdc:	0040      	lsls	r0, r0, #1
  401cde:	4149      	adcs	r1, r1
  401ce0:	bf28      	it	cs
  401ce2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401ce6:	bd30      	pop	{r4, r5, pc}
  401ce8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401cec:	bf3c      	itt	cc
  401cee:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401cf2:	bd30      	popcc	{r4, r5, pc}
  401cf4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401cf8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401cfc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d00:	f04f 0000 	mov.w	r0, #0
  401d04:	bd30      	pop	{r4, r5, pc}
  401d06:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401d0a:	bf1a      	itte	ne
  401d0c:	4619      	movne	r1, r3
  401d0e:	4610      	movne	r0, r2
  401d10:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401d14:	bf1c      	itt	ne
  401d16:	460b      	movne	r3, r1
  401d18:	4602      	movne	r2, r0
  401d1a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401d1e:	bf06      	itte	eq
  401d20:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401d24:	ea91 0f03 	teqeq	r1, r3
  401d28:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401d2c:	bd30      	pop	{r4, r5, pc}
  401d2e:	bf00      	nop

00401d30 <__aeabi_ui2d>:
  401d30:	f090 0f00 	teq	r0, #0
  401d34:	bf04      	itt	eq
  401d36:	2100      	moveq	r1, #0
  401d38:	4770      	bxeq	lr
  401d3a:	b530      	push	{r4, r5, lr}
  401d3c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d40:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d44:	f04f 0500 	mov.w	r5, #0
  401d48:	f04f 0100 	mov.w	r1, #0
  401d4c:	e750      	b.n	401bf0 <__adddf3+0x138>
  401d4e:	bf00      	nop

00401d50 <__aeabi_i2d>:
  401d50:	f090 0f00 	teq	r0, #0
  401d54:	bf04      	itt	eq
  401d56:	2100      	moveq	r1, #0
  401d58:	4770      	bxeq	lr
  401d5a:	b530      	push	{r4, r5, lr}
  401d5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d60:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d64:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401d68:	bf48      	it	mi
  401d6a:	4240      	negmi	r0, r0
  401d6c:	f04f 0100 	mov.w	r1, #0
  401d70:	e73e      	b.n	401bf0 <__adddf3+0x138>
  401d72:	bf00      	nop

00401d74 <__aeabi_f2d>:
  401d74:	0042      	lsls	r2, r0, #1
  401d76:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401d7a:	ea4f 0131 	mov.w	r1, r1, rrx
  401d7e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401d82:	bf1f      	itttt	ne
  401d84:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401d88:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d8c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401d90:	4770      	bxne	lr
  401d92:	f092 0f00 	teq	r2, #0
  401d96:	bf14      	ite	ne
  401d98:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401d9c:	4770      	bxeq	lr
  401d9e:	b530      	push	{r4, r5, lr}
  401da0:	f44f 7460 	mov.w	r4, #896	; 0x380
  401da4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401da8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401dac:	e720      	b.n	401bf0 <__adddf3+0x138>
  401dae:	bf00      	nop

00401db0 <__aeabi_ul2d>:
  401db0:	ea50 0201 	orrs.w	r2, r0, r1
  401db4:	bf08      	it	eq
  401db6:	4770      	bxeq	lr
  401db8:	b530      	push	{r4, r5, lr}
  401dba:	f04f 0500 	mov.w	r5, #0
  401dbe:	e00a      	b.n	401dd6 <__aeabi_l2d+0x16>

00401dc0 <__aeabi_l2d>:
  401dc0:	ea50 0201 	orrs.w	r2, r0, r1
  401dc4:	bf08      	it	eq
  401dc6:	4770      	bxeq	lr
  401dc8:	b530      	push	{r4, r5, lr}
  401dca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401dce:	d502      	bpl.n	401dd6 <__aeabi_l2d+0x16>
  401dd0:	4240      	negs	r0, r0
  401dd2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401dd6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401dda:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401dde:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401de2:	f43f aedc 	beq.w	401b9e <__adddf3+0xe6>
  401de6:	f04f 0203 	mov.w	r2, #3
  401dea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401dee:	bf18      	it	ne
  401df0:	3203      	addne	r2, #3
  401df2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401df6:	bf18      	it	ne
  401df8:	3203      	addne	r2, #3
  401dfa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401dfe:	f1c2 0320 	rsb	r3, r2, #32
  401e02:	fa00 fc03 	lsl.w	ip, r0, r3
  401e06:	fa20 f002 	lsr.w	r0, r0, r2
  401e0a:	fa01 fe03 	lsl.w	lr, r1, r3
  401e0e:	ea40 000e 	orr.w	r0, r0, lr
  401e12:	fa21 f102 	lsr.w	r1, r1, r2
  401e16:	4414      	add	r4, r2
  401e18:	e6c1      	b.n	401b9e <__adddf3+0xe6>
  401e1a:	bf00      	nop

00401e1c <__aeabi_dmul>:
  401e1c:	b570      	push	{r4, r5, r6, lr}
  401e1e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401e22:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401e26:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401e2a:	bf1d      	ittte	ne
  401e2c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401e30:	ea94 0f0c 	teqne	r4, ip
  401e34:	ea95 0f0c 	teqne	r5, ip
  401e38:	f000 f8de 	bleq	401ff8 <__aeabi_dmul+0x1dc>
  401e3c:	442c      	add	r4, r5
  401e3e:	ea81 0603 	eor.w	r6, r1, r3
  401e42:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401e46:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401e4a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401e4e:	bf18      	it	ne
  401e50:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401e54:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e58:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401e5c:	d038      	beq.n	401ed0 <__aeabi_dmul+0xb4>
  401e5e:	fba0 ce02 	umull	ip, lr, r0, r2
  401e62:	f04f 0500 	mov.w	r5, #0
  401e66:	fbe1 e502 	umlal	lr, r5, r1, r2
  401e6a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401e6e:	fbe0 e503 	umlal	lr, r5, r0, r3
  401e72:	f04f 0600 	mov.w	r6, #0
  401e76:	fbe1 5603 	umlal	r5, r6, r1, r3
  401e7a:	f09c 0f00 	teq	ip, #0
  401e7e:	bf18      	it	ne
  401e80:	f04e 0e01 	orrne.w	lr, lr, #1
  401e84:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401e88:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401e8c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401e90:	d204      	bcs.n	401e9c <__aeabi_dmul+0x80>
  401e92:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401e96:	416d      	adcs	r5, r5
  401e98:	eb46 0606 	adc.w	r6, r6, r6
  401e9c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401ea0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401ea4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401ea8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401eac:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401eb0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401eb4:	bf88      	it	hi
  401eb6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401eba:	d81e      	bhi.n	401efa <__aeabi_dmul+0xde>
  401ebc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401ec0:	bf08      	it	eq
  401ec2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401ec6:	f150 0000 	adcs.w	r0, r0, #0
  401eca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ece:	bd70      	pop	{r4, r5, r6, pc}
  401ed0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401ed4:	ea46 0101 	orr.w	r1, r6, r1
  401ed8:	ea40 0002 	orr.w	r0, r0, r2
  401edc:	ea81 0103 	eor.w	r1, r1, r3
  401ee0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401ee4:	bfc2      	ittt	gt
  401ee6:	ebd4 050c 	rsbsgt	r5, r4, ip
  401eea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401eee:	bd70      	popgt	{r4, r5, r6, pc}
  401ef0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401ef4:	f04f 0e00 	mov.w	lr, #0
  401ef8:	3c01      	subs	r4, #1
  401efa:	f300 80ab 	bgt.w	402054 <__aeabi_dmul+0x238>
  401efe:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401f02:	bfde      	ittt	le
  401f04:	2000      	movle	r0, #0
  401f06:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401f0a:	bd70      	pople	{r4, r5, r6, pc}
  401f0c:	f1c4 0400 	rsb	r4, r4, #0
  401f10:	3c20      	subs	r4, #32
  401f12:	da35      	bge.n	401f80 <__aeabi_dmul+0x164>
  401f14:	340c      	adds	r4, #12
  401f16:	dc1b      	bgt.n	401f50 <__aeabi_dmul+0x134>
  401f18:	f104 0414 	add.w	r4, r4, #20
  401f1c:	f1c4 0520 	rsb	r5, r4, #32
  401f20:	fa00 f305 	lsl.w	r3, r0, r5
  401f24:	fa20 f004 	lsr.w	r0, r0, r4
  401f28:	fa01 f205 	lsl.w	r2, r1, r5
  401f2c:	ea40 0002 	orr.w	r0, r0, r2
  401f30:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401f34:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401f38:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f3c:	fa21 f604 	lsr.w	r6, r1, r4
  401f40:	eb42 0106 	adc.w	r1, r2, r6
  401f44:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f48:	bf08      	it	eq
  401f4a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f4e:	bd70      	pop	{r4, r5, r6, pc}
  401f50:	f1c4 040c 	rsb	r4, r4, #12
  401f54:	f1c4 0520 	rsb	r5, r4, #32
  401f58:	fa00 f304 	lsl.w	r3, r0, r4
  401f5c:	fa20 f005 	lsr.w	r0, r0, r5
  401f60:	fa01 f204 	lsl.w	r2, r1, r4
  401f64:	ea40 0002 	orr.w	r0, r0, r2
  401f68:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f6c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f70:	f141 0100 	adc.w	r1, r1, #0
  401f74:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f78:	bf08      	it	eq
  401f7a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f7e:	bd70      	pop	{r4, r5, r6, pc}
  401f80:	f1c4 0520 	rsb	r5, r4, #32
  401f84:	fa00 f205 	lsl.w	r2, r0, r5
  401f88:	ea4e 0e02 	orr.w	lr, lr, r2
  401f8c:	fa20 f304 	lsr.w	r3, r0, r4
  401f90:	fa01 f205 	lsl.w	r2, r1, r5
  401f94:	ea43 0302 	orr.w	r3, r3, r2
  401f98:	fa21 f004 	lsr.w	r0, r1, r4
  401f9c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401fa0:	fa21 f204 	lsr.w	r2, r1, r4
  401fa4:	ea20 0002 	bic.w	r0, r0, r2
  401fa8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401fac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fb0:	bf08      	it	eq
  401fb2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fb6:	bd70      	pop	{r4, r5, r6, pc}
  401fb8:	f094 0f00 	teq	r4, #0
  401fbc:	d10f      	bne.n	401fde <__aeabi_dmul+0x1c2>
  401fbe:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401fc2:	0040      	lsls	r0, r0, #1
  401fc4:	eb41 0101 	adc.w	r1, r1, r1
  401fc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401fcc:	bf08      	it	eq
  401fce:	3c01      	subeq	r4, #1
  401fd0:	d0f7      	beq.n	401fc2 <__aeabi_dmul+0x1a6>
  401fd2:	ea41 0106 	orr.w	r1, r1, r6
  401fd6:	f095 0f00 	teq	r5, #0
  401fda:	bf18      	it	ne
  401fdc:	4770      	bxne	lr
  401fde:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401fe2:	0052      	lsls	r2, r2, #1
  401fe4:	eb43 0303 	adc.w	r3, r3, r3
  401fe8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401fec:	bf08      	it	eq
  401fee:	3d01      	subeq	r5, #1
  401ff0:	d0f7      	beq.n	401fe2 <__aeabi_dmul+0x1c6>
  401ff2:	ea43 0306 	orr.w	r3, r3, r6
  401ff6:	4770      	bx	lr
  401ff8:	ea94 0f0c 	teq	r4, ip
  401ffc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402000:	bf18      	it	ne
  402002:	ea95 0f0c 	teqne	r5, ip
  402006:	d00c      	beq.n	402022 <__aeabi_dmul+0x206>
  402008:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40200c:	bf18      	it	ne
  40200e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402012:	d1d1      	bne.n	401fb8 <__aeabi_dmul+0x19c>
  402014:	ea81 0103 	eor.w	r1, r1, r3
  402018:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40201c:	f04f 0000 	mov.w	r0, #0
  402020:	bd70      	pop	{r4, r5, r6, pc}
  402022:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402026:	bf06      	itte	eq
  402028:	4610      	moveq	r0, r2
  40202a:	4619      	moveq	r1, r3
  40202c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402030:	d019      	beq.n	402066 <__aeabi_dmul+0x24a>
  402032:	ea94 0f0c 	teq	r4, ip
  402036:	d102      	bne.n	40203e <__aeabi_dmul+0x222>
  402038:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40203c:	d113      	bne.n	402066 <__aeabi_dmul+0x24a>
  40203e:	ea95 0f0c 	teq	r5, ip
  402042:	d105      	bne.n	402050 <__aeabi_dmul+0x234>
  402044:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402048:	bf1c      	itt	ne
  40204a:	4610      	movne	r0, r2
  40204c:	4619      	movne	r1, r3
  40204e:	d10a      	bne.n	402066 <__aeabi_dmul+0x24a>
  402050:	ea81 0103 	eor.w	r1, r1, r3
  402054:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402058:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40205c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402060:	f04f 0000 	mov.w	r0, #0
  402064:	bd70      	pop	{r4, r5, r6, pc}
  402066:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40206a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40206e:	bd70      	pop	{r4, r5, r6, pc}

00402070 <__aeabi_ddiv>:
  402070:	b570      	push	{r4, r5, r6, lr}
  402072:	f04f 0cff 	mov.w	ip, #255	; 0xff
  402076:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40207a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40207e:	bf1d      	ittte	ne
  402080:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  402084:	ea94 0f0c 	teqne	r4, ip
  402088:	ea95 0f0c 	teqne	r5, ip
  40208c:	f000 f8a7 	bleq	4021de <__aeabi_ddiv+0x16e>
  402090:	eba4 0405 	sub.w	r4, r4, r5
  402094:	ea81 0e03 	eor.w	lr, r1, r3
  402098:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40209c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4020a0:	f000 8088 	beq.w	4021b4 <__aeabi_ddiv+0x144>
  4020a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4020a8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4020ac:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4020b0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4020b4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4020b8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4020bc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4020c0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4020c4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4020c8:	429d      	cmp	r5, r3
  4020ca:	bf08      	it	eq
  4020cc:	4296      	cmpeq	r6, r2
  4020ce:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4020d2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4020d6:	d202      	bcs.n	4020de <__aeabi_ddiv+0x6e>
  4020d8:	085b      	lsrs	r3, r3, #1
  4020da:	ea4f 0232 	mov.w	r2, r2, rrx
  4020de:	1ab6      	subs	r6, r6, r2
  4020e0:	eb65 0503 	sbc.w	r5, r5, r3
  4020e4:	085b      	lsrs	r3, r3, #1
  4020e6:	ea4f 0232 	mov.w	r2, r2, rrx
  4020ea:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4020ee:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4020f2:	ebb6 0e02 	subs.w	lr, r6, r2
  4020f6:	eb75 0e03 	sbcs.w	lr, r5, r3
  4020fa:	bf22      	ittt	cs
  4020fc:	1ab6      	subcs	r6, r6, r2
  4020fe:	4675      	movcs	r5, lr
  402100:	ea40 000c 	orrcs.w	r0, r0, ip
  402104:	085b      	lsrs	r3, r3, #1
  402106:	ea4f 0232 	mov.w	r2, r2, rrx
  40210a:	ebb6 0e02 	subs.w	lr, r6, r2
  40210e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402112:	bf22      	ittt	cs
  402114:	1ab6      	subcs	r6, r6, r2
  402116:	4675      	movcs	r5, lr
  402118:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40211c:	085b      	lsrs	r3, r3, #1
  40211e:	ea4f 0232 	mov.w	r2, r2, rrx
  402122:	ebb6 0e02 	subs.w	lr, r6, r2
  402126:	eb75 0e03 	sbcs.w	lr, r5, r3
  40212a:	bf22      	ittt	cs
  40212c:	1ab6      	subcs	r6, r6, r2
  40212e:	4675      	movcs	r5, lr
  402130:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402134:	085b      	lsrs	r3, r3, #1
  402136:	ea4f 0232 	mov.w	r2, r2, rrx
  40213a:	ebb6 0e02 	subs.w	lr, r6, r2
  40213e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402142:	bf22      	ittt	cs
  402144:	1ab6      	subcs	r6, r6, r2
  402146:	4675      	movcs	r5, lr
  402148:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40214c:	ea55 0e06 	orrs.w	lr, r5, r6
  402150:	d018      	beq.n	402184 <__aeabi_ddiv+0x114>
  402152:	ea4f 1505 	mov.w	r5, r5, lsl #4
  402156:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40215a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40215e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  402162:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  402166:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40216a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40216e:	d1c0      	bne.n	4020f2 <__aeabi_ddiv+0x82>
  402170:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402174:	d10b      	bne.n	40218e <__aeabi_ddiv+0x11e>
  402176:	ea41 0100 	orr.w	r1, r1, r0
  40217a:	f04f 0000 	mov.w	r0, #0
  40217e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  402182:	e7b6      	b.n	4020f2 <__aeabi_ddiv+0x82>
  402184:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402188:	bf04      	itt	eq
  40218a:	4301      	orreq	r1, r0
  40218c:	2000      	moveq	r0, #0
  40218e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402192:	bf88      	it	hi
  402194:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402198:	f63f aeaf 	bhi.w	401efa <__aeabi_dmul+0xde>
  40219c:	ebb5 0c03 	subs.w	ip, r5, r3
  4021a0:	bf04      	itt	eq
  4021a2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4021a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4021aa:	f150 0000 	adcs.w	r0, r0, #0
  4021ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4021b2:	bd70      	pop	{r4, r5, r6, pc}
  4021b4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4021b8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4021bc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4021c0:	bfc2      	ittt	gt
  4021c2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4021c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4021ca:	bd70      	popgt	{r4, r5, r6, pc}
  4021cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4021d0:	f04f 0e00 	mov.w	lr, #0
  4021d4:	3c01      	subs	r4, #1
  4021d6:	e690      	b.n	401efa <__aeabi_dmul+0xde>
  4021d8:	ea45 0e06 	orr.w	lr, r5, r6
  4021dc:	e68d      	b.n	401efa <__aeabi_dmul+0xde>
  4021de:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4021e2:	ea94 0f0c 	teq	r4, ip
  4021e6:	bf08      	it	eq
  4021e8:	ea95 0f0c 	teqeq	r5, ip
  4021ec:	f43f af3b 	beq.w	402066 <__aeabi_dmul+0x24a>
  4021f0:	ea94 0f0c 	teq	r4, ip
  4021f4:	d10a      	bne.n	40220c <__aeabi_ddiv+0x19c>
  4021f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4021fa:	f47f af34 	bne.w	402066 <__aeabi_dmul+0x24a>
  4021fe:	ea95 0f0c 	teq	r5, ip
  402202:	f47f af25 	bne.w	402050 <__aeabi_dmul+0x234>
  402206:	4610      	mov	r0, r2
  402208:	4619      	mov	r1, r3
  40220a:	e72c      	b.n	402066 <__aeabi_dmul+0x24a>
  40220c:	ea95 0f0c 	teq	r5, ip
  402210:	d106      	bne.n	402220 <__aeabi_ddiv+0x1b0>
  402212:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402216:	f43f aefd 	beq.w	402014 <__aeabi_dmul+0x1f8>
  40221a:	4610      	mov	r0, r2
  40221c:	4619      	mov	r1, r3
  40221e:	e722      	b.n	402066 <__aeabi_dmul+0x24a>
  402220:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402224:	bf18      	it	ne
  402226:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40222a:	f47f aec5 	bne.w	401fb8 <__aeabi_dmul+0x19c>
  40222e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402232:	f47f af0d 	bne.w	402050 <__aeabi_dmul+0x234>
  402236:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40223a:	f47f aeeb 	bne.w	402014 <__aeabi_dmul+0x1f8>
  40223e:	e712      	b.n	402066 <__aeabi_dmul+0x24a>

00402240 <__aeabi_d2iz>:
  402240:	ea4f 0241 	mov.w	r2, r1, lsl #1
  402244:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402248:	d215      	bcs.n	402276 <__aeabi_d2iz+0x36>
  40224a:	d511      	bpl.n	402270 <__aeabi_d2iz+0x30>
  40224c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  402250:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  402254:	d912      	bls.n	40227c <__aeabi_d2iz+0x3c>
  402256:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40225a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40225e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  402262:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402266:	fa23 f002 	lsr.w	r0, r3, r2
  40226a:	bf18      	it	ne
  40226c:	4240      	negne	r0, r0
  40226e:	4770      	bx	lr
  402270:	f04f 0000 	mov.w	r0, #0
  402274:	4770      	bx	lr
  402276:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  40227a:	d105      	bne.n	402288 <__aeabi_d2iz+0x48>
  40227c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  402280:	bf08      	it	eq
  402282:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  402286:	4770      	bx	lr
  402288:	f04f 0000 	mov.w	r0, #0
  40228c:	4770      	bx	lr
  40228e:	bf00      	nop

00402290 <__aeabi_d2uiz>:
  402290:	004a      	lsls	r2, r1, #1
  402292:	d211      	bcs.n	4022b8 <__aeabi_d2uiz+0x28>
  402294:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402298:	d211      	bcs.n	4022be <__aeabi_d2uiz+0x2e>
  40229a:	d50d      	bpl.n	4022b8 <__aeabi_d2uiz+0x28>
  40229c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4022a0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4022a4:	d40e      	bmi.n	4022c4 <__aeabi_d2uiz+0x34>
  4022a6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4022aa:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4022ae:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4022b2:	fa23 f002 	lsr.w	r0, r3, r2
  4022b6:	4770      	bx	lr
  4022b8:	f04f 0000 	mov.w	r0, #0
  4022bc:	4770      	bx	lr
  4022be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4022c2:	d102      	bne.n	4022ca <__aeabi_d2uiz+0x3a>
  4022c4:	f04f 30ff 	mov.w	r0, #4294967295
  4022c8:	4770      	bx	lr
  4022ca:	f04f 0000 	mov.w	r0, #0
  4022ce:	4770      	bx	lr

004022d0 <__libc_init_array>:
  4022d0:	b570      	push	{r4, r5, r6, lr}
  4022d2:	4e0f      	ldr	r6, [pc, #60]	; (402310 <__libc_init_array+0x40>)
  4022d4:	4d0f      	ldr	r5, [pc, #60]	; (402314 <__libc_init_array+0x44>)
  4022d6:	1b76      	subs	r6, r6, r5
  4022d8:	10b6      	asrs	r6, r6, #2
  4022da:	bf18      	it	ne
  4022dc:	2400      	movne	r4, #0
  4022de:	d005      	beq.n	4022ec <__libc_init_array+0x1c>
  4022e0:	3401      	adds	r4, #1
  4022e2:	f855 3b04 	ldr.w	r3, [r5], #4
  4022e6:	4798      	blx	r3
  4022e8:	42a6      	cmp	r6, r4
  4022ea:	d1f9      	bne.n	4022e0 <__libc_init_array+0x10>
  4022ec:	4e0a      	ldr	r6, [pc, #40]	; (402318 <__libc_init_array+0x48>)
  4022ee:	4d0b      	ldr	r5, [pc, #44]	; (40231c <__libc_init_array+0x4c>)
  4022f0:	1b76      	subs	r6, r6, r5
  4022f2:	f004 ff05 	bl	407100 <_init>
  4022f6:	10b6      	asrs	r6, r6, #2
  4022f8:	bf18      	it	ne
  4022fa:	2400      	movne	r4, #0
  4022fc:	d006      	beq.n	40230c <__libc_init_array+0x3c>
  4022fe:	3401      	adds	r4, #1
  402300:	f855 3b04 	ldr.w	r3, [r5], #4
  402304:	4798      	blx	r3
  402306:	42a6      	cmp	r6, r4
  402308:	d1f9      	bne.n	4022fe <__libc_init_array+0x2e>
  40230a:	bd70      	pop	{r4, r5, r6, pc}
  40230c:	bd70      	pop	{r4, r5, r6, pc}
  40230e:	bf00      	nop
  402310:	0040710c 	.word	0x0040710c
  402314:	0040710c 	.word	0x0040710c
  402318:	00407114 	.word	0x00407114
  40231c:	0040710c 	.word	0x0040710c

00402320 <memset>:
  402320:	b470      	push	{r4, r5, r6}
  402322:	0786      	lsls	r6, r0, #30
  402324:	d046      	beq.n	4023b4 <memset+0x94>
  402326:	1e54      	subs	r4, r2, #1
  402328:	2a00      	cmp	r2, #0
  40232a:	d041      	beq.n	4023b0 <memset+0x90>
  40232c:	b2ca      	uxtb	r2, r1
  40232e:	4603      	mov	r3, r0
  402330:	e002      	b.n	402338 <memset+0x18>
  402332:	f114 34ff 	adds.w	r4, r4, #4294967295
  402336:	d33b      	bcc.n	4023b0 <memset+0x90>
  402338:	f803 2b01 	strb.w	r2, [r3], #1
  40233c:	079d      	lsls	r5, r3, #30
  40233e:	d1f8      	bne.n	402332 <memset+0x12>
  402340:	2c03      	cmp	r4, #3
  402342:	d92e      	bls.n	4023a2 <memset+0x82>
  402344:	b2cd      	uxtb	r5, r1
  402346:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40234a:	2c0f      	cmp	r4, #15
  40234c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402350:	d919      	bls.n	402386 <memset+0x66>
  402352:	f103 0210 	add.w	r2, r3, #16
  402356:	4626      	mov	r6, r4
  402358:	3e10      	subs	r6, #16
  40235a:	2e0f      	cmp	r6, #15
  40235c:	f842 5c10 	str.w	r5, [r2, #-16]
  402360:	f842 5c0c 	str.w	r5, [r2, #-12]
  402364:	f842 5c08 	str.w	r5, [r2, #-8]
  402368:	f842 5c04 	str.w	r5, [r2, #-4]
  40236c:	f102 0210 	add.w	r2, r2, #16
  402370:	d8f2      	bhi.n	402358 <memset+0x38>
  402372:	f1a4 0210 	sub.w	r2, r4, #16
  402376:	f022 020f 	bic.w	r2, r2, #15
  40237a:	f004 040f 	and.w	r4, r4, #15
  40237e:	3210      	adds	r2, #16
  402380:	2c03      	cmp	r4, #3
  402382:	4413      	add	r3, r2
  402384:	d90d      	bls.n	4023a2 <memset+0x82>
  402386:	461e      	mov	r6, r3
  402388:	4622      	mov	r2, r4
  40238a:	3a04      	subs	r2, #4
  40238c:	2a03      	cmp	r2, #3
  40238e:	f846 5b04 	str.w	r5, [r6], #4
  402392:	d8fa      	bhi.n	40238a <memset+0x6a>
  402394:	1f22      	subs	r2, r4, #4
  402396:	f022 0203 	bic.w	r2, r2, #3
  40239a:	3204      	adds	r2, #4
  40239c:	4413      	add	r3, r2
  40239e:	f004 0403 	and.w	r4, r4, #3
  4023a2:	b12c      	cbz	r4, 4023b0 <memset+0x90>
  4023a4:	b2c9      	uxtb	r1, r1
  4023a6:	441c      	add	r4, r3
  4023a8:	f803 1b01 	strb.w	r1, [r3], #1
  4023ac:	429c      	cmp	r4, r3
  4023ae:	d1fb      	bne.n	4023a8 <memset+0x88>
  4023b0:	bc70      	pop	{r4, r5, r6}
  4023b2:	4770      	bx	lr
  4023b4:	4614      	mov	r4, r2
  4023b6:	4603      	mov	r3, r0
  4023b8:	e7c2      	b.n	402340 <memset+0x20>
  4023ba:	bf00      	nop

004023bc <sprintf>:
  4023bc:	b40e      	push	{r1, r2, r3}
  4023be:	b5f0      	push	{r4, r5, r6, r7, lr}
  4023c0:	b09c      	sub	sp, #112	; 0x70
  4023c2:	ab21      	add	r3, sp, #132	; 0x84
  4023c4:	490f      	ldr	r1, [pc, #60]	; (402404 <sprintf+0x48>)
  4023c6:	f853 2b04 	ldr.w	r2, [r3], #4
  4023ca:	9301      	str	r3, [sp, #4]
  4023cc:	4605      	mov	r5, r0
  4023ce:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4023d2:	6808      	ldr	r0, [r1, #0]
  4023d4:	9502      	str	r5, [sp, #8]
  4023d6:	f44f 7702 	mov.w	r7, #520	; 0x208
  4023da:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4023de:	a902      	add	r1, sp, #8
  4023e0:	9506      	str	r5, [sp, #24]
  4023e2:	f8ad 7014 	strh.w	r7, [sp, #20]
  4023e6:	9404      	str	r4, [sp, #16]
  4023e8:	9407      	str	r4, [sp, #28]
  4023ea:	f8ad 6016 	strh.w	r6, [sp, #22]
  4023ee:	f000 f80b 	bl	402408 <_svfprintf_r>
  4023f2:	9b02      	ldr	r3, [sp, #8]
  4023f4:	2200      	movs	r2, #0
  4023f6:	701a      	strb	r2, [r3, #0]
  4023f8:	b01c      	add	sp, #112	; 0x70
  4023fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4023fe:	b003      	add	sp, #12
  402400:	4770      	bx	lr
  402402:	bf00      	nop
  402404:	20400024 	.word	0x20400024

00402408 <_svfprintf_r>:
  402408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40240c:	b0c3      	sub	sp, #268	; 0x10c
  40240e:	460c      	mov	r4, r1
  402410:	910b      	str	r1, [sp, #44]	; 0x2c
  402412:	4692      	mov	sl, r2
  402414:	930f      	str	r3, [sp, #60]	; 0x3c
  402416:	900c      	str	r0, [sp, #48]	; 0x30
  402418:	f002 fa0e 	bl	404838 <_localeconv_r>
  40241c:	6803      	ldr	r3, [r0, #0]
  40241e:	931a      	str	r3, [sp, #104]	; 0x68
  402420:	4618      	mov	r0, r3
  402422:	f003 f8ed 	bl	405600 <strlen>
  402426:	89a3      	ldrh	r3, [r4, #12]
  402428:	9019      	str	r0, [sp, #100]	; 0x64
  40242a:	0619      	lsls	r1, r3, #24
  40242c:	d503      	bpl.n	402436 <_svfprintf_r+0x2e>
  40242e:	6923      	ldr	r3, [r4, #16]
  402430:	2b00      	cmp	r3, #0
  402432:	f001 8003 	beq.w	40343c <_svfprintf_r+0x1034>
  402436:	2300      	movs	r3, #0
  402438:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  40243c:	9313      	str	r3, [sp, #76]	; 0x4c
  40243e:	9315      	str	r3, [sp, #84]	; 0x54
  402440:	9314      	str	r3, [sp, #80]	; 0x50
  402442:	9327      	str	r3, [sp, #156]	; 0x9c
  402444:	9326      	str	r3, [sp, #152]	; 0x98
  402446:	9318      	str	r3, [sp, #96]	; 0x60
  402448:	931b      	str	r3, [sp, #108]	; 0x6c
  40244a:	9309      	str	r3, [sp, #36]	; 0x24
  40244c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402450:	46c8      	mov	r8, r9
  402452:	9316      	str	r3, [sp, #88]	; 0x58
  402454:	9317      	str	r3, [sp, #92]	; 0x5c
  402456:	f89a 3000 	ldrb.w	r3, [sl]
  40245a:	4654      	mov	r4, sl
  40245c:	b1e3      	cbz	r3, 402498 <_svfprintf_r+0x90>
  40245e:	2b25      	cmp	r3, #37	; 0x25
  402460:	d102      	bne.n	402468 <_svfprintf_r+0x60>
  402462:	e019      	b.n	402498 <_svfprintf_r+0x90>
  402464:	2b25      	cmp	r3, #37	; 0x25
  402466:	d003      	beq.n	402470 <_svfprintf_r+0x68>
  402468:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40246c:	2b00      	cmp	r3, #0
  40246e:	d1f9      	bne.n	402464 <_svfprintf_r+0x5c>
  402470:	eba4 050a 	sub.w	r5, r4, sl
  402474:	b185      	cbz	r5, 402498 <_svfprintf_r+0x90>
  402476:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402478:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40247a:	f8c8 a000 	str.w	sl, [r8]
  40247e:	3301      	adds	r3, #1
  402480:	442a      	add	r2, r5
  402482:	2b07      	cmp	r3, #7
  402484:	f8c8 5004 	str.w	r5, [r8, #4]
  402488:	9227      	str	r2, [sp, #156]	; 0x9c
  40248a:	9326      	str	r3, [sp, #152]	; 0x98
  40248c:	dc7f      	bgt.n	40258e <_svfprintf_r+0x186>
  40248e:	f108 0808 	add.w	r8, r8, #8
  402492:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402494:	442b      	add	r3, r5
  402496:	9309      	str	r3, [sp, #36]	; 0x24
  402498:	7823      	ldrb	r3, [r4, #0]
  40249a:	2b00      	cmp	r3, #0
  40249c:	d07f      	beq.n	40259e <_svfprintf_r+0x196>
  40249e:	2300      	movs	r3, #0
  4024a0:	461a      	mov	r2, r3
  4024a2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4024a6:	4619      	mov	r1, r3
  4024a8:	930d      	str	r3, [sp, #52]	; 0x34
  4024aa:	469b      	mov	fp, r3
  4024ac:	f04f 30ff 	mov.w	r0, #4294967295
  4024b0:	7863      	ldrb	r3, [r4, #1]
  4024b2:	900a      	str	r0, [sp, #40]	; 0x28
  4024b4:	f104 0a01 	add.w	sl, r4, #1
  4024b8:	f10a 0a01 	add.w	sl, sl, #1
  4024bc:	f1a3 0020 	sub.w	r0, r3, #32
  4024c0:	2858      	cmp	r0, #88	; 0x58
  4024c2:	f200 83c1 	bhi.w	402c48 <_svfprintf_r+0x840>
  4024c6:	e8df f010 	tbh	[pc, r0, lsl #1]
  4024ca:	0238      	.short	0x0238
  4024cc:	03bf03bf 	.word	0x03bf03bf
  4024d0:	03bf0240 	.word	0x03bf0240
  4024d4:	03bf03bf 	.word	0x03bf03bf
  4024d8:	03bf03bf 	.word	0x03bf03bf
  4024dc:	024503bf 	.word	0x024503bf
  4024e0:	03bf0203 	.word	0x03bf0203
  4024e4:	026b005d 	.word	0x026b005d
  4024e8:	028603bf 	.word	0x028603bf
  4024ec:	039d039d 	.word	0x039d039d
  4024f0:	039d039d 	.word	0x039d039d
  4024f4:	039d039d 	.word	0x039d039d
  4024f8:	039d039d 	.word	0x039d039d
  4024fc:	03bf039d 	.word	0x03bf039d
  402500:	03bf03bf 	.word	0x03bf03bf
  402504:	03bf03bf 	.word	0x03bf03bf
  402508:	03bf03bf 	.word	0x03bf03bf
  40250c:	03bf03bf 	.word	0x03bf03bf
  402510:	033703bf 	.word	0x033703bf
  402514:	03bf0357 	.word	0x03bf0357
  402518:	03bf0357 	.word	0x03bf0357
  40251c:	03bf03bf 	.word	0x03bf03bf
  402520:	039803bf 	.word	0x039803bf
  402524:	03bf03bf 	.word	0x03bf03bf
  402528:	03bf03ad 	.word	0x03bf03ad
  40252c:	03bf03bf 	.word	0x03bf03bf
  402530:	03bf03bf 	.word	0x03bf03bf
  402534:	03bf0259 	.word	0x03bf0259
  402538:	031e03bf 	.word	0x031e03bf
  40253c:	03bf03bf 	.word	0x03bf03bf
  402540:	03bf03bf 	.word	0x03bf03bf
  402544:	03bf03bf 	.word	0x03bf03bf
  402548:	03bf03bf 	.word	0x03bf03bf
  40254c:	03bf03bf 	.word	0x03bf03bf
  402550:	02db02c6 	.word	0x02db02c6
  402554:	03570357 	.word	0x03570357
  402558:	028b0357 	.word	0x028b0357
  40255c:	03bf02db 	.word	0x03bf02db
  402560:	029003bf 	.word	0x029003bf
  402564:	029d03bf 	.word	0x029d03bf
  402568:	02b401cc 	.word	0x02b401cc
  40256c:	03bf0208 	.word	0x03bf0208
  402570:	03bf01e1 	.word	0x03bf01e1
  402574:	03bf007e 	.word	0x03bf007e
  402578:	020d03bf 	.word	0x020d03bf
  40257c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40257e:	930f      	str	r3, [sp, #60]	; 0x3c
  402580:	4240      	negs	r0, r0
  402582:	900d      	str	r0, [sp, #52]	; 0x34
  402584:	f04b 0b04 	orr.w	fp, fp, #4
  402588:	f89a 3000 	ldrb.w	r3, [sl]
  40258c:	e794      	b.n	4024b8 <_svfprintf_r+0xb0>
  40258e:	aa25      	add	r2, sp, #148	; 0x94
  402590:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402592:	980c      	ldr	r0, [sp, #48]	; 0x30
  402594:	f003 f8a2 	bl	4056dc <__ssprint_r>
  402598:	b940      	cbnz	r0, 4025ac <_svfprintf_r+0x1a4>
  40259a:	46c8      	mov	r8, r9
  40259c:	e779      	b.n	402492 <_svfprintf_r+0x8a>
  40259e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  4025a0:	b123      	cbz	r3, 4025ac <_svfprintf_r+0x1a4>
  4025a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025a6:	aa25      	add	r2, sp, #148	; 0x94
  4025a8:	f003 f898 	bl	4056dc <__ssprint_r>
  4025ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4025ae:	899b      	ldrh	r3, [r3, #12]
  4025b0:	f013 0f40 	tst.w	r3, #64	; 0x40
  4025b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4025b6:	bf18      	it	ne
  4025b8:	f04f 33ff 	movne.w	r3, #4294967295
  4025bc:	9309      	str	r3, [sp, #36]	; 0x24
  4025be:	9809      	ldr	r0, [sp, #36]	; 0x24
  4025c0:	b043      	add	sp, #268	; 0x10c
  4025c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025c6:	f01b 0f20 	tst.w	fp, #32
  4025ca:	9311      	str	r3, [sp, #68]	; 0x44
  4025cc:	f040 81dd 	bne.w	40298a <_svfprintf_r+0x582>
  4025d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025d2:	f01b 0f10 	tst.w	fp, #16
  4025d6:	4613      	mov	r3, r2
  4025d8:	f040 856e 	bne.w	4030b8 <_svfprintf_r+0xcb0>
  4025dc:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025e0:	f000 856a 	beq.w	4030b8 <_svfprintf_r+0xcb0>
  4025e4:	8814      	ldrh	r4, [r2, #0]
  4025e6:	3204      	adds	r2, #4
  4025e8:	2500      	movs	r5, #0
  4025ea:	2301      	movs	r3, #1
  4025ec:	920f      	str	r2, [sp, #60]	; 0x3c
  4025ee:	2700      	movs	r7, #0
  4025f0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4025f4:	990a      	ldr	r1, [sp, #40]	; 0x28
  4025f6:	1c4a      	adds	r2, r1, #1
  4025f8:	f000 8265 	beq.w	402ac6 <_svfprintf_r+0x6be>
  4025fc:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402600:	9207      	str	r2, [sp, #28]
  402602:	ea54 0205 	orrs.w	r2, r4, r5
  402606:	f040 8264 	bne.w	402ad2 <_svfprintf_r+0x6ca>
  40260a:	2900      	cmp	r1, #0
  40260c:	f040 843c 	bne.w	402e88 <_svfprintf_r+0xa80>
  402610:	2b00      	cmp	r3, #0
  402612:	f040 84d7 	bne.w	402fc4 <_svfprintf_r+0xbbc>
  402616:	f01b 0301 	ands.w	r3, fp, #1
  40261a:	930e      	str	r3, [sp, #56]	; 0x38
  40261c:	f000 8604 	beq.w	403228 <_svfprintf_r+0xe20>
  402620:	ae42      	add	r6, sp, #264	; 0x108
  402622:	2330      	movs	r3, #48	; 0x30
  402624:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402628:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40262a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40262c:	4293      	cmp	r3, r2
  40262e:	bfb8      	it	lt
  402630:	4613      	movlt	r3, r2
  402632:	9308      	str	r3, [sp, #32]
  402634:	2300      	movs	r3, #0
  402636:	9312      	str	r3, [sp, #72]	; 0x48
  402638:	b117      	cbz	r7, 402640 <_svfprintf_r+0x238>
  40263a:	9b08      	ldr	r3, [sp, #32]
  40263c:	3301      	adds	r3, #1
  40263e:	9308      	str	r3, [sp, #32]
  402640:	9b07      	ldr	r3, [sp, #28]
  402642:	f013 0302 	ands.w	r3, r3, #2
  402646:	9310      	str	r3, [sp, #64]	; 0x40
  402648:	d002      	beq.n	402650 <_svfprintf_r+0x248>
  40264a:	9b08      	ldr	r3, [sp, #32]
  40264c:	3302      	adds	r3, #2
  40264e:	9308      	str	r3, [sp, #32]
  402650:	9b07      	ldr	r3, [sp, #28]
  402652:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402656:	f040 830e 	bne.w	402c76 <_svfprintf_r+0x86e>
  40265a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40265c:	9a08      	ldr	r2, [sp, #32]
  40265e:	eba3 0b02 	sub.w	fp, r3, r2
  402662:	f1bb 0f00 	cmp.w	fp, #0
  402666:	f340 8306 	ble.w	402c76 <_svfprintf_r+0x86e>
  40266a:	f1bb 0f10 	cmp.w	fp, #16
  40266e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402670:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402672:	dd29      	ble.n	4026c8 <_svfprintf_r+0x2c0>
  402674:	4643      	mov	r3, r8
  402676:	4621      	mov	r1, r4
  402678:	46a8      	mov	r8, r5
  40267a:	2710      	movs	r7, #16
  40267c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40267e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402680:	e006      	b.n	402690 <_svfprintf_r+0x288>
  402682:	f1ab 0b10 	sub.w	fp, fp, #16
  402686:	f1bb 0f10 	cmp.w	fp, #16
  40268a:	f103 0308 	add.w	r3, r3, #8
  40268e:	dd18      	ble.n	4026c2 <_svfprintf_r+0x2ba>
  402690:	3201      	adds	r2, #1
  402692:	48b7      	ldr	r0, [pc, #732]	; (402970 <_svfprintf_r+0x568>)
  402694:	9226      	str	r2, [sp, #152]	; 0x98
  402696:	3110      	adds	r1, #16
  402698:	2a07      	cmp	r2, #7
  40269a:	9127      	str	r1, [sp, #156]	; 0x9c
  40269c:	e883 0081 	stmia.w	r3, {r0, r7}
  4026a0:	ddef      	ble.n	402682 <_svfprintf_r+0x27a>
  4026a2:	aa25      	add	r2, sp, #148	; 0x94
  4026a4:	4629      	mov	r1, r5
  4026a6:	4620      	mov	r0, r4
  4026a8:	f003 f818 	bl	4056dc <__ssprint_r>
  4026ac:	2800      	cmp	r0, #0
  4026ae:	f47f af7d 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4026b2:	f1ab 0b10 	sub.w	fp, fp, #16
  4026b6:	f1bb 0f10 	cmp.w	fp, #16
  4026ba:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4026bc:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4026be:	464b      	mov	r3, r9
  4026c0:	dce6      	bgt.n	402690 <_svfprintf_r+0x288>
  4026c2:	4645      	mov	r5, r8
  4026c4:	460c      	mov	r4, r1
  4026c6:	4698      	mov	r8, r3
  4026c8:	3201      	adds	r2, #1
  4026ca:	4ba9      	ldr	r3, [pc, #676]	; (402970 <_svfprintf_r+0x568>)
  4026cc:	9226      	str	r2, [sp, #152]	; 0x98
  4026ce:	445c      	add	r4, fp
  4026d0:	2a07      	cmp	r2, #7
  4026d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4026d4:	e888 0808 	stmia.w	r8, {r3, fp}
  4026d8:	f300 8498 	bgt.w	40300c <_svfprintf_r+0xc04>
  4026dc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4026e0:	f108 0808 	add.w	r8, r8, #8
  4026e4:	b177      	cbz	r7, 402704 <_svfprintf_r+0x2fc>
  4026e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e8:	3301      	adds	r3, #1
  4026ea:	3401      	adds	r4, #1
  4026ec:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4026f0:	2201      	movs	r2, #1
  4026f2:	2b07      	cmp	r3, #7
  4026f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4026f6:	9326      	str	r3, [sp, #152]	; 0x98
  4026f8:	e888 0006 	stmia.w	r8, {r1, r2}
  4026fc:	f300 83db 	bgt.w	402eb6 <_svfprintf_r+0xaae>
  402700:	f108 0808 	add.w	r8, r8, #8
  402704:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402706:	b16b      	cbz	r3, 402724 <_svfprintf_r+0x31c>
  402708:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40270a:	3301      	adds	r3, #1
  40270c:	3402      	adds	r4, #2
  40270e:	a91e      	add	r1, sp, #120	; 0x78
  402710:	2202      	movs	r2, #2
  402712:	2b07      	cmp	r3, #7
  402714:	9427      	str	r4, [sp, #156]	; 0x9c
  402716:	9326      	str	r3, [sp, #152]	; 0x98
  402718:	e888 0006 	stmia.w	r8, {r1, r2}
  40271c:	f300 83d6 	bgt.w	402ecc <_svfprintf_r+0xac4>
  402720:	f108 0808 	add.w	r8, r8, #8
  402724:	2d80      	cmp	r5, #128	; 0x80
  402726:	f000 8315 	beq.w	402d54 <_svfprintf_r+0x94c>
  40272a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40272c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40272e:	1a9f      	subs	r7, r3, r2
  402730:	2f00      	cmp	r7, #0
  402732:	dd36      	ble.n	4027a2 <_svfprintf_r+0x39a>
  402734:	2f10      	cmp	r7, #16
  402736:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402738:	4d8e      	ldr	r5, [pc, #568]	; (402974 <_svfprintf_r+0x56c>)
  40273a:	dd27      	ble.n	40278c <_svfprintf_r+0x384>
  40273c:	4642      	mov	r2, r8
  40273e:	4621      	mov	r1, r4
  402740:	46b0      	mov	r8, r6
  402742:	f04f 0b10 	mov.w	fp, #16
  402746:	462e      	mov	r6, r5
  402748:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40274a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40274c:	e004      	b.n	402758 <_svfprintf_r+0x350>
  40274e:	3f10      	subs	r7, #16
  402750:	2f10      	cmp	r7, #16
  402752:	f102 0208 	add.w	r2, r2, #8
  402756:	dd15      	ble.n	402784 <_svfprintf_r+0x37c>
  402758:	3301      	adds	r3, #1
  40275a:	3110      	adds	r1, #16
  40275c:	2b07      	cmp	r3, #7
  40275e:	9127      	str	r1, [sp, #156]	; 0x9c
  402760:	9326      	str	r3, [sp, #152]	; 0x98
  402762:	e882 0840 	stmia.w	r2, {r6, fp}
  402766:	ddf2      	ble.n	40274e <_svfprintf_r+0x346>
  402768:	aa25      	add	r2, sp, #148	; 0x94
  40276a:	4629      	mov	r1, r5
  40276c:	4620      	mov	r0, r4
  40276e:	f002 ffb5 	bl	4056dc <__ssprint_r>
  402772:	2800      	cmp	r0, #0
  402774:	f47f af1a 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402778:	3f10      	subs	r7, #16
  40277a:	2f10      	cmp	r7, #16
  40277c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40277e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402780:	464a      	mov	r2, r9
  402782:	dce9      	bgt.n	402758 <_svfprintf_r+0x350>
  402784:	4635      	mov	r5, r6
  402786:	460c      	mov	r4, r1
  402788:	4646      	mov	r6, r8
  40278a:	4690      	mov	r8, r2
  40278c:	3301      	adds	r3, #1
  40278e:	443c      	add	r4, r7
  402790:	2b07      	cmp	r3, #7
  402792:	9427      	str	r4, [sp, #156]	; 0x9c
  402794:	9326      	str	r3, [sp, #152]	; 0x98
  402796:	e888 00a0 	stmia.w	r8, {r5, r7}
  40279a:	f300 8381 	bgt.w	402ea0 <_svfprintf_r+0xa98>
  40279e:	f108 0808 	add.w	r8, r8, #8
  4027a2:	9b07      	ldr	r3, [sp, #28]
  4027a4:	05df      	lsls	r7, r3, #23
  4027a6:	f100 8268 	bmi.w	402c7a <_svfprintf_r+0x872>
  4027aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027ac:	990e      	ldr	r1, [sp, #56]	; 0x38
  4027ae:	f8c8 6000 	str.w	r6, [r8]
  4027b2:	3301      	adds	r3, #1
  4027b4:	440c      	add	r4, r1
  4027b6:	2b07      	cmp	r3, #7
  4027b8:	9427      	str	r4, [sp, #156]	; 0x9c
  4027ba:	f8c8 1004 	str.w	r1, [r8, #4]
  4027be:	9326      	str	r3, [sp, #152]	; 0x98
  4027c0:	f300 834d 	bgt.w	402e5e <_svfprintf_r+0xa56>
  4027c4:	f108 0808 	add.w	r8, r8, #8
  4027c8:	9b07      	ldr	r3, [sp, #28]
  4027ca:	075b      	lsls	r3, r3, #29
  4027cc:	d53a      	bpl.n	402844 <_svfprintf_r+0x43c>
  4027ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027d0:	9a08      	ldr	r2, [sp, #32]
  4027d2:	1a9d      	subs	r5, r3, r2
  4027d4:	2d00      	cmp	r5, #0
  4027d6:	dd35      	ble.n	402844 <_svfprintf_r+0x43c>
  4027d8:	2d10      	cmp	r5, #16
  4027da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027dc:	dd20      	ble.n	402820 <_svfprintf_r+0x418>
  4027de:	2610      	movs	r6, #16
  4027e0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4027e2:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4027e6:	e004      	b.n	4027f2 <_svfprintf_r+0x3ea>
  4027e8:	3d10      	subs	r5, #16
  4027ea:	2d10      	cmp	r5, #16
  4027ec:	f108 0808 	add.w	r8, r8, #8
  4027f0:	dd16      	ble.n	402820 <_svfprintf_r+0x418>
  4027f2:	3301      	adds	r3, #1
  4027f4:	4a5e      	ldr	r2, [pc, #376]	; (402970 <_svfprintf_r+0x568>)
  4027f6:	9326      	str	r3, [sp, #152]	; 0x98
  4027f8:	3410      	adds	r4, #16
  4027fa:	2b07      	cmp	r3, #7
  4027fc:	9427      	str	r4, [sp, #156]	; 0x9c
  4027fe:	e888 0044 	stmia.w	r8, {r2, r6}
  402802:	ddf1      	ble.n	4027e8 <_svfprintf_r+0x3e0>
  402804:	aa25      	add	r2, sp, #148	; 0x94
  402806:	4659      	mov	r1, fp
  402808:	4638      	mov	r0, r7
  40280a:	f002 ff67 	bl	4056dc <__ssprint_r>
  40280e:	2800      	cmp	r0, #0
  402810:	f47f aecc 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402814:	3d10      	subs	r5, #16
  402816:	2d10      	cmp	r5, #16
  402818:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40281a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40281c:	46c8      	mov	r8, r9
  40281e:	dce8      	bgt.n	4027f2 <_svfprintf_r+0x3ea>
  402820:	3301      	adds	r3, #1
  402822:	4a53      	ldr	r2, [pc, #332]	; (402970 <_svfprintf_r+0x568>)
  402824:	9326      	str	r3, [sp, #152]	; 0x98
  402826:	442c      	add	r4, r5
  402828:	2b07      	cmp	r3, #7
  40282a:	9427      	str	r4, [sp, #156]	; 0x9c
  40282c:	e888 0024 	stmia.w	r8, {r2, r5}
  402830:	dd08      	ble.n	402844 <_svfprintf_r+0x43c>
  402832:	aa25      	add	r2, sp, #148	; 0x94
  402834:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402836:	980c      	ldr	r0, [sp, #48]	; 0x30
  402838:	f002 ff50 	bl	4056dc <__ssprint_r>
  40283c:	2800      	cmp	r0, #0
  40283e:	f47f aeb5 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402842:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402844:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402846:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402848:	9908      	ldr	r1, [sp, #32]
  40284a:	428a      	cmp	r2, r1
  40284c:	bfac      	ite	ge
  40284e:	189b      	addge	r3, r3, r2
  402850:	185b      	addlt	r3, r3, r1
  402852:	9309      	str	r3, [sp, #36]	; 0x24
  402854:	2c00      	cmp	r4, #0
  402856:	f040 830d 	bne.w	402e74 <_svfprintf_r+0xa6c>
  40285a:	2300      	movs	r3, #0
  40285c:	9326      	str	r3, [sp, #152]	; 0x98
  40285e:	46c8      	mov	r8, r9
  402860:	e5f9      	b.n	402456 <_svfprintf_r+0x4e>
  402862:	9311      	str	r3, [sp, #68]	; 0x44
  402864:	f01b 0320 	ands.w	r3, fp, #32
  402868:	f040 81e3 	bne.w	402c32 <_svfprintf_r+0x82a>
  40286c:	f01b 0210 	ands.w	r2, fp, #16
  402870:	f040 842e 	bne.w	4030d0 <_svfprintf_r+0xcc8>
  402874:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402878:	f000 842a 	beq.w	4030d0 <_svfprintf_r+0xcc8>
  40287c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40287e:	4613      	mov	r3, r2
  402880:	460a      	mov	r2, r1
  402882:	3204      	adds	r2, #4
  402884:	880c      	ldrh	r4, [r1, #0]
  402886:	920f      	str	r2, [sp, #60]	; 0x3c
  402888:	2500      	movs	r5, #0
  40288a:	e6b0      	b.n	4025ee <_svfprintf_r+0x1e6>
  40288c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40288e:	9311      	str	r3, [sp, #68]	; 0x44
  402890:	6816      	ldr	r6, [r2, #0]
  402892:	2400      	movs	r4, #0
  402894:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402898:	1d15      	adds	r5, r2, #4
  40289a:	2e00      	cmp	r6, #0
  40289c:	f000 86a7 	beq.w	4035ee <_svfprintf_r+0x11e6>
  4028a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4028a2:	1c53      	adds	r3, r2, #1
  4028a4:	f000 8609 	beq.w	4034ba <_svfprintf_r+0x10b2>
  4028a8:	4621      	mov	r1, r4
  4028aa:	4630      	mov	r0, r6
  4028ac:	f002 fa88 	bl	404dc0 <memchr>
  4028b0:	2800      	cmp	r0, #0
  4028b2:	f000 86e1 	beq.w	403678 <_svfprintf_r+0x1270>
  4028b6:	1b83      	subs	r3, r0, r6
  4028b8:	930e      	str	r3, [sp, #56]	; 0x38
  4028ba:	940a      	str	r4, [sp, #40]	; 0x28
  4028bc:	950f      	str	r5, [sp, #60]	; 0x3c
  4028be:	f8cd b01c 	str.w	fp, [sp, #28]
  4028c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4028c6:	9308      	str	r3, [sp, #32]
  4028c8:	9412      	str	r4, [sp, #72]	; 0x48
  4028ca:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4028ce:	e6b3      	b.n	402638 <_svfprintf_r+0x230>
  4028d0:	f89a 3000 	ldrb.w	r3, [sl]
  4028d4:	2201      	movs	r2, #1
  4028d6:	212b      	movs	r1, #43	; 0x2b
  4028d8:	e5ee      	b.n	4024b8 <_svfprintf_r+0xb0>
  4028da:	f04b 0b20 	orr.w	fp, fp, #32
  4028de:	f89a 3000 	ldrb.w	r3, [sl]
  4028e2:	e5e9      	b.n	4024b8 <_svfprintf_r+0xb0>
  4028e4:	9311      	str	r3, [sp, #68]	; 0x44
  4028e6:	2a00      	cmp	r2, #0
  4028e8:	f040 8795 	bne.w	403816 <_svfprintf_r+0x140e>
  4028ec:	4b22      	ldr	r3, [pc, #136]	; (402978 <_svfprintf_r+0x570>)
  4028ee:	9318      	str	r3, [sp, #96]	; 0x60
  4028f0:	f01b 0f20 	tst.w	fp, #32
  4028f4:	f040 8111 	bne.w	402b1a <_svfprintf_r+0x712>
  4028f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028fa:	f01b 0f10 	tst.w	fp, #16
  4028fe:	4613      	mov	r3, r2
  402900:	f040 83e1 	bne.w	4030c6 <_svfprintf_r+0xcbe>
  402904:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402908:	f000 83dd 	beq.w	4030c6 <_svfprintf_r+0xcbe>
  40290c:	3304      	adds	r3, #4
  40290e:	8814      	ldrh	r4, [r2, #0]
  402910:	930f      	str	r3, [sp, #60]	; 0x3c
  402912:	2500      	movs	r5, #0
  402914:	f01b 0f01 	tst.w	fp, #1
  402918:	f000 810c 	beq.w	402b34 <_svfprintf_r+0x72c>
  40291c:	ea54 0305 	orrs.w	r3, r4, r5
  402920:	f000 8108 	beq.w	402b34 <_svfprintf_r+0x72c>
  402924:	2330      	movs	r3, #48	; 0x30
  402926:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40292a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40292e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402932:	f04b 0b02 	orr.w	fp, fp, #2
  402936:	2302      	movs	r3, #2
  402938:	e659      	b.n	4025ee <_svfprintf_r+0x1e6>
  40293a:	f89a 3000 	ldrb.w	r3, [sl]
  40293e:	2900      	cmp	r1, #0
  402940:	f47f adba 	bne.w	4024b8 <_svfprintf_r+0xb0>
  402944:	2201      	movs	r2, #1
  402946:	2120      	movs	r1, #32
  402948:	e5b6      	b.n	4024b8 <_svfprintf_r+0xb0>
  40294a:	f04b 0b01 	orr.w	fp, fp, #1
  40294e:	f89a 3000 	ldrb.w	r3, [sl]
  402952:	e5b1      	b.n	4024b8 <_svfprintf_r+0xb0>
  402954:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402956:	6823      	ldr	r3, [r4, #0]
  402958:	930d      	str	r3, [sp, #52]	; 0x34
  40295a:	4618      	mov	r0, r3
  40295c:	2800      	cmp	r0, #0
  40295e:	4623      	mov	r3, r4
  402960:	f103 0304 	add.w	r3, r3, #4
  402964:	f6ff ae0a 	blt.w	40257c <_svfprintf_r+0x174>
  402968:	930f      	str	r3, [sp, #60]	; 0x3c
  40296a:	f89a 3000 	ldrb.w	r3, [sl]
  40296e:	e5a3      	b.n	4024b8 <_svfprintf_r+0xb0>
  402970:	00406ec0 	.word	0x00406ec0
  402974:	00406ed0 	.word	0x00406ed0
  402978:	00406ea0 	.word	0x00406ea0
  40297c:	f04b 0b10 	orr.w	fp, fp, #16
  402980:	f01b 0f20 	tst.w	fp, #32
  402984:	9311      	str	r3, [sp, #68]	; 0x44
  402986:	f43f ae23 	beq.w	4025d0 <_svfprintf_r+0x1c8>
  40298a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40298c:	3507      	adds	r5, #7
  40298e:	f025 0307 	bic.w	r3, r5, #7
  402992:	f103 0208 	add.w	r2, r3, #8
  402996:	e9d3 4500 	ldrd	r4, r5, [r3]
  40299a:	920f      	str	r2, [sp, #60]	; 0x3c
  40299c:	2301      	movs	r3, #1
  40299e:	e626      	b.n	4025ee <_svfprintf_r+0x1e6>
  4029a0:	f89a 3000 	ldrb.w	r3, [sl]
  4029a4:	2b2a      	cmp	r3, #42	; 0x2a
  4029a6:	f10a 0401 	add.w	r4, sl, #1
  4029aa:	f000 8727 	beq.w	4037fc <_svfprintf_r+0x13f4>
  4029ae:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4029b2:	2809      	cmp	r0, #9
  4029b4:	46a2      	mov	sl, r4
  4029b6:	f200 86ad 	bhi.w	403714 <_svfprintf_r+0x130c>
  4029ba:	2300      	movs	r3, #0
  4029bc:	461c      	mov	r4, r3
  4029be:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4029c2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4029c6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4029ca:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4029ce:	2809      	cmp	r0, #9
  4029d0:	d9f5      	bls.n	4029be <_svfprintf_r+0x5b6>
  4029d2:	940a      	str	r4, [sp, #40]	; 0x28
  4029d4:	e572      	b.n	4024bc <_svfprintf_r+0xb4>
  4029d6:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4029da:	f89a 3000 	ldrb.w	r3, [sl]
  4029de:	e56b      	b.n	4024b8 <_svfprintf_r+0xb0>
  4029e0:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4029e4:	f89a 3000 	ldrb.w	r3, [sl]
  4029e8:	e566      	b.n	4024b8 <_svfprintf_r+0xb0>
  4029ea:	f89a 3000 	ldrb.w	r3, [sl]
  4029ee:	2b6c      	cmp	r3, #108	; 0x6c
  4029f0:	bf03      	ittte	eq
  4029f2:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4029f6:	f04b 0b20 	orreq.w	fp, fp, #32
  4029fa:	f10a 0a01 	addeq.w	sl, sl, #1
  4029fe:	f04b 0b10 	orrne.w	fp, fp, #16
  402a02:	e559      	b.n	4024b8 <_svfprintf_r+0xb0>
  402a04:	2a00      	cmp	r2, #0
  402a06:	f040 8711 	bne.w	40382c <_svfprintf_r+0x1424>
  402a0a:	f01b 0f20 	tst.w	fp, #32
  402a0e:	f040 84f9 	bne.w	403404 <_svfprintf_r+0xffc>
  402a12:	f01b 0f10 	tst.w	fp, #16
  402a16:	f040 84ac 	bne.w	403372 <_svfprintf_r+0xf6a>
  402a1a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a1e:	f000 84a8 	beq.w	403372 <_svfprintf_r+0xf6a>
  402a22:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a24:	6813      	ldr	r3, [r2, #0]
  402a26:	3204      	adds	r2, #4
  402a28:	920f      	str	r2, [sp, #60]	; 0x3c
  402a2a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402a2e:	801a      	strh	r2, [r3, #0]
  402a30:	e511      	b.n	402456 <_svfprintf_r+0x4e>
  402a32:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a34:	4bb3      	ldr	r3, [pc, #716]	; (402d04 <_svfprintf_r+0x8fc>)
  402a36:	680c      	ldr	r4, [r1, #0]
  402a38:	9318      	str	r3, [sp, #96]	; 0x60
  402a3a:	2230      	movs	r2, #48	; 0x30
  402a3c:	2378      	movs	r3, #120	; 0x78
  402a3e:	3104      	adds	r1, #4
  402a40:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402a44:	9311      	str	r3, [sp, #68]	; 0x44
  402a46:	f04b 0b02 	orr.w	fp, fp, #2
  402a4a:	910f      	str	r1, [sp, #60]	; 0x3c
  402a4c:	2500      	movs	r5, #0
  402a4e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402a52:	2302      	movs	r3, #2
  402a54:	e5cb      	b.n	4025ee <_svfprintf_r+0x1e6>
  402a56:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a58:	9311      	str	r3, [sp, #68]	; 0x44
  402a5a:	680a      	ldr	r2, [r1, #0]
  402a5c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402a60:	2300      	movs	r3, #0
  402a62:	460a      	mov	r2, r1
  402a64:	461f      	mov	r7, r3
  402a66:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402a6a:	3204      	adds	r2, #4
  402a6c:	2301      	movs	r3, #1
  402a6e:	9308      	str	r3, [sp, #32]
  402a70:	f8cd b01c 	str.w	fp, [sp, #28]
  402a74:	970a      	str	r7, [sp, #40]	; 0x28
  402a76:	9712      	str	r7, [sp, #72]	; 0x48
  402a78:	920f      	str	r2, [sp, #60]	; 0x3c
  402a7a:	930e      	str	r3, [sp, #56]	; 0x38
  402a7c:	ae28      	add	r6, sp, #160	; 0xa0
  402a7e:	e5df      	b.n	402640 <_svfprintf_r+0x238>
  402a80:	9311      	str	r3, [sp, #68]	; 0x44
  402a82:	2a00      	cmp	r2, #0
  402a84:	f040 86ea 	bne.w	40385c <_svfprintf_r+0x1454>
  402a88:	f01b 0f20 	tst.w	fp, #32
  402a8c:	d15d      	bne.n	402b4a <_svfprintf_r+0x742>
  402a8e:	f01b 0f10 	tst.w	fp, #16
  402a92:	f040 8308 	bne.w	4030a6 <_svfprintf_r+0xc9e>
  402a96:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a9a:	f000 8304 	beq.w	4030a6 <_svfprintf_r+0xc9e>
  402a9e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402aa0:	f9b1 4000 	ldrsh.w	r4, [r1]
  402aa4:	3104      	adds	r1, #4
  402aa6:	17e5      	asrs	r5, r4, #31
  402aa8:	4622      	mov	r2, r4
  402aaa:	462b      	mov	r3, r5
  402aac:	910f      	str	r1, [sp, #60]	; 0x3c
  402aae:	2a00      	cmp	r2, #0
  402ab0:	f173 0300 	sbcs.w	r3, r3, #0
  402ab4:	db58      	blt.n	402b68 <_svfprintf_r+0x760>
  402ab6:	990a      	ldr	r1, [sp, #40]	; 0x28
  402ab8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402abc:	1c4a      	adds	r2, r1, #1
  402abe:	f04f 0301 	mov.w	r3, #1
  402ac2:	f47f ad9b 	bne.w	4025fc <_svfprintf_r+0x1f4>
  402ac6:	ea54 0205 	orrs.w	r2, r4, r5
  402aca:	f000 81df 	beq.w	402e8c <_svfprintf_r+0xa84>
  402ace:	f8cd b01c 	str.w	fp, [sp, #28]
  402ad2:	2b01      	cmp	r3, #1
  402ad4:	f000 827b 	beq.w	402fce <_svfprintf_r+0xbc6>
  402ad8:	2b02      	cmp	r3, #2
  402ada:	f040 8206 	bne.w	402eea <_svfprintf_r+0xae2>
  402ade:	9818      	ldr	r0, [sp, #96]	; 0x60
  402ae0:	464e      	mov	r6, r9
  402ae2:	0923      	lsrs	r3, r4, #4
  402ae4:	f004 010f 	and.w	r1, r4, #15
  402ae8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402aec:	092a      	lsrs	r2, r5, #4
  402aee:	461c      	mov	r4, r3
  402af0:	4615      	mov	r5, r2
  402af2:	5c43      	ldrb	r3, [r0, r1]
  402af4:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402af8:	ea54 0305 	orrs.w	r3, r4, r5
  402afc:	d1f1      	bne.n	402ae2 <_svfprintf_r+0x6da>
  402afe:	eba9 0306 	sub.w	r3, r9, r6
  402b02:	930e      	str	r3, [sp, #56]	; 0x38
  402b04:	e590      	b.n	402628 <_svfprintf_r+0x220>
  402b06:	9311      	str	r3, [sp, #68]	; 0x44
  402b08:	2a00      	cmp	r2, #0
  402b0a:	f040 86a3 	bne.w	403854 <_svfprintf_r+0x144c>
  402b0e:	4b7e      	ldr	r3, [pc, #504]	; (402d08 <_svfprintf_r+0x900>)
  402b10:	9318      	str	r3, [sp, #96]	; 0x60
  402b12:	f01b 0f20 	tst.w	fp, #32
  402b16:	f43f aeef 	beq.w	4028f8 <_svfprintf_r+0x4f0>
  402b1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b1c:	3507      	adds	r5, #7
  402b1e:	f025 0307 	bic.w	r3, r5, #7
  402b22:	f103 0208 	add.w	r2, r3, #8
  402b26:	f01b 0f01 	tst.w	fp, #1
  402b2a:	920f      	str	r2, [sp, #60]	; 0x3c
  402b2c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b30:	f47f aef4 	bne.w	40291c <_svfprintf_r+0x514>
  402b34:	2302      	movs	r3, #2
  402b36:	e55a      	b.n	4025ee <_svfprintf_r+0x1e6>
  402b38:	9311      	str	r3, [sp, #68]	; 0x44
  402b3a:	2a00      	cmp	r2, #0
  402b3c:	f040 8686 	bne.w	40384c <_svfprintf_r+0x1444>
  402b40:	f04b 0b10 	orr.w	fp, fp, #16
  402b44:	f01b 0f20 	tst.w	fp, #32
  402b48:	d0a1      	beq.n	402a8e <_svfprintf_r+0x686>
  402b4a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b4c:	3507      	adds	r5, #7
  402b4e:	f025 0507 	bic.w	r5, r5, #7
  402b52:	e9d5 2300 	ldrd	r2, r3, [r5]
  402b56:	2a00      	cmp	r2, #0
  402b58:	f105 0108 	add.w	r1, r5, #8
  402b5c:	461d      	mov	r5, r3
  402b5e:	f173 0300 	sbcs.w	r3, r3, #0
  402b62:	910f      	str	r1, [sp, #60]	; 0x3c
  402b64:	4614      	mov	r4, r2
  402b66:	daa6      	bge.n	402ab6 <_svfprintf_r+0x6ae>
  402b68:	272d      	movs	r7, #45	; 0x2d
  402b6a:	4264      	negs	r4, r4
  402b6c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402b70:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b74:	2301      	movs	r3, #1
  402b76:	e53d      	b.n	4025f4 <_svfprintf_r+0x1ec>
  402b78:	9311      	str	r3, [sp, #68]	; 0x44
  402b7a:	2a00      	cmp	r2, #0
  402b7c:	f040 8662 	bne.w	403844 <_svfprintf_r+0x143c>
  402b80:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b82:	3507      	adds	r5, #7
  402b84:	f025 0307 	bic.w	r3, r5, #7
  402b88:	f103 0208 	add.w	r2, r3, #8
  402b8c:	920f      	str	r2, [sp, #60]	; 0x3c
  402b8e:	681a      	ldr	r2, [r3, #0]
  402b90:	9215      	str	r2, [sp, #84]	; 0x54
  402b92:	685b      	ldr	r3, [r3, #4]
  402b94:	9314      	str	r3, [sp, #80]	; 0x50
  402b96:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402b98:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402b9a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402b9e:	4628      	mov	r0, r5
  402ba0:	4621      	mov	r1, r4
  402ba2:	f04f 32ff 	mov.w	r2, #4294967295
  402ba6:	4b59      	ldr	r3, [pc, #356]	; (402d0c <_svfprintf_r+0x904>)
  402ba8:	f003 fa94 	bl	4060d4 <__aeabi_dcmpun>
  402bac:	2800      	cmp	r0, #0
  402bae:	f040 834a 	bne.w	403246 <_svfprintf_r+0xe3e>
  402bb2:	4628      	mov	r0, r5
  402bb4:	4621      	mov	r1, r4
  402bb6:	f04f 32ff 	mov.w	r2, #4294967295
  402bba:	4b54      	ldr	r3, [pc, #336]	; (402d0c <_svfprintf_r+0x904>)
  402bbc:	f003 fa6c 	bl	406098 <__aeabi_dcmple>
  402bc0:	2800      	cmp	r0, #0
  402bc2:	f040 8340 	bne.w	403246 <_svfprintf_r+0xe3e>
  402bc6:	a815      	add	r0, sp, #84	; 0x54
  402bc8:	c80d      	ldmia	r0, {r0, r2, r3}
  402bca:	9914      	ldr	r1, [sp, #80]	; 0x50
  402bcc:	f003 fa5a 	bl	406084 <__aeabi_dcmplt>
  402bd0:	2800      	cmp	r0, #0
  402bd2:	f040 8530 	bne.w	403636 <_svfprintf_r+0x122e>
  402bd6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bda:	4e4d      	ldr	r6, [pc, #308]	; (402d10 <_svfprintf_r+0x908>)
  402bdc:	4b4d      	ldr	r3, [pc, #308]	; (402d14 <_svfprintf_r+0x90c>)
  402bde:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402be2:	9007      	str	r0, [sp, #28]
  402be4:	9811      	ldr	r0, [sp, #68]	; 0x44
  402be6:	2203      	movs	r2, #3
  402be8:	2100      	movs	r1, #0
  402bea:	9208      	str	r2, [sp, #32]
  402bec:	910a      	str	r1, [sp, #40]	; 0x28
  402bee:	2847      	cmp	r0, #71	; 0x47
  402bf0:	bfd8      	it	le
  402bf2:	461e      	movle	r6, r3
  402bf4:	920e      	str	r2, [sp, #56]	; 0x38
  402bf6:	9112      	str	r1, [sp, #72]	; 0x48
  402bf8:	e51e      	b.n	402638 <_svfprintf_r+0x230>
  402bfa:	f04b 0b08 	orr.w	fp, fp, #8
  402bfe:	f89a 3000 	ldrb.w	r3, [sl]
  402c02:	e459      	b.n	4024b8 <_svfprintf_r+0xb0>
  402c04:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c08:	2300      	movs	r3, #0
  402c0a:	461c      	mov	r4, r3
  402c0c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402c10:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402c14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402c18:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402c1c:	2809      	cmp	r0, #9
  402c1e:	d9f5      	bls.n	402c0c <_svfprintf_r+0x804>
  402c20:	940d      	str	r4, [sp, #52]	; 0x34
  402c22:	e44b      	b.n	4024bc <_svfprintf_r+0xb4>
  402c24:	f04b 0b10 	orr.w	fp, fp, #16
  402c28:	9311      	str	r3, [sp, #68]	; 0x44
  402c2a:	f01b 0320 	ands.w	r3, fp, #32
  402c2e:	f43f ae1d 	beq.w	40286c <_svfprintf_r+0x464>
  402c32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c34:	3507      	adds	r5, #7
  402c36:	f025 0307 	bic.w	r3, r5, #7
  402c3a:	f103 0208 	add.w	r2, r3, #8
  402c3e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402c42:	920f      	str	r2, [sp, #60]	; 0x3c
  402c44:	2300      	movs	r3, #0
  402c46:	e4d2      	b.n	4025ee <_svfprintf_r+0x1e6>
  402c48:	9311      	str	r3, [sp, #68]	; 0x44
  402c4a:	2a00      	cmp	r2, #0
  402c4c:	f040 85e7 	bne.w	40381e <_svfprintf_r+0x1416>
  402c50:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c52:	2a00      	cmp	r2, #0
  402c54:	f43f aca3 	beq.w	40259e <_svfprintf_r+0x196>
  402c58:	2300      	movs	r3, #0
  402c5a:	2101      	movs	r1, #1
  402c5c:	461f      	mov	r7, r3
  402c5e:	9108      	str	r1, [sp, #32]
  402c60:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402c64:	f8cd b01c 	str.w	fp, [sp, #28]
  402c68:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402c6c:	930a      	str	r3, [sp, #40]	; 0x28
  402c6e:	9312      	str	r3, [sp, #72]	; 0x48
  402c70:	910e      	str	r1, [sp, #56]	; 0x38
  402c72:	ae28      	add	r6, sp, #160	; 0xa0
  402c74:	e4e4      	b.n	402640 <_svfprintf_r+0x238>
  402c76:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c78:	e534      	b.n	4026e4 <_svfprintf_r+0x2dc>
  402c7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c7c:	2b65      	cmp	r3, #101	; 0x65
  402c7e:	f340 80a7 	ble.w	402dd0 <_svfprintf_r+0x9c8>
  402c82:	a815      	add	r0, sp, #84	; 0x54
  402c84:	c80d      	ldmia	r0, {r0, r2, r3}
  402c86:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c88:	f003 f9f2 	bl	406070 <__aeabi_dcmpeq>
  402c8c:	2800      	cmp	r0, #0
  402c8e:	f000 8150 	beq.w	402f32 <_svfprintf_r+0xb2a>
  402c92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c94:	4a20      	ldr	r2, [pc, #128]	; (402d18 <_svfprintf_r+0x910>)
  402c96:	f8c8 2000 	str.w	r2, [r8]
  402c9a:	3301      	adds	r3, #1
  402c9c:	3401      	adds	r4, #1
  402c9e:	2201      	movs	r2, #1
  402ca0:	2b07      	cmp	r3, #7
  402ca2:	9427      	str	r4, [sp, #156]	; 0x9c
  402ca4:	9326      	str	r3, [sp, #152]	; 0x98
  402ca6:	f8c8 2004 	str.w	r2, [r8, #4]
  402caa:	f300 836a 	bgt.w	403382 <_svfprintf_r+0xf7a>
  402cae:	f108 0808 	add.w	r8, r8, #8
  402cb2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402cb6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cb8:	4293      	cmp	r3, r2
  402cba:	db03      	blt.n	402cc4 <_svfprintf_r+0x8bc>
  402cbc:	9b07      	ldr	r3, [sp, #28]
  402cbe:	07dd      	lsls	r5, r3, #31
  402cc0:	f57f ad82 	bpl.w	4027c8 <_svfprintf_r+0x3c0>
  402cc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cc6:	9919      	ldr	r1, [sp, #100]	; 0x64
  402cc8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402cca:	f8c8 2000 	str.w	r2, [r8]
  402cce:	3301      	adds	r3, #1
  402cd0:	440c      	add	r4, r1
  402cd2:	2b07      	cmp	r3, #7
  402cd4:	f8c8 1004 	str.w	r1, [r8, #4]
  402cd8:	9427      	str	r4, [sp, #156]	; 0x9c
  402cda:	9326      	str	r3, [sp, #152]	; 0x98
  402cdc:	f300 839e 	bgt.w	40341c <_svfprintf_r+0x1014>
  402ce0:	f108 0808 	add.w	r8, r8, #8
  402ce4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ce6:	1e5e      	subs	r6, r3, #1
  402ce8:	2e00      	cmp	r6, #0
  402cea:	f77f ad6d 	ble.w	4027c8 <_svfprintf_r+0x3c0>
  402cee:	2e10      	cmp	r6, #16
  402cf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cf2:	4d0a      	ldr	r5, [pc, #40]	; (402d1c <_svfprintf_r+0x914>)
  402cf4:	f340 81f5 	ble.w	4030e2 <_svfprintf_r+0xcda>
  402cf8:	4622      	mov	r2, r4
  402cfa:	2710      	movs	r7, #16
  402cfc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402d00:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402d02:	e013      	b.n	402d2c <_svfprintf_r+0x924>
  402d04:	00406ea0 	.word	0x00406ea0
  402d08:	00406e8c 	.word	0x00406e8c
  402d0c:	7fefffff 	.word	0x7fefffff
  402d10:	00406e80 	.word	0x00406e80
  402d14:	00406e7c 	.word	0x00406e7c
  402d18:	00406ebc 	.word	0x00406ebc
  402d1c:	00406ed0 	.word	0x00406ed0
  402d20:	f108 0808 	add.w	r8, r8, #8
  402d24:	3e10      	subs	r6, #16
  402d26:	2e10      	cmp	r6, #16
  402d28:	f340 81da 	ble.w	4030e0 <_svfprintf_r+0xcd8>
  402d2c:	3301      	adds	r3, #1
  402d2e:	3210      	adds	r2, #16
  402d30:	2b07      	cmp	r3, #7
  402d32:	9227      	str	r2, [sp, #156]	; 0x9c
  402d34:	9326      	str	r3, [sp, #152]	; 0x98
  402d36:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d3a:	ddf1      	ble.n	402d20 <_svfprintf_r+0x918>
  402d3c:	aa25      	add	r2, sp, #148	; 0x94
  402d3e:	4621      	mov	r1, r4
  402d40:	4658      	mov	r0, fp
  402d42:	f002 fccb 	bl	4056dc <__ssprint_r>
  402d46:	2800      	cmp	r0, #0
  402d48:	f47f ac30 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402d4c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d50:	46c8      	mov	r8, r9
  402d52:	e7e7      	b.n	402d24 <_svfprintf_r+0x91c>
  402d54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402d56:	9a08      	ldr	r2, [sp, #32]
  402d58:	1a9f      	subs	r7, r3, r2
  402d5a:	2f00      	cmp	r7, #0
  402d5c:	f77f ace5 	ble.w	40272a <_svfprintf_r+0x322>
  402d60:	2f10      	cmp	r7, #16
  402d62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d64:	4db6      	ldr	r5, [pc, #728]	; (403040 <_svfprintf_r+0xc38>)
  402d66:	dd27      	ble.n	402db8 <_svfprintf_r+0x9b0>
  402d68:	4642      	mov	r2, r8
  402d6a:	4621      	mov	r1, r4
  402d6c:	46b0      	mov	r8, r6
  402d6e:	f04f 0b10 	mov.w	fp, #16
  402d72:	462e      	mov	r6, r5
  402d74:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d76:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402d78:	e004      	b.n	402d84 <_svfprintf_r+0x97c>
  402d7a:	3f10      	subs	r7, #16
  402d7c:	2f10      	cmp	r7, #16
  402d7e:	f102 0208 	add.w	r2, r2, #8
  402d82:	dd15      	ble.n	402db0 <_svfprintf_r+0x9a8>
  402d84:	3301      	adds	r3, #1
  402d86:	3110      	adds	r1, #16
  402d88:	2b07      	cmp	r3, #7
  402d8a:	9127      	str	r1, [sp, #156]	; 0x9c
  402d8c:	9326      	str	r3, [sp, #152]	; 0x98
  402d8e:	e882 0840 	stmia.w	r2, {r6, fp}
  402d92:	ddf2      	ble.n	402d7a <_svfprintf_r+0x972>
  402d94:	aa25      	add	r2, sp, #148	; 0x94
  402d96:	4629      	mov	r1, r5
  402d98:	4620      	mov	r0, r4
  402d9a:	f002 fc9f 	bl	4056dc <__ssprint_r>
  402d9e:	2800      	cmp	r0, #0
  402da0:	f47f ac04 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402da4:	3f10      	subs	r7, #16
  402da6:	2f10      	cmp	r7, #16
  402da8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402daa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dac:	464a      	mov	r2, r9
  402dae:	dce9      	bgt.n	402d84 <_svfprintf_r+0x97c>
  402db0:	4635      	mov	r5, r6
  402db2:	460c      	mov	r4, r1
  402db4:	4646      	mov	r6, r8
  402db6:	4690      	mov	r8, r2
  402db8:	3301      	adds	r3, #1
  402dba:	443c      	add	r4, r7
  402dbc:	2b07      	cmp	r3, #7
  402dbe:	9427      	str	r4, [sp, #156]	; 0x9c
  402dc0:	9326      	str	r3, [sp, #152]	; 0x98
  402dc2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402dc6:	f300 8232 	bgt.w	40322e <_svfprintf_r+0xe26>
  402dca:	f108 0808 	add.w	r8, r8, #8
  402dce:	e4ac      	b.n	40272a <_svfprintf_r+0x322>
  402dd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402dd2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402dd4:	2b01      	cmp	r3, #1
  402dd6:	f340 81fe 	ble.w	4031d6 <_svfprintf_r+0xdce>
  402dda:	3701      	adds	r7, #1
  402ddc:	3401      	adds	r4, #1
  402dde:	2301      	movs	r3, #1
  402de0:	2f07      	cmp	r7, #7
  402de2:	9427      	str	r4, [sp, #156]	; 0x9c
  402de4:	9726      	str	r7, [sp, #152]	; 0x98
  402de6:	f8c8 6000 	str.w	r6, [r8]
  402dea:	f8c8 3004 	str.w	r3, [r8, #4]
  402dee:	f300 8203 	bgt.w	4031f8 <_svfprintf_r+0xdf0>
  402df2:	f108 0808 	add.w	r8, r8, #8
  402df6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402df8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402dfa:	f8c8 3000 	str.w	r3, [r8]
  402dfe:	3701      	adds	r7, #1
  402e00:	4414      	add	r4, r2
  402e02:	2f07      	cmp	r7, #7
  402e04:	9427      	str	r4, [sp, #156]	; 0x9c
  402e06:	9726      	str	r7, [sp, #152]	; 0x98
  402e08:	f8c8 2004 	str.w	r2, [r8, #4]
  402e0c:	f300 8200 	bgt.w	403210 <_svfprintf_r+0xe08>
  402e10:	f108 0808 	add.w	r8, r8, #8
  402e14:	a815      	add	r0, sp, #84	; 0x54
  402e16:	c80d      	ldmia	r0, {r0, r2, r3}
  402e18:	9914      	ldr	r1, [sp, #80]	; 0x50
  402e1a:	f003 f929 	bl	406070 <__aeabi_dcmpeq>
  402e1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e20:	2800      	cmp	r0, #0
  402e22:	f040 8101 	bne.w	403028 <_svfprintf_r+0xc20>
  402e26:	3b01      	subs	r3, #1
  402e28:	3701      	adds	r7, #1
  402e2a:	3601      	adds	r6, #1
  402e2c:	441c      	add	r4, r3
  402e2e:	2f07      	cmp	r7, #7
  402e30:	9726      	str	r7, [sp, #152]	; 0x98
  402e32:	9427      	str	r4, [sp, #156]	; 0x9c
  402e34:	f8c8 6000 	str.w	r6, [r8]
  402e38:	f8c8 3004 	str.w	r3, [r8, #4]
  402e3c:	f300 8127 	bgt.w	40308e <_svfprintf_r+0xc86>
  402e40:	f108 0808 	add.w	r8, r8, #8
  402e44:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402e46:	f8c8 2004 	str.w	r2, [r8, #4]
  402e4a:	3701      	adds	r7, #1
  402e4c:	4414      	add	r4, r2
  402e4e:	ab21      	add	r3, sp, #132	; 0x84
  402e50:	2f07      	cmp	r7, #7
  402e52:	9427      	str	r4, [sp, #156]	; 0x9c
  402e54:	9726      	str	r7, [sp, #152]	; 0x98
  402e56:	f8c8 3000 	str.w	r3, [r8]
  402e5a:	f77f acb3 	ble.w	4027c4 <_svfprintf_r+0x3bc>
  402e5e:	aa25      	add	r2, sp, #148	; 0x94
  402e60:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e62:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e64:	f002 fc3a 	bl	4056dc <__ssprint_r>
  402e68:	2800      	cmp	r0, #0
  402e6a:	f47f ab9f 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402e6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e70:	46c8      	mov	r8, r9
  402e72:	e4a9      	b.n	4027c8 <_svfprintf_r+0x3c0>
  402e74:	aa25      	add	r2, sp, #148	; 0x94
  402e76:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e78:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e7a:	f002 fc2f 	bl	4056dc <__ssprint_r>
  402e7e:	2800      	cmp	r0, #0
  402e80:	f43f aceb 	beq.w	40285a <_svfprintf_r+0x452>
  402e84:	f7ff bb92 	b.w	4025ac <_svfprintf_r+0x1a4>
  402e88:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e8c:	2b01      	cmp	r3, #1
  402e8e:	f000 8134 	beq.w	4030fa <_svfprintf_r+0xcf2>
  402e92:	2b02      	cmp	r3, #2
  402e94:	d125      	bne.n	402ee2 <_svfprintf_r+0xada>
  402e96:	f8cd b01c 	str.w	fp, [sp, #28]
  402e9a:	2400      	movs	r4, #0
  402e9c:	2500      	movs	r5, #0
  402e9e:	e61e      	b.n	402ade <_svfprintf_r+0x6d6>
  402ea0:	aa25      	add	r2, sp, #148	; 0x94
  402ea2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ea4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ea6:	f002 fc19 	bl	4056dc <__ssprint_r>
  402eaa:	2800      	cmp	r0, #0
  402eac:	f47f ab7e 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402eb0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402eb2:	46c8      	mov	r8, r9
  402eb4:	e475      	b.n	4027a2 <_svfprintf_r+0x39a>
  402eb6:	aa25      	add	r2, sp, #148	; 0x94
  402eb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eba:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ebc:	f002 fc0e 	bl	4056dc <__ssprint_r>
  402ec0:	2800      	cmp	r0, #0
  402ec2:	f47f ab73 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402ec6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ec8:	46c8      	mov	r8, r9
  402eca:	e41b      	b.n	402704 <_svfprintf_r+0x2fc>
  402ecc:	aa25      	add	r2, sp, #148	; 0x94
  402ece:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ed0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ed2:	f002 fc03 	bl	4056dc <__ssprint_r>
  402ed6:	2800      	cmp	r0, #0
  402ed8:	f47f ab68 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402edc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ede:	46c8      	mov	r8, r9
  402ee0:	e420      	b.n	402724 <_svfprintf_r+0x31c>
  402ee2:	f8cd b01c 	str.w	fp, [sp, #28]
  402ee6:	2400      	movs	r4, #0
  402ee8:	2500      	movs	r5, #0
  402eea:	4649      	mov	r1, r9
  402eec:	e000      	b.n	402ef0 <_svfprintf_r+0xae8>
  402eee:	4631      	mov	r1, r6
  402ef0:	08e2      	lsrs	r2, r4, #3
  402ef2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402ef6:	08e8      	lsrs	r0, r5, #3
  402ef8:	f004 0307 	and.w	r3, r4, #7
  402efc:	4605      	mov	r5, r0
  402efe:	4614      	mov	r4, r2
  402f00:	3330      	adds	r3, #48	; 0x30
  402f02:	ea54 0205 	orrs.w	r2, r4, r5
  402f06:	f801 3c01 	strb.w	r3, [r1, #-1]
  402f0a:	f101 36ff 	add.w	r6, r1, #4294967295
  402f0e:	d1ee      	bne.n	402eee <_svfprintf_r+0xae6>
  402f10:	9a07      	ldr	r2, [sp, #28]
  402f12:	07d2      	lsls	r2, r2, #31
  402f14:	f57f adf3 	bpl.w	402afe <_svfprintf_r+0x6f6>
  402f18:	2b30      	cmp	r3, #48	; 0x30
  402f1a:	f43f adf0 	beq.w	402afe <_svfprintf_r+0x6f6>
  402f1e:	3902      	subs	r1, #2
  402f20:	2330      	movs	r3, #48	; 0x30
  402f22:	f806 3c01 	strb.w	r3, [r6, #-1]
  402f26:	eba9 0301 	sub.w	r3, r9, r1
  402f2a:	930e      	str	r3, [sp, #56]	; 0x38
  402f2c:	460e      	mov	r6, r1
  402f2e:	f7ff bb7b 	b.w	402628 <_svfprintf_r+0x220>
  402f32:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402f34:	2900      	cmp	r1, #0
  402f36:	f340 822e 	ble.w	403396 <_svfprintf_r+0xf8e>
  402f3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f3e:	4293      	cmp	r3, r2
  402f40:	bfa8      	it	ge
  402f42:	4613      	movge	r3, r2
  402f44:	2b00      	cmp	r3, #0
  402f46:	461f      	mov	r7, r3
  402f48:	dd0d      	ble.n	402f66 <_svfprintf_r+0xb5e>
  402f4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f4c:	f8c8 6000 	str.w	r6, [r8]
  402f50:	3301      	adds	r3, #1
  402f52:	443c      	add	r4, r7
  402f54:	2b07      	cmp	r3, #7
  402f56:	9427      	str	r4, [sp, #156]	; 0x9c
  402f58:	f8c8 7004 	str.w	r7, [r8, #4]
  402f5c:	9326      	str	r3, [sp, #152]	; 0x98
  402f5e:	f300 831f 	bgt.w	4035a0 <_svfprintf_r+0x1198>
  402f62:	f108 0808 	add.w	r8, r8, #8
  402f66:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f68:	2f00      	cmp	r7, #0
  402f6a:	bfa8      	it	ge
  402f6c:	1bdb      	subge	r3, r3, r7
  402f6e:	2b00      	cmp	r3, #0
  402f70:	461f      	mov	r7, r3
  402f72:	f340 80d6 	ble.w	403122 <_svfprintf_r+0xd1a>
  402f76:	2f10      	cmp	r7, #16
  402f78:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f7a:	4d31      	ldr	r5, [pc, #196]	; (403040 <_svfprintf_r+0xc38>)
  402f7c:	f340 81ed 	ble.w	40335a <_svfprintf_r+0xf52>
  402f80:	4642      	mov	r2, r8
  402f82:	4621      	mov	r1, r4
  402f84:	46b0      	mov	r8, r6
  402f86:	f04f 0b10 	mov.w	fp, #16
  402f8a:	462e      	mov	r6, r5
  402f8c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402f8e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402f90:	e004      	b.n	402f9c <_svfprintf_r+0xb94>
  402f92:	3208      	adds	r2, #8
  402f94:	3f10      	subs	r7, #16
  402f96:	2f10      	cmp	r7, #16
  402f98:	f340 81db 	ble.w	403352 <_svfprintf_r+0xf4a>
  402f9c:	3301      	adds	r3, #1
  402f9e:	3110      	adds	r1, #16
  402fa0:	2b07      	cmp	r3, #7
  402fa2:	9127      	str	r1, [sp, #156]	; 0x9c
  402fa4:	9326      	str	r3, [sp, #152]	; 0x98
  402fa6:	e882 0840 	stmia.w	r2, {r6, fp}
  402faa:	ddf2      	ble.n	402f92 <_svfprintf_r+0xb8a>
  402fac:	aa25      	add	r2, sp, #148	; 0x94
  402fae:	4629      	mov	r1, r5
  402fb0:	4620      	mov	r0, r4
  402fb2:	f002 fb93 	bl	4056dc <__ssprint_r>
  402fb6:	2800      	cmp	r0, #0
  402fb8:	f47f aaf8 	bne.w	4025ac <_svfprintf_r+0x1a4>
  402fbc:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402fbe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fc0:	464a      	mov	r2, r9
  402fc2:	e7e7      	b.n	402f94 <_svfprintf_r+0xb8c>
  402fc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fc6:	930e      	str	r3, [sp, #56]	; 0x38
  402fc8:	464e      	mov	r6, r9
  402fca:	f7ff bb2d 	b.w	402628 <_svfprintf_r+0x220>
  402fce:	2d00      	cmp	r5, #0
  402fd0:	bf08      	it	eq
  402fd2:	2c0a      	cmpeq	r4, #10
  402fd4:	f0c0 808f 	bcc.w	4030f6 <_svfprintf_r+0xcee>
  402fd8:	464e      	mov	r6, r9
  402fda:	4620      	mov	r0, r4
  402fdc:	4629      	mov	r1, r5
  402fde:	220a      	movs	r2, #10
  402fe0:	2300      	movs	r3, #0
  402fe2:	f003 f88d 	bl	406100 <__aeabi_uldivmod>
  402fe6:	3230      	adds	r2, #48	; 0x30
  402fe8:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402fec:	4620      	mov	r0, r4
  402fee:	4629      	mov	r1, r5
  402ff0:	2300      	movs	r3, #0
  402ff2:	220a      	movs	r2, #10
  402ff4:	f003 f884 	bl	406100 <__aeabi_uldivmod>
  402ff8:	4604      	mov	r4, r0
  402ffa:	460d      	mov	r5, r1
  402ffc:	ea54 0305 	orrs.w	r3, r4, r5
  403000:	d1eb      	bne.n	402fda <_svfprintf_r+0xbd2>
  403002:	eba9 0306 	sub.w	r3, r9, r6
  403006:	930e      	str	r3, [sp, #56]	; 0x38
  403008:	f7ff bb0e 	b.w	402628 <_svfprintf_r+0x220>
  40300c:	aa25      	add	r2, sp, #148	; 0x94
  40300e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403010:	980c      	ldr	r0, [sp, #48]	; 0x30
  403012:	f002 fb63 	bl	4056dc <__ssprint_r>
  403016:	2800      	cmp	r0, #0
  403018:	f47f aac8 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40301c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403020:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403022:	46c8      	mov	r8, r9
  403024:	f7ff bb5e 	b.w	4026e4 <_svfprintf_r+0x2dc>
  403028:	1e5e      	subs	r6, r3, #1
  40302a:	2e00      	cmp	r6, #0
  40302c:	f77f af0a 	ble.w	402e44 <_svfprintf_r+0xa3c>
  403030:	2e10      	cmp	r6, #16
  403032:	4d03      	ldr	r5, [pc, #12]	; (403040 <_svfprintf_r+0xc38>)
  403034:	dd22      	ble.n	40307c <_svfprintf_r+0xc74>
  403036:	4622      	mov	r2, r4
  403038:	f04f 0b10 	mov.w	fp, #16
  40303c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40303e:	e006      	b.n	40304e <_svfprintf_r+0xc46>
  403040:	00406ed0 	.word	0x00406ed0
  403044:	3e10      	subs	r6, #16
  403046:	2e10      	cmp	r6, #16
  403048:	f108 0808 	add.w	r8, r8, #8
  40304c:	dd15      	ble.n	40307a <_svfprintf_r+0xc72>
  40304e:	3701      	adds	r7, #1
  403050:	3210      	adds	r2, #16
  403052:	2f07      	cmp	r7, #7
  403054:	9227      	str	r2, [sp, #156]	; 0x9c
  403056:	9726      	str	r7, [sp, #152]	; 0x98
  403058:	e888 0820 	stmia.w	r8, {r5, fp}
  40305c:	ddf2      	ble.n	403044 <_svfprintf_r+0xc3c>
  40305e:	aa25      	add	r2, sp, #148	; 0x94
  403060:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403062:	4620      	mov	r0, r4
  403064:	f002 fb3a 	bl	4056dc <__ssprint_r>
  403068:	2800      	cmp	r0, #0
  40306a:	f47f aa9f 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40306e:	3e10      	subs	r6, #16
  403070:	2e10      	cmp	r6, #16
  403072:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403074:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403076:	46c8      	mov	r8, r9
  403078:	dce9      	bgt.n	40304e <_svfprintf_r+0xc46>
  40307a:	4614      	mov	r4, r2
  40307c:	3701      	adds	r7, #1
  40307e:	4434      	add	r4, r6
  403080:	2f07      	cmp	r7, #7
  403082:	9427      	str	r4, [sp, #156]	; 0x9c
  403084:	9726      	str	r7, [sp, #152]	; 0x98
  403086:	e888 0060 	stmia.w	r8, {r5, r6}
  40308a:	f77f aed9 	ble.w	402e40 <_svfprintf_r+0xa38>
  40308e:	aa25      	add	r2, sp, #148	; 0x94
  403090:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403092:	980c      	ldr	r0, [sp, #48]	; 0x30
  403094:	f002 fb22 	bl	4056dc <__ssprint_r>
  403098:	2800      	cmp	r0, #0
  40309a:	f47f aa87 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40309e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030a0:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4030a2:	46c8      	mov	r8, r9
  4030a4:	e6ce      	b.n	402e44 <_svfprintf_r+0xa3c>
  4030a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4030a8:	6814      	ldr	r4, [r2, #0]
  4030aa:	4613      	mov	r3, r2
  4030ac:	3304      	adds	r3, #4
  4030ae:	17e5      	asrs	r5, r4, #31
  4030b0:	930f      	str	r3, [sp, #60]	; 0x3c
  4030b2:	4622      	mov	r2, r4
  4030b4:	462b      	mov	r3, r5
  4030b6:	e4fa      	b.n	402aae <_svfprintf_r+0x6a6>
  4030b8:	3204      	adds	r2, #4
  4030ba:	681c      	ldr	r4, [r3, #0]
  4030bc:	920f      	str	r2, [sp, #60]	; 0x3c
  4030be:	2301      	movs	r3, #1
  4030c0:	2500      	movs	r5, #0
  4030c2:	f7ff ba94 	b.w	4025ee <_svfprintf_r+0x1e6>
  4030c6:	681c      	ldr	r4, [r3, #0]
  4030c8:	3304      	adds	r3, #4
  4030ca:	930f      	str	r3, [sp, #60]	; 0x3c
  4030cc:	2500      	movs	r5, #0
  4030ce:	e421      	b.n	402914 <_svfprintf_r+0x50c>
  4030d0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4030d2:	460a      	mov	r2, r1
  4030d4:	3204      	adds	r2, #4
  4030d6:	680c      	ldr	r4, [r1, #0]
  4030d8:	920f      	str	r2, [sp, #60]	; 0x3c
  4030da:	2500      	movs	r5, #0
  4030dc:	f7ff ba87 	b.w	4025ee <_svfprintf_r+0x1e6>
  4030e0:	4614      	mov	r4, r2
  4030e2:	3301      	adds	r3, #1
  4030e4:	4434      	add	r4, r6
  4030e6:	2b07      	cmp	r3, #7
  4030e8:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ea:	9326      	str	r3, [sp, #152]	; 0x98
  4030ec:	e888 0060 	stmia.w	r8, {r5, r6}
  4030f0:	f77f ab68 	ble.w	4027c4 <_svfprintf_r+0x3bc>
  4030f4:	e6b3      	b.n	402e5e <_svfprintf_r+0xa56>
  4030f6:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4030fa:	f8cd b01c 	str.w	fp, [sp, #28]
  4030fe:	ae42      	add	r6, sp, #264	; 0x108
  403100:	3430      	adds	r4, #48	; 0x30
  403102:	2301      	movs	r3, #1
  403104:	f806 4d41 	strb.w	r4, [r6, #-65]!
  403108:	930e      	str	r3, [sp, #56]	; 0x38
  40310a:	f7ff ba8d 	b.w	402628 <_svfprintf_r+0x220>
  40310e:	aa25      	add	r2, sp, #148	; 0x94
  403110:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403112:	980c      	ldr	r0, [sp, #48]	; 0x30
  403114:	f002 fae2 	bl	4056dc <__ssprint_r>
  403118:	2800      	cmp	r0, #0
  40311a:	f47f aa47 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40311e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403120:	46c8      	mov	r8, r9
  403122:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403124:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403126:	429a      	cmp	r2, r3
  403128:	db44      	blt.n	4031b4 <_svfprintf_r+0xdac>
  40312a:	9b07      	ldr	r3, [sp, #28]
  40312c:	07d9      	lsls	r1, r3, #31
  40312e:	d441      	bmi.n	4031b4 <_svfprintf_r+0xdac>
  403130:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403132:	9812      	ldr	r0, [sp, #72]	; 0x48
  403134:	1a9a      	subs	r2, r3, r2
  403136:	1a1d      	subs	r5, r3, r0
  403138:	4295      	cmp	r5, r2
  40313a:	bfa8      	it	ge
  40313c:	4615      	movge	r5, r2
  40313e:	2d00      	cmp	r5, #0
  403140:	dd0e      	ble.n	403160 <_svfprintf_r+0xd58>
  403142:	9926      	ldr	r1, [sp, #152]	; 0x98
  403144:	f8c8 5004 	str.w	r5, [r8, #4]
  403148:	3101      	adds	r1, #1
  40314a:	4406      	add	r6, r0
  40314c:	442c      	add	r4, r5
  40314e:	2907      	cmp	r1, #7
  403150:	f8c8 6000 	str.w	r6, [r8]
  403154:	9427      	str	r4, [sp, #156]	; 0x9c
  403156:	9126      	str	r1, [sp, #152]	; 0x98
  403158:	f300 823b 	bgt.w	4035d2 <_svfprintf_r+0x11ca>
  40315c:	f108 0808 	add.w	r8, r8, #8
  403160:	2d00      	cmp	r5, #0
  403162:	bfac      	ite	ge
  403164:	1b56      	subge	r6, r2, r5
  403166:	4616      	movlt	r6, r2
  403168:	2e00      	cmp	r6, #0
  40316a:	f77f ab2d 	ble.w	4027c8 <_svfprintf_r+0x3c0>
  40316e:	2e10      	cmp	r6, #16
  403170:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403172:	4db0      	ldr	r5, [pc, #704]	; (403434 <_svfprintf_r+0x102c>)
  403174:	ddb5      	ble.n	4030e2 <_svfprintf_r+0xcda>
  403176:	4622      	mov	r2, r4
  403178:	2710      	movs	r7, #16
  40317a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40317e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403180:	e004      	b.n	40318c <_svfprintf_r+0xd84>
  403182:	f108 0808 	add.w	r8, r8, #8
  403186:	3e10      	subs	r6, #16
  403188:	2e10      	cmp	r6, #16
  40318a:	dda9      	ble.n	4030e0 <_svfprintf_r+0xcd8>
  40318c:	3301      	adds	r3, #1
  40318e:	3210      	adds	r2, #16
  403190:	2b07      	cmp	r3, #7
  403192:	9227      	str	r2, [sp, #156]	; 0x9c
  403194:	9326      	str	r3, [sp, #152]	; 0x98
  403196:	e888 00a0 	stmia.w	r8, {r5, r7}
  40319a:	ddf2      	ble.n	403182 <_svfprintf_r+0xd7a>
  40319c:	aa25      	add	r2, sp, #148	; 0x94
  40319e:	4621      	mov	r1, r4
  4031a0:	4658      	mov	r0, fp
  4031a2:	f002 fa9b 	bl	4056dc <__ssprint_r>
  4031a6:	2800      	cmp	r0, #0
  4031a8:	f47f aa00 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4031ac:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4031ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031b0:	46c8      	mov	r8, r9
  4031b2:	e7e8      	b.n	403186 <_svfprintf_r+0xd7e>
  4031b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4031b6:	9819      	ldr	r0, [sp, #100]	; 0x64
  4031b8:	991a      	ldr	r1, [sp, #104]	; 0x68
  4031ba:	f8c8 1000 	str.w	r1, [r8]
  4031be:	3301      	adds	r3, #1
  4031c0:	4404      	add	r4, r0
  4031c2:	2b07      	cmp	r3, #7
  4031c4:	9427      	str	r4, [sp, #156]	; 0x9c
  4031c6:	f8c8 0004 	str.w	r0, [r8, #4]
  4031ca:	9326      	str	r3, [sp, #152]	; 0x98
  4031cc:	f300 81f5 	bgt.w	4035ba <_svfprintf_r+0x11b2>
  4031d0:	f108 0808 	add.w	r8, r8, #8
  4031d4:	e7ac      	b.n	403130 <_svfprintf_r+0xd28>
  4031d6:	9b07      	ldr	r3, [sp, #28]
  4031d8:	07da      	lsls	r2, r3, #31
  4031da:	f53f adfe 	bmi.w	402dda <_svfprintf_r+0x9d2>
  4031de:	3701      	adds	r7, #1
  4031e0:	3401      	adds	r4, #1
  4031e2:	2301      	movs	r3, #1
  4031e4:	2f07      	cmp	r7, #7
  4031e6:	9427      	str	r4, [sp, #156]	; 0x9c
  4031e8:	9726      	str	r7, [sp, #152]	; 0x98
  4031ea:	f8c8 6000 	str.w	r6, [r8]
  4031ee:	f8c8 3004 	str.w	r3, [r8, #4]
  4031f2:	f77f ae25 	ble.w	402e40 <_svfprintf_r+0xa38>
  4031f6:	e74a      	b.n	40308e <_svfprintf_r+0xc86>
  4031f8:	aa25      	add	r2, sp, #148	; 0x94
  4031fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031fc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031fe:	f002 fa6d 	bl	4056dc <__ssprint_r>
  403202:	2800      	cmp	r0, #0
  403204:	f47f a9d2 	bne.w	4025ac <_svfprintf_r+0x1a4>
  403208:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40320a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40320c:	46c8      	mov	r8, r9
  40320e:	e5f2      	b.n	402df6 <_svfprintf_r+0x9ee>
  403210:	aa25      	add	r2, sp, #148	; 0x94
  403212:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403214:	980c      	ldr	r0, [sp, #48]	; 0x30
  403216:	f002 fa61 	bl	4056dc <__ssprint_r>
  40321a:	2800      	cmp	r0, #0
  40321c:	f47f a9c6 	bne.w	4025ac <_svfprintf_r+0x1a4>
  403220:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403222:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403224:	46c8      	mov	r8, r9
  403226:	e5f5      	b.n	402e14 <_svfprintf_r+0xa0c>
  403228:	464e      	mov	r6, r9
  40322a:	f7ff b9fd 	b.w	402628 <_svfprintf_r+0x220>
  40322e:	aa25      	add	r2, sp, #148	; 0x94
  403230:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403232:	980c      	ldr	r0, [sp, #48]	; 0x30
  403234:	f002 fa52 	bl	4056dc <__ssprint_r>
  403238:	2800      	cmp	r0, #0
  40323a:	f47f a9b7 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40323e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403240:	46c8      	mov	r8, r9
  403242:	f7ff ba72 	b.w	40272a <_svfprintf_r+0x322>
  403246:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403248:	4622      	mov	r2, r4
  40324a:	4620      	mov	r0, r4
  40324c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40324e:	4623      	mov	r3, r4
  403250:	4621      	mov	r1, r4
  403252:	f002 ff3f 	bl	4060d4 <__aeabi_dcmpun>
  403256:	2800      	cmp	r0, #0
  403258:	f040 8286 	bne.w	403768 <_svfprintf_r+0x1360>
  40325c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40325e:	3301      	adds	r3, #1
  403260:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403262:	f023 0320 	bic.w	r3, r3, #32
  403266:	930e      	str	r3, [sp, #56]	; 0x38
  403268:	f000 81e2 	beq.w	403630 <_svfprintf_r+0x1228>
  40326c:	2b47      	cmp	r3, #71	; 0x47
  40326e:	f000 811e 	beq.w	4034ae <_svfprintf_r+0x10a6>
  403272:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403276:	9307      	str	r3, [sp, #28]
  403278:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40327a:	1e1f      	subs	r7, r3, #0
  40327c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40327e:	9308      	str	r3, [sp, #32]
  403280:	bfbb      	ittet	lt
  403282:	463b      	movlt	r3, r7
  403284:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403288:	2300      	movge	r3, #0
  40328a:	232d      	movlt	r3, #45	; 0x2d
  40328c:	9310      	str	r3, [sp, #64]	; 0x40
  40328e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403290:	2b66      	cmp	r3, #102	; 0x66
  403292:	f000 81bb 	beq.w	40360c <_svfprintf_r+0x1204>
  403296:	2b46      	cmp	r3, #70	; 0x46
  403298:	f000 80df 	beq.w	40345a <_svfprintf_r+0x1052>
  40329c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40329e:	9a08      	ldr	r2, [sp, #32]
  4032a0:	2b45      	cmp	r3, #69	; 0x45
  4032a2:	bf0c      	ite	eq
  4032a4:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  4032a6:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  4032a8:	a823      	add	r0, sp, #140	; 0x8c
  4032aa:	a920      	add	r1, sp, #128	; 0x80
  4032ac:	bf08      	it	eq
  4032ae:	1c5d      	addeq	r5, r3, #1
  4032b0:	9004      	str	r0, [sp, #16]
  4032b2:	9103      	str	r1, [sp, #12]
  4032b4:	a81f      	add	r0, sp, #124	; 0x7c
  4032b6:	2102      	movs	r1, #2
  4032b8:	463b      	mov	r3, r7
  4032ba:	9002      	str	r0, [sp, #8]
  4032bc:	9501      	str	r5, [sp, #4]
  4032be:	9100      	str	r1, [sp, #0]
  4032c0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032c2:	f000 fb75 	bl	4039b0 <_dtoa_r>
  4032c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032c8:	2b67      	cmp	r3, #103	; 0x67
  4032ca:	4606      	mov	r6, r0
  4032cc:	f040 81e0 	bne.w	403690 <_svfprintf_r+0x1288>
  4032d0:	f01b 0f01 	tst.w	fp, #1
  4032d4:	f000 8246 	beq.w	403764 <_svfprintf_r+0x135c>
  4032d8:	1974      	adds	r4, r6, r5
  4032da:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4032dc:	9808      	ldr	r0, [sp, #32]
  4032de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4032e0:	4639      	mov	r1, r7
  4032e2:	f002 fec5 	bl	406070 <__aeabi_dcmpeq>
  4032e6:	2800      	cmp	r0, #0
  4032e8:	f040 8165 	bne.w	4035b6 <_svfprintf_r+0x11ae>
  4032ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032ee:	42a3      	cmp	r3, r4
  4032f0:	d206      	bcs.n	403300 <_svfprintf_r+0xef8>
  4032f2:	2130      	movs	r1, #48	; 0x30
  4032f4:	1c5a      	adds	r2, r3, #1
  4032f6:	9223      	str	r2, [sp, #140]	; 0x8c
  4032f8:	7019      	strb	r1, [r3, #0]
  4032fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032fc:	429c      	cmp	r4, r3
  4032fe:	d8f9      	bhi.n	4032f4 <_svfprintf_r+0xeec>
  403300:	1b9b      	subs	r3, r3, r6
  403302:	9313      	str	r3, [sp, #76]	; 0x4c
  403304:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403306:	2b47      	cmp	r3, #71	; 0x47
  403308:	f000 80e9 	beq.w	4034de <_svfprintf_r+0x10d6>
  40330c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40330e:	2b65      	cmp	r3, #101	; 0x65
  403310:	f340 81cd 	ble.w	4036ae <_svfprintf_r+0x12a6>
  403314:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403316:	2b66      	cmp	r3, #102	; 0x66
  403318:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40331a:	9312      	str	r3, [sp, #72]	; 0x48
  40331c:	f000 819e 	beq.w	40365c <_svfprintf_r+0x1254>
  403320:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403322:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403324:	4619      	mov	r1, r3
  403326:	4291      	cmp	r1, r2
  403328:	f300 818a 	bgt.w	403640 <_svfprintf_r+0x1238>
  40332c:	f01b 0f01 	tst.w	fp, #1
  403330:	f040 8213 	bne.w	40375a <_svfprintf_r+0x1352>
  403334:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403338:	9308      	str	r3, [sp, #32]
  40333a:	2367      	movs	r3, #103	; 0x67
  40333c:	920e      	str	r2, [sp, #56]	; 0x38
  40333e:	9311      	str	r3, [sp, #68]	; 0x44
  403340:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403342:	2b00      	cmp	r3, #0
  403344:	f040 80c4 	bne.w	4034d0 <_svfprintf_r+0x10c8>
  403348:	930a      	str	r3, [sp, #40]	; 0x28
  40334a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40334e:	f7ff b973 	b.w	402638 <_svfprintf_r+0x230>
  403352:	4635      	mov	r5, r6
  403354:	460c      	mov	r4, r1
  403356:	4646      	mov	r6, r8
  403358:	4690      	mov	r8, r2
  40335a:	3301      	adds	r3, #1
  40335c:	443c      	add	r4, r7
  40335e:	2b07      	cmp	r3, #7
  403360:	9427      	str	r4, [sp, #156]	; 0x9c
  403362:	9326      	str	r3, [sp, #152]	; 0x98
  403364:	e888 00a0 	stmia.w	r8, {r5, r7}
  403368:	f73f aed1 	bgt.w	40310e <_svfprintf_r+0xd06>
  40336c:	f108 0808 	add.w	r8, r8, #8
  403370:	e6d7      	b.n	403122 <_svfprintf_r+0xd1a>
  403372:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403374:	6813      	ldr	r3, [r2, #0]
  403376:	3204      	adds	r2, #4
  403378:	920f      	str	r2, [sp, #60]	; 0x3c
  40337a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40337c:	601a      	str	r2, [r3, #0]
  40337e:	f7ff b86a 	b.w	402456 <_svfprintf_r+0x4e>
  403382:	aa25      	add	r2, sp, #148	; 0x94
  403384:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403386:	980c      	ldr	r0, [sp, #48]	; 0x30
  403388:	f002 f9a8 	bl	4056dc <__ssprint_r>
  40338c:	2800      	cmp	r0, #0
  40338e:	f47f a90d 	bne.w	4025ac <_svfprintf_r+0x1a4>
  403392:	46c8      	mov	r8, r9
  403394:	e48d      	b.n	402cb2 <_svfprintf_r+0x8aa>
  403396:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403398:	4a27      	ldr	r2, [pc, #156]	; (403438 <_svfprintf_r+0x1030>)
  40339a:	f8c8 2000 	str.w	r2, [r8]
  40339e:	3301      	adds	r3, #1
  4033a0:	3401      	adds	r4, #1
  4033a2:	2201      	movs	r2, #1
  4033a4:	2b07      	cmp	r3, #7
  4033a6:	9427      	str	r4, [sp, #156]	; 0x9c
  4033a8:	9326      	str	r3, [sp, #152]	; 0x98
  4033aa:	f8c8 2004 	str.w	r2, [r8, #4]
  4033ae:	dc72      	bgt.n	403496 <_svfprintf_r+0x108e>
  4033b0:	f108 0808 	add.w	r8, r8, #8
  4033b4:	b929      	cbnz	r1, 4033c2 <_svfprintf_r+0xfba>
  4033b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4033b8:	b91b      	cbnz	r3, 4033c2 <_svfprintf_r+0xfba>
  4033ba:	9b07      	ldr	r3, [sp, #28]
  4033bc:	07d8      	lsls	r0, r3, #31
  4033be:	f57f aa03 	bpl.w	4027c8 <_svfprintf_r+0x3c0>
  4033c2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033c4:	9819      	ldr	r0, [sp, #100]	; 0x64
  4033c6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4033c8:	f8c8 2000 	str.w	r2, [r8]
  4033cc:	3301      	adds	r3, #1
  4033ce:	4602      	mov	r2, r0
  4033d0:	4422      	add	r2, r4
  4033d2:	2b07      	cmp	r3, #7
  4033d4:	9227      	str	r2, [sp, #156]	; 0x9c
  4033d6:	f8c8 0004 	str.w	r0, [r8, #4]
  4033da:	9326      	str	r3, [sp, #152]	; 0x98
  4033dc:	f300 818d 	bgt.w	4036fa <_svfprintf_r+0x12f2>
  4033e0:	f108 0808 	add.w	r8, r8, #8
  4033e4:	2900      	cmp	r1, #0
  4033e6:	f2c0 8165 	blt.w	4036b4 <_svfprintf_r+0x12ac>
  4033ea:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4033ec:	f8c8 6000 	str.w	r6, [r8]
  4033f0:	3301      	adds	r3, #1
  4033f2:	188c      	adds	r4, r1, r2
  4033f4:	2b07      	cmp	r3, #7
  4033f6:	9427      	str	r4, [sp, #156]	; 0x9c
  4033f8:	9326      	str	r3, [sp, #152]	; 0x98
  4033fa:	f8c8 1004 	str.w	r1, [r8, #4]
  4033fe:	f77f a9e1 	ble.w	4027c4 <_svfprintf_r+0x3bc>
  403402:	e52c      	b.n	402e5e <_svfprintf_r+0xa56>
  403404:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403406:	9909      	ldr	r1, [sp, #36]	; 0x24
  403408:	6813      	ldr	r3, [r2, #0]
  40340a:	17cd      	asrs	r5, r1, #31
  40340c:	4608      	mov	r0, r1
  40340e:	3204      	adds	r2, #4
  403410:	4629      	mov	r1, r5
  403412:	920f      	str	r2, [sp, #60]	; 0x3c
  403414:	e9c3 0100 	strd	r0, r1, [r3]
  403418:	f7ff b81d 	b.w	402456 <_svfprintf_r+0x4e>
  40341c:	aa25      	add	r2, sp, #148	; 0x94
  40341e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403420:	980c      	ldr	r0, [sp, #48]	; 0x30
  403422:	f002 f95b 	bl	4056dc <__ssprint_r>
  403426:	2800      	cmp	r0, #0
  403428:	f47f a8c0 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40342c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40342e:	46c8      	mov	r8, r9
  403430:	e458      	b.n	402ce4 <_svfprintf_r+0x8dc>
  403432:	bf00      	nop
  403434:	00406ed0 	.word	0x00406ed0
  403438:	00406ebc 	.word	0x00406ebc
  40343c:	2140      	movs	r1, #64	; 0x40
  40343e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403440:	f001 fa0c 	bl	40485c <_malloc_r>
  403444:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403446:	6010      	str	r0, [r2, #0]
  403448:	6110      	str	r0, [r2, #16]
  40344a:	2800      	cmp	r0, #0
  40344c:	f000 81f2 	beq.w	403834 <_svfprintf_r+0x142c>
  403450:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403452:	2340      	movs	r3, #64	; 0x40
  403454:	6153      	str	r3, [r2, #20]
  403456:	f7fe bfee 	b.w	402436 <_svfprintf_r+0x2e>
  40345a:	a823      	add	r0, sp, #140	; 0x8c
  40345c:	a920      	add	r1, sp, #128	; 0x80
  40345e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403460:	9004      	str	r0, [sp, #16]
  403462:	9103      	str	r1, [sp, #12]
  403464:	a81f      	add	r0, sp, #124	; 0x7c
  403466:	2103      	movs	r1, #3
  403468:	9002      	str	r0, [sp, #8]
  40346a:	9a08      	ldr	r2, [sp, #32]
  40346c:	9401      	str	r4, [sp, #4]
  40346e:	463b      	mov	r3, r7
  403470:	9100      	str	r1, [sp, #0]
  403472:	980c      	ldr	r0, [sp, #48]	; 0x30
  403474:	f000 fa9c 	bl	4039b0 <_dtoa_r>
  403478:	4625      	mov	r5, r4
  40347a:	4606      	mov	r6, r0
  40347c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40347e:	2b46      	cmp	r3, #70	; 0x46
  403480:	eb06 0405 	add.w	r4, r6, r5
  403484:	f47f af29 	bne.w	4032da <_svfprintf_r+0xed2>
  403488:	7833      	ldrb	r3, [r6, #0]
  40348a:	2b30      	cmp	r3, #48	; 0x30
  40348c:	f000 8178 	beq.w	403780 <_svfprintf_r+0x1378>
  403490:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403492:	442c      	add	r4, r5
  403494:	e721      	b.n	4032da <_svfprintf_r+0xed2>
  403496:	aa25      	add	r2, sp, #148	; 0x94
  403498:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40349a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40349c:	f002 f91e 	bl	4056dc <__ssprint_r>
  4034a0:	2800      	cmp	r0, #0
  4034a2:	f47f a883 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4034a6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4034a8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034aa:	46c8      	mov	r8, r9
  4034ac:	e782      	b.n	4033b4 <_svfprintf_r+0xfac>
  4034ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034b0:	2b00      	cmp	r3, #0
  4034b2:	bf08      	it	eq
  4034b4:	2301      	moveq	r3, #1
  4034b6:	930a      	str	r3, [sp, #40]	; 0x28
  4034b8:	e6db      	b.n	403272 <_svfprintf_r+0xe6a>
  4034ba:	4630      	mov	r0, r6
  4034bc:	940a      	str	r4, [sp, #40]	; 0x28
  4034be:	f002 f89f 	bl	405600 <strlen>
  4034c2:	950f      	str	r5, [sp, #60]	; 0x3c
  4034c4:	900e      	str	r0, [sp, #56]	; 0x38
  4034c6:	f8cd b01c 	str.w	fp, [sp, #28]
  4034ca:	4603      	mov	r3, r0
  4034cc:	f7ff b9f9 	b.w	4028c2 <_svfprintf_r+0x4ba>
  4034d0:	272d      	movs	r7, #45	; 0x2d
  4034d2:	2300      	movs	r3, #0
  4034d4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034d8:	930a      	str	r3, [sp, #40]	; 0x28
  4034da:	f7ff b8ae 	b.w	40263a <_svfprintf_r+0x232>
  4034de:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4034e0:	9312      	str	r3, [sp, #72]	; 0x48
  4034e2:	461a      	mov	r2, r3
  4034e4:	3303      	adds	r3, #3
  4034e6:	db04      	blt.n	4034f2 <_svfprintf_r+0x10ea>
  4034e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034ea:	4619      	mov	r1, r3
  4034ec:	4291      	cmp	r1, r2
  4034ee:	f6bf af17 	bge.w	403320 <_svfprintf_r+0xf18>
  4034f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034f4:	3b02      	subs	r3, #2
  4034f6:	9311      	str	r3, [sp, #68]	; 0x44
  4034f8:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4034fc:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403500:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403502:	3b01      	subs	r3, #1
  403504:	2b00      	cmp	r3, #0
  403506:	931f      	str	r3, [sp, #124]	; 0x7c
  403508:	bfbd      	ittte	lt
  40350a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  40350c:	f1c3 0301 	rsblt	r3, r3, #1
  403510:	222d      	movlt	r2, #45	; 0x2d
  403512:	222b      	movge	r2, #43	; 0x2b
  403514:	2b09      	cmp	r3, #9
  403516:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40351a:	f340 8116 	ble.w	40374a <_svfprintf_r+0x1342>
  40351e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403522:	4620      	mov	r0, r4
  403524:	4dab      	ldr	r5, [pc, #684]	; (4037d4 <_svfprintf_r+0x13cc>)
  403526:	e000      	b.n	40352a <_svfprintf_r+0x1122>
  403528:	4610      	mov	r0, r2
  40352a:	fb85 1203 	smull	r1, r2, r5, r3
  40352e:	17d9      	asrs	r1, r3, #31
  403530:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403534:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403538:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40353c:	3230      	adds	r2, #48	; 0x30
  40353e:	2909      	cmp	r1, #9
  403540:	f800 2c01 	strb.w	r2, [r0, #-1]
  403544:	460b      	mov	r3, r1
  403546:	f100 32ff 	add.w	r2, r0, #4294967295
  40354a:	dced      	bgt.n	403528 <_svfprintf_r+0x1120>
  40354c:	3330      	adds	r3, #48	; 0x30
  40354e:	3802      	subs	r0, #2
  403550:	b2d9      	uxtb	r1, r3
  403552:	4284      	cmp	r4, r0
  403554:	f802 1c01 	strb.w	r1, [r2, #-1]
  403558:	f240 8165 	bls.w	403826 <_svfprintf_r+0x141e>
  40355c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403560:	4613      	mov	r3, r2
  403562:	e001      	b.n	403568 <_svfprintf_r+0x1160>
  403564:	f813 1b01 	ldrb.w	r1, [r3], #1
  403568:	f800 1b01 	strb.w	r1, [r0], #1
  40356c:	42a3      	cmp	r3, r4
  40356e:	d1f9      	bne.n	403564 <_svfprintf_r+0x115c>
  403570:	3301      	adds	r3, #1
  403572:	1a9b      	subs	r3, r3, r2
  403574:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403578:	4413      	add	r3, r2
  40357a:	aa21      	add	r2, sp, #132	; 0x84
  40357c:	1a9b      	subs	r3, r3, r2
  40357e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403580:	931b      	str	r3, [sp, #108]	; 0x6c
  403582:	2a01      	cmp	r2, #1
  403584:	4413      	add	r3, r2
  403586:	930e      	str	r3, [sp, #56]	; 0x38
  403588:	f340 8119 	ble.w	4037be <_svfprintf_r+0x13b6>
  40358c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40358e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403590:	4413      	add	r3, r2
  403592:	930e      	str	r3, [sp, #56]	; 0x38
  403594:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403598:	9308      	str	r3, [sp, #32]
  40359a:	2300      	movs	r3, #0
  40359c:	9312      	str	r3, [sp, #72]	; 0x48
  40359e:	e6cf      	b.n	403340 <_svfprintf_r+0xf38>
  4035a0:	aa25      	add	r2, sp, #148	; 0x94
  4035a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035a4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035a6:	f002 f899 	bl	4056dc <__ssprint_r>
  4035aa:	2800      	cmp	r0, #0
  4035ac:	f47e affe 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4035b0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035b2:	46c8      	mov	r8, r9
  4035b4:	e4d7      	b.n	402f66 <_svfprintf_r+0xb5e>
  4035b6:	4623      	mov	r3, r4
  4035b8:	e6a2      	b.n	403300 <_svfprintf_r+0xef8>
  4035ba:	aa25      	add	r2, sp, #148	; 0x94
  4035bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035be:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035c0:	f002 f88c 	bl	4056dc <__ssprint_r>
  4035c4:	2800      	cmp	r0, #0
  4035c6:	f47e aff1 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4035ca:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035cc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035ce:	46c8      	mov	r8, r9
  4035d0:	e5ae      	b.n	403130 <_svfprintf_r+0xd28>
  4035d2:	aa25      	add	r2, sp, #148	; 0x94
  4035d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035d6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035d8:	f002 f880 	bl	4056dc <__ssprint_r>
  4035dc:	2800      	cmp	r0, #0
  4035de:	f47e afe5 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4035e2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035e4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035e8:	1a9a      	subs	r2, r3, r2
  4035ea:	46c8      	mov	r8, r9
  4035ec:	e5b8      	b.n	403160 <_svfprintf_r+0xd58>
  4035ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035f0:	9612      	str	r6, [sp, #72]	; 0x48
  4035f2:	2b06      	cmp	r3, #6
  4035f4:	bf28      	it	cs
  4035f6:	2306      	movcs	r3, #6
  4035f8:	960a      	str	r6, [sp, #40]	; 0x28
  4035fa:	4637      	mov	r7, r6
  4035fc:	9308      	str	r3, [sp, #32]
  4035fe:	950f      	str	r5, [sp, #60]	; 0x3c
  403600:	f8cd b01c 	str.w	fp, [sp, #28]
  403604:	930e      	str	r3, [sp, #56]	; 0x38
  403606:	4e74      	ldr	r6, [pc, #464]	; (4037d8 <_svfprintf_r+0x13d0>)
  403608:	f7ff b816 	b.w	402638 <_svfprintf_r+0x230>
  40360c:	a823      	add	r0, sp, #140	; 0x8c
  40360e:	a920      	add	r1, sp, #128	; 0x80
  403610:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403612:	9004      	str	r0, [sp, #16]
  403614:	9103      	str	r1, [sp, #12]
  403616:	a81f      	add	r0, sp, #124	; 0x7c
  403618:	2103      	movs	r1, #3
  40361a:	9002      	str	r0, [sp, #8]
  40361c:	9a08      	ldr	r2, [sp, #32]
  40361e:	9501      	str	r5, [sp, #4]
  403620:	463b      	mov	r3, r7
  403622:	9100      	str	r1, [sp, #0]
  403624:	980c      	ldr	r0, [sp, #48]	; 0x30
  403626:	f000 f9c3 	bl	4039b0 <_dtoa_r>
  40362a:	4606      	mov	r6, r0
  40362c:	1944      	adds	r4, r0, r5
  40362e:	e72b      	b.n	403488 <_svfprintf_r+0x1080>
  403630:	2306      	movs	r3, #6
  403632:	930a      	str	r3, [sp, #40]	; 0x28
  403634:	e61d      	b.n	403272 <_svfprintf_r+0xe6a>
  403636:	272d      	movs	r7, #45	; 0x2d
  403638:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40363c:	f7ff bacd 	b.w	402bda <_svfprintf_r+0x7d2>
  403640:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403642:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403644:	4413      	add	r3, r2
  403646:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403648:	930e      	str	r3, [sp, #56]	; 0x38
  40364a:	2a00      	cmp	r2, #0
  40364c:	f340 80b0 	ble.w	4037b0 <_svfprintf_r+0x13a8>
  403650:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403654:	9308      	str	r3, [sp, #32]
  403656:	2367      	movs	r3, #103	; 0x67
  403658:	9311      	str	r3, [sp, #68]	; 0x44
  40365a:	e671      	b.n	403340 <_svfprintf_r+0xf38>
  40365c:	2b00      	cmp	r3, #0
  40365e:	f340 80c3 	ble.w	4037e8 <_svfprintf_r+0x13e0>
  403662:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403664:	2a00      	cmp	r2, #0
  403666:	f040 8099 	bne.w	40379c <_svfprintf_r+0x1394>
  40366a:	f01b 0f01 	tst.w	fp, #1
  40366e:	f040 8095 	bne.w	40379c <_svfprintf_r+0x1394>
  403672:	9308      	str	r3, [sp, #32]
  403674:	930e      	str	r3, [sp, #56]	; 0x38
  403676:	e663      	b.n	403340 <_svfprintf_r+0xf38>
  403678:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40367a:	9308      	str	r3, [sp, #32]
  40367c:	930e      	str	r3, [sp, #56]	; 0x38
  40367e:	900a      	str	r0, [sp, #40]	; 0x28
  403680:	950f      	str	r5, [sp, #60]	; 0x3c
  403682:	f8cd b01c 	str.w	fp, [sp, #28]
  403686:	9012      	str	r0, [sp, #72]	; 0x48
  403688:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40368c:	f7fe bfd4 	b.w	402638 <_svfprintf_r+0x230>
  403690:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403692:	2b47      	cmp	r3, #71	; 0x47
  403694:	f47f ae20 	bne.w	4032d8 <_svfprintf_r+0xed0>
  403698:	f01b 0f01 	tst.w	fp, #1
  40369c:	f47f aeee 	bne.w	40347c <_svfprintf_r+0x1074>
  4036a0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4036a2:	1b9b      	subs	r3, r3, r6
  4036a4:	9313      	str	r3, [sp, #76]	; 0x4c
  4036a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4036a8:	2b47      	cmp	r3, #71	; 0x47
  4036aa:	f43f af18 	beq.w	4034de <_svfprintf_r+0x10d6>
  4036ae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4036b0:	9312      	str	r3, [sp, #72]	; 0x48
  4036b2:	e721      	b.n	4034f8 <_svfprintf_r+0x10f0>
  4036b4:	424f      	negs	r7, r1
  4036b6:	3110      	adds	r1, #16
  4036b8:	4d48      	ldr	r5, [pc, #288]	; (4037dc <_svfprintf_r+0x13d4>)
  4036ba:	da2f      	bge.n	40371c <_svfprintf_r+0x1314>
  4036bc:	2410      	movs	r4, #16
  4036be:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4036c2:	e004      	b.n	4036ce <_svfprintf_r+0x12c6>
  4036c4:	f108 0808 	add.w	r8, r8, #8
  4036c8:	3f10      	subs	r7, #16
  4036ca:	2f10      	cmp	r7, #16
  4036cc:	dd26      	ble.n	40371c <_svfprintf_r+0x1314>
  4036ce:	3301      	adds	r3, #1
  4036d0:	3210      	adds	r2, #16
  4036d2:	2b07      	cmp	r3, #7
  4036d4:	9227      	str	r2, [sp, #156]	; 0x9c
  4036d6:	9326      	str	r3, [sp, #152]	; 0x98
  4036d8:	f8c8 5000 	str.w	r5, [r8]
  4036dc:	f8c8 4004 	str.w	r4, [r8, #4]
  4036e0:	ddf0      	ble.n	4036c4 <_svfprintf_r+0x12bc>
  4036e2:	aa25      	add	r2, sp, #148	; 0x94
  4036e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036e6:	4658      	mov	r0, fp
  4036e8:	f001 fff8 	bl	4056dc <__ssprint_r>
  4036ec:	2800      	cmp	r0, #0
  4036ee:	f47e af5d 	bne.w	4025ac <_svfprintf_r+0x1a4>
  4036f2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036f6:	46c8      	mov	r8, r9
  4036f8:	e7e6      	b.n	4036c8 <_svfprintf_r+0x12c0>
  4036fa:	aa25      	add	r2, sp, #148	; 0x94
  4036fc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036fe:	980c      	ldr	r0, [sp, #48]	; 0x30
  403700:	f001 ffec 	bl	4056dc <__ssprint_r>
  403704:	2800      	cmp	r0, #0
  403706:	f47e af51 	bne.w	4025ac <_svfprintf_r+0x1a4>
  40370a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40370c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40370e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403710:	46c8      	mov	r8, r9
  403712:	e667      	b.n	4033e4 <_svfprintf_r+0xfdc>
  403714:	2000      	movs	r0, #0
  403716:	900a      	str	r0, [sp, #40]	; 0x28
  403718:	f7fe bed0 	b.w	4024bc <_svfprintf_r+0xb4>
  40371c:	3301      	adds	r3, #1
  40371e:	443a      	add	r2, r7
  403720:	2b07      	cmp	r3, #7
  403722:	e888 00a0 	stmia.w	r8, {r5, r7}
  403726:	9227      	str	r2, [sp, #156]	; 0x9c
  403728:	9326      	str	r3, [sp, #152]	; 0x98
  40372a:	f108 0808 	add.w	r8, r8, #8
  40372e:	f77f ae5c 	ble.w	4033ea <_svfprintf_r+0xfe2>
  403732:	aa25      	add	r2, sp, #148	; 0x94
  403734:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403736:	980c      	ldr	r0, [sp, #48]	; 0x30
  403738:	f001 ffd0 	bl	4056dc <__ssprint_r>
  40373c:	2800      	cmp	r0, #0
  40373e:	f47e af35 	bne.w	4025ac <_svfprintf_r+0x1a4>
  403742:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403744:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403746:	46c8      	mov	r8, r9
  403748:	e64f      	b.n	4033ea <_svfprintf_r+0xfe2>
  40374a:	3330      	adds	r3, #48	; 0x30
  40374c:	2230      	movs	r2, #48	; 0x30
  40374e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403752:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403756:	ab22      	add	r3, sp, #136	; 0x88
  403758:	e70f      	b.n	40357a <_svfprintf_r+0x1172>
  40375a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40375c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40375e:	4413      	add	r3, r2
  403760:	930e      	str	r3, [sp, #56]	; 0x38
  403762:	e775      	b.n	403650 <_svfprintf_r+0x1248>
  403764:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403766:	e5cb      	b.n	403300 <_svfprintf_r+0xef8>
  403768:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40376a:	4e1d      	ldr	r6, [pc, #116]	; (4037e0 <_svfprintf_r+0x13d8>)
  40376c:	2b00      	cmp	r3, #0
  40376e:	bfb6      	itet	lt
  403770:	272d      	movlt	r7, #45	; 0x2d
  403772:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403776:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40377a:	4b1a      	ldr	r3, [pc, #104]	; (4037e4 <_svfprintf_r+0x13dc>)
  40377c:	f7ff ba2f 	b.w	402bde <_svfprintf_r+0x7d6>
  403780:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403782:	9808      	ldr	r0, [sp, #32]
  403784:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403786:	4639      	mov	r1, r7
  403788:	f002 fc72 	bl	406070 <__aeabi_dcmpeq>
  40378c:	2800      	cmp	r0, #0
  40378e:	f47f ae7f 	bne.w	403490 <_svfprintf_r+0x1088>
  403792:	f1c5 0501 	rsb	r5, r5, #1
  403796:	951f      	str	r5, [sp, #124]	; 0x7c
  403798:	442c      	add	r4, r5
  40379a:	e59e      	b.n	4032da <_svfprintf_r+0xed2>
  40379c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40379e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4037a0:	4413      	add	r3, r2
  4037a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4037a4:	441a      	add	r2, r3
  4037a6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4037aa:	920e      	str	r2, [sp, #56]	; 0x38
  4037ac:	9308      	str	r3, [sp, #32]
  4037ae:	e5c7      	b.n	403340 <_svfprintf_r+0xf38>
  4037b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4037b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4037b4:	f1c3 0301 	rsb	r3, r3, #1
  4037b8:	441a      	add	r2, r3
  4037ba:	4613      	mov	r3, r2
  4037bc:	e7d0      	b.n	403760 <_svfprintf_r+0x1358>
  4037be:	f01b 0301 	ands.w	r3, fp, #1
  4037c2:	9312      	str	r3, [sp, #72]	; 0x48
  4037c4:	f47f aee2 	bne.w	40358c <_svfprintf_r+0x1184>
  4037c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4037ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4037ce:	9308      	str	r3, [sp, #32]
  4037d0:	e5b6      	b.n	403340 <_svfprintf_r+0xf38>
  4037d2:	bf00      	nop
  4037d4:	66666667 	.word	0x66666667
  4037d8:	00406eb4 	.word	0x00406eb4
  4037dc:	00406ed0 	.word	0x00406ed0
  4037e0:	00406e88 	.word	0x00406e88
  4037e4:	00406e84 	.word	0x00406e84
  4037e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037ea:	b913      	cbnz	r3, 4037f2 <_svfprintf_r+0x13ea>
  4037ec:	f01b 0f01 	tst.w	fp, #1
  4037f0:	d002      	beq.n	4037f8 <_svfprintf_r+0x13f0>
  4037f2:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4037f4:	3301      	adds	r3, #1
  4037f6:	e7d4      	b.n	4037a2 <_svfprintf_r+0x139a>
  4037f8:	2301      	movs	r3, #1
  4037fa:	e73a      	b.n	403672 <_svfprintf_r+0x126a>
  4037fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4037fe:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403802:	6828      	ldr	r0, [r5, #0]
  403804:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403808:	900a      	str	r0, [sp, #40]	; 0x28
  40380a:	4628      	mov	r0, r5
  40380c:	3004      	adds	r0, #4
  40380e:	46a2      	mov	sl, r4
  403810:	900f      	str	r0, [sp, #60]	; 0x3c
  403812:	f7fe be51 	b.w	4024b8 <_svfprintf_r+0xb0>
  403816:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40381a:	f7ff b867 	b.w	4028ec <_svfprintf_r+0x4e4>
  40381e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403822:	f7ff ba15 	b.w	402c50 <_svfprintf_r+0x848>
  403826:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40382a:	e6a6      	b.n	40357a <_svfprintf_r+0x1172>
  40382c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403830:	f7ff b8eb 	b.w	402a0a <_svfprintf_r+0x602>
  403834:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403836:	230c      	movs	r3, #12
  403838:	6013      	str	r3, [r2, #0]
  40383a:	f04f 33ff 	mov.w	r3, #4294967295
  40383e:	9309      	str	r3, [sp, #36]	; 0x24
  403840:	f7fe bebd 	b.w	4025be <_svfprintf_r+0x1b6>
  403844:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403848:	f7ff b99a 	b.w	402b80 <_svfprintf_r+0x778>
  40384c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403850:	f7ff b976 	b.w	402b40 <_svfprintf_r+0x738>
  403854:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403858:	f7ff b959 	b.w	402b0e <_svfprintf_r+0x706>
  40385c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403860:	f7ff b912 	b.w	402a88 <_svfprintf_r+0x680>

00403864 <register_fini>:
  403864:	4b02      	ldr	r3, [pc, #8]	; (403870 <register_fini+0xc>)
  403866:	b113      	cbz	r3, 40386e <register_fini+0xa>
  403868:	4802      	ldr	r0, [pc, #8]	; (403874 <register_fini+0x10>)
  40386a:	f000 b805 	b.w	403878 <atexit>
  40386e:	4770      	bx	lr
  403870:	00000000 	.word	0x00000000
  403874:	00404805 	.word	0x00404805

00403878 <atexit>:
  403878:	2300      	movs	r3, #0
  40387a:	4601      	mov	r1, r0
  40387c:	461a      	mov	r2, r3
  40387e:	4618      	mov	r0, r3
  403880:	f001 bfaa 	b.w	4057d8 <__register_exitproc>

00403884 <quorem>:
  403884:	6902      	ldr	r2, [r0, #16]
  403886:	690b      	ldr	r3, [r1, #16]
  403888:	4293      	cmp	r3, r2
  40388a:	f300 808d 	bgt.w	4039a8 <quorem+0x124>
  40388e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403892:	f103 38ff 	add.w	r8, r3, #4294967295
  403896:	f101 0714 	add.w	r7, r1, #20
  40389a:	f100 0b14 	add.w	fp, r0, #20
  40389e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4038a2:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4038a6:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4038aa:	b083      	sub	sp, #12
  4038ac:	3201      	adds	r2, #1
  4038ae:	fbb3 f9f2 	udiv	r9, r3, r2
  4038b2:	eb0b 0304 	add.w	r3, fp, r4
  4038b6:	9400      	str	r4, [sp, #0]
  4038b8:	eb07 0a04 	add.w	sl, r7, r4
  4038bc:	9301      	str	r3, [sp, #4]
  4038be:	f1b9 0f00 	cmp.w	r9, #0
  4038c2:	d039      	beq.n	403938 <quorem+0xb4>
  4038c4:	2500      	movs	r5, #0
  4038c6:	462e      	mov	r6, r5
  4038c8:	46bc      	mov	ip, r7
  4038ca:	46de      	mov	lr, fp
  4038cc:	f85c 4b04 	ldr.w	r4, [ip], #4
  4038d0:	f8de 3000 	ldr.w	r3, [lr]
  4038d4:	b2a2      	uxth	r2, r4
  4038d6:	fb09 5502 	mla	r5, r9, r2, r5
  4038da:	0c22      	lsrs	r2, r4, #16
  4038dc:	0c2c      	lsrs	r4, r5, #16
  4038de:	fb09 4202 	mla	r2, r9, r2, r4
  4038e2:	b2ad      	uxth	r5, r5
  4038e4:	1b75      	subs	r5, r6, r5
  4038e6:	b296      	uxth	r6, r2
  4038e8:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4038ec:	fa15 f383 	uxtah	r3, r5, r3
  4038f0:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4038f4:	b29b      	uxth	r3, r3
  4038f6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4038fa:	45e2      	cmp	sl, ip
  4038fc:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403900:	f84e 3b04 	str.w	r3, [lr], #4
  403904:	ea4f 4626 	mov.w	r6, r6, asr #16
  403908:	d2e0      	bcs.n	4038cc <quorem+0x48>
  40390a:	9b00      	ldr	r3, [sp, #0]
  40390c:	f85b 3003 	ldr.w	r3, [fp, r3]
  403910:	b993      	cbnz	r3, 403938 <quorem+0xb4>
  403912:	9c01      	ldr	r4, [sp, #4]
  403914:	1f23      	subs	r3, r4, #4
  403916:	459b      	cmp	fp, r3
  403918:	d20c      	bcs.n	403934 <quorem+0xb0>
  40391a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40391e:	b94b      	cbnz	r3, 403934 <quorem+0xb0>
  403920:	f1a4 0308 	sub.w	r3, r4, #8
  403924:	e002      	b.n	40392c <quorem+0xa8>
  403926:	681a      	ldr	r2, [r3, #0]
  403928:	3b04      	subs	r3, #4
  40392a:	b91a      	cbnz	r2, 403934 <quorem+0xb0>
  40392c:	459b      	cmp	fp, r3
  40392e:	f108 38ff 	add.w	r8, r8, #4294967295
  403932:	d3f8      	bcc.n	403926 <quorem+0xa2>
  403934:	f8c0 8010 	str.w	r8, [r0, #16]
  403938:	4604      	mov	r4, r0
  40393a:	f001 fd35 	bl	4053a8 <__mcmp>
  40393e:	2800      	cmp	r0, #0
  403940:	db2e      	blt.n	4039a0 <quorem+0x11c>
  403942:	f109 0901 	add.w	r9, r9, #1
  403946:	465d      	mov	r5, fp
  403948:	2300      	movs	r3, #0
  40394a:	f857 1b04 	ldr.w	r1, [r7], #4
  40394e:	6828      	ldr	r0, [r5, #0]
  403950:	b28a      	uxth	r2, r1
  403952:	1a9a      	subs	r2, r3, r2
  403954:	0c0b      	lsrs	r3, r1, #16
  403956:	fa12 f280 	uxtah	r2, r2, r0
  40395a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40395e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403962:	b292      	uxth	r2, r2
  403964:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403968:	45ba      	cmp	sl, r7
  40396a:	f845 2b04 	str.w	r2, [r5], #4
  40396e:	ea4f 4323 	mov.w	r3, r3, asr #16
  403972:	d2ea      	bcs.n	40394a <quorem+0xc6>
  403974:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403978:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40397c:	b982      	cbnz	r2, 4039a0 <quorem+0x11c>
  40397e:	1f1a      	subs	r2, r3, #4
  403980:	4593      	cmp	fp, r2
  403982:	d20b      	bcs.n	40399c <quorem+0x118>
  403984:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403988:	b942      	cbnz	r2, 40399c <quorem+0x118>
  40398a:	3b08      	subs	r3, #8
  40398c:	e002      	b.n	403994 <quorem+0x110>
  40398e:	681a      	ldr	r2, [r3, #0]
  403990:	3b04      	subs	r3, #4
  403992:	b91a      	cbnz	r2, 40399c <quorem+0x118>
  403994:	459b      	cmp	fp, r3
  403996:	f108 38ff 	add.w	r8, r8, #4294967295
  40399a:	d3f8      	bcc.n	40398e <quorem+0x10a>
  40399c:	f8c4 8010 	str.w	r8, [r4, #16]
  4039a0:	4648      	mov	r0, r9
  4039a2:	b003      	add	sp, #12
  4039a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039a8:	2000      	movs	r0, #0
  4039aa:	4770      	bx	lr
  4039ac:	0000      	movs	r0, r0
	...

004039b0 <_dtoa_r>:
  4039b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4039b4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4039b6:	b09b      	sub	sp, #108	; 0x6c
  4039b8:	4604      	mov	r4, r0
  4039ba:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4039bc:	4692      	mov	sl, r2
  4039be:	469b      	mov	fp, r3
  4039c0:	b141      	cbz	r1, 4039d4 <_dtoa_r+0x24>
  4039c2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4039c4:	604a      	str	r2, [r1, #4]
  4039c6:	2301      	movs	r3, #1
  4039c8:	4093      	lsls	r3, r2
  4039ca:	608b      	str	r3, [r1, #8]
  4039cc:	f001 fb14 	bl	404ff8 <_Bfree>
  4039d0:	2300      	movs	r3, #0
  4039d2:	6423      	str	r3, [r4, #64]	; 0x40
  4039d4:	f1bb 0f00 	cmp.w	fp, #0
  4039d8:	465d      	mov	r5, fp
  4039da:	db35      	blt.n	403a48 <_dtoa_r+0x98>
  4039dc:	2300      	movs	r3, #0
  4039de:	6033      	str	r3, [r6, #0]
  4039e0:	4b9d      	ldr	r3, [pc, #628]	; (403c58 <_dtoa_r+0x2a8>)
  4039e2:	43ab      	bics	r3, r5
  4039e4:	d015      	beq.n	403a12 <_dtoa_r+0x62>
  4039e6:	4650      	mov	r0, sl
  4039e8:	4659      	mov	r1, fp
  4039ea:	2200      	movs	r2, #0
  4039ec:	2300      	movs	r3, #0
  4039ee:	f002 fb3f 	bl	406070 <__aeabi_dcmpeq>
  4039f2:	4680      	mov	r8, r0
  4039f4:	2800      	cmp	r0, #0
  4039f6:	d02d      	beq.n	403a54 <_dtoa_r+0xa4>
  4039f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039fa:	2301      	movs	r3, #1
  4039fc:	6013      	str	r3, [r2, #0]
  4039fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a00:	2b00      	cmp	r3, #0
  403a02:	f000 80bd 	beq.w	403b80 <_dtoa_r+0x1d0>
  403a06:	4895      	ldr	r0, [pc, #596]	; (403c5c <_dtoa_r+0x2ac>)
  403a08:	6018      	str	r0, [r3, #0]
  403a0a:	3801      	subs	r0, #1
  403a0c:	b01b      	add	sp, #108	; 0x6c
  403a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a12:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403a14:	f242 730f 	movw	r3, #9999	; 0x270f
  403a18:	6013      	str	r3, [r2, #0]
  403a1a:	f1ba 0f00 	cmp.w	sl, #0
  403a1e:	d10d      	bne.n	403a3c <_dtoa_r+0x8c>
  403a20:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403a24:	b955      	cbnz	r5, 403a3c <_dtoa_r+0x8c>
  403a26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a28:	488d      	ldr	r0, [pc, #564]	; (403c60 <_dtoa_r+0x2b0>)
  403a2a:	2b00      	cmp	r3, #0
  403a2c:	d0ee      	beq.n	403a0c <_dtoa_r+0x5c>
  403a2e:	f100 0308 	add.w	r3, r0, #8
  403a32:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403a34:	6013      	str	r3, [r2, #0]
  403a36:	b01b      	add	sp, #108	; 0x6c
  403a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a3e:	4889      	ldr	r0, [pc, #548]	; (403c64 <_dtoa_r+0x2b4>)
  403a40:	2b00      	cmp	r3, #0
  403a42:	d0e3      	beq.n	403a0c <_dtoa_r+0x5c>
  403a44:	1cc3      	adds	r3, r0, #3
  403a46:	e7f4      	b.n	403a32 <_dtoa_r+0x82>
  403a48:	2301      	movs	r3, #1
  403a4a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403a4e:	6033      	str	r3, [r6, #0]
  403a50:	46ab      	mov	fp, r5
  403a52:	e7c5      	b.n	4039e0 <_dtoa_r+0x30>
  403a54:	aa18      	add	r2, sp, #96	; 0x60
  403a56:	ab19      	add	r3, sp, #100	; 0x64
  403a58:	9201      	str	r2, [sp, #4]
  403a5a:	9300      	str	r3, [sp, #0]
  403a5c:	4652      	mov	r2, sl
  403a5e:	465b      	mov	r3, fp
  403a60:	4620      	mov	r0, r4
  403a62:	f001 fd41 	bl	4054e8 <__d2b>
  403a66:	0d2b      	lsrs	r3, r5, #20
  403a68:	4681      	mov	r9, r0
  403a6a:	d071      	beq.n	403b50 <_dtoa_r+0x1a0>
  403a6c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403a70:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403a74:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403a76:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403a7a:	4650      	mov	r0, sl
  403a7c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403a80:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403a84:	2200      	movs	r2, #0
  403a86:	4b78      	ldr	r3, [pc, #480]	; (403c68 <_dtoa_r+0x2b8>)
  403a88:	f7fe f814 	bl	401ab4 <__aeabi_dsub>
  403a8c:	a36c      	add	r3, pc, #432	; (adr r3, 403c40 <_dtoa_r+0x290>)
  403a8e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a92:	f7fe f9c3 	bl	401e1c <__aeabi_dmul>
  403a96:	a36c      	add	r3, pc, #432	; (adr r3, 403c48 <_dtoa_r+0x298>)
  403a98:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a9c:	f7fe f80c 	bl	401ab8 <__adddf3>
  403aa0:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403aa4:	4630      	mov	r0, r6
  403aa6:	f7fe f953 	bl	401d50 <__aeabi_i2d>
  403aaa:	a369      	add	r3, pc, #420	; (adr r3, 403c50 <_dtoa_r+0x2a0>)
  403aac:	e9d3 2300 	ldrd	r2, r3, [r3]
  403ab0:	f7fe f9b4 	bl	401e1c <__aeabi_dmul>
  403ab4:	4602      	mov	r2, r0
  403ab6:	460b      	mov	r3, r1
  403ab8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403abc:	f7fd fffc 	bl	401ab8 <__adddf3>
  403ac0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403ac4:	f7fe fbbc 	bl	402240 <__aeabi_d2iz>
  403ac8:	2200      	movs	r2, #0
  403aca:	9002      	str	r0, [sp, #8]
  403acc:	2300      	movs	r3, #0
  403ace:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403ad2:	f002 fad7 	bl	406084 <__aeabi_dcmplt>
  403ad6:	2800      	cmp	r0, #0
  403ad8:	f040 8173 	bne.w	403dc2 <_dtoa_r+0x412>
  403adc:	9d02      	ldr	r5, [sp, #8]
  403ade:	2d16      	cmp	r5, #22
  403ae0:	f200 815d 	bhi.w	403d9e <_dtoa_r+0x3ee>
  403ae4:	4b61      	ldr	r3, [pc, #388]	; (403c6c <_dtoa_r+0x2bc>)
  403ae6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403aea:	e9d3 0100 	ldrd	r0, r1, [r3]
  403aee:	4652      	mov	r2, sl
  403af0:	465b      	mov	r3, fp
  403af2:	f002 fae5 	bl	4060c0 <__aeabi_dcmpgt>
  403af6:	2800      	cmp	r0, #0
  403af8:	f000 81c5 	beq.w	403e86 <_dtoa_r+0x4d6>
  403afc:	1e6b      	subs	r3, r5, #1
  403afe:	9302      	str	r3, [sp, #8]
  403b00:	2300      	movs	r3, #0
  403b02:	930e      	str	r3, [sp, #56]	; 0x38
  403b04:	1bbf      	subs	r7, r7, r6
  403b06:	1e7b      	subs	r3, r7, #1
  403b08:	9306      	str	r3, [sp, #24]
  403b0a:	f100 8154 	bmi.w	403db6 <_dtoa_r+0x406>
  403b0e:	2300      	movs	r3, #0
  403b10:	9308      	str	r3, [sp, #32]
  403b12:	9b02      	ldr	r3, [sp, #8]
  403b14:	2b00      	cmp	r3, #0
  403b16:	f2c0 8145 	blt.w	403da4 <_dtoa_r+0x3f4>
  403b1a:	9a06      	ldr	r2, [sp, #24]
  403b1c:	930d      	str	r3, [sp, #52]	; 0x34
  403b1e:	4611      	mov	r1, r2
  403b20:	4419      	add	r1, r3
  403b22:	2300      	movs	r3, #0
  403b24:	9106      	str	r1, [sp, #24]
  403b26:	930c      	str	r3, [sp, #48]	; 0x30
  403b28:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b2a:	2b09      	cmp	r3, #9
  403b2c:	d82a      	bhi.n	403b84 <_dtoa_r+0x1d4>
  403b2e:	2b05      	cmp	r3, #5
  403b30:	f340 865b 	ble.w	4047ea <_dtoa_r+0xe3a>
  403b34:	3b04      	subs	r3, #4
  403b36:	9324      	str	r3, [sp, #144]	; 0x90
  403b38:	2500      	movs	r5, #0
  403b3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b3c:	3b02      	subs	r3, #2
  403b3e:	2b03      	cmp	r3, #3
  403b40:	f200 8642 	bhi.w	4047c8 <_dtoa_r+0xe18>
  403b44:	e8df f013 	tbh	[pc, r3, lsl #1]
  403b48:	02c903d4 	.word	0x02c903d4
  403b4c:	046103df 	.word	0x046103df
  403b50:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403b52:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403b54:	443e      	add	r6, r7
  403b56:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403b5a:	2b20      	cmp	r3, #32
  403b5c:	f340 818e 	ble.w	403e7c <_dtoa_r+0x4cc>
  403b60:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403b64:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403b68:	409d      	lsls	r5, r3
  403b6a:	fa2a f000 	lsr.w	r0, sl, r0
  403b6e:	4328      	orrs	r0, r5
  403b70:	f7fe f8de 	bl	401d30 <__aeabi_ui2d>
  403b74:	2301      	movs	r3, #1
  403b76:	3e01      	subs	r6, #1
  403b78:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403b7c:	9314      	str	r3, [sp, #80]	; 0x50
  403b7e:	e781      	b.n	403a84 <_dtoa_r+0xd4>
  403b80:	483b      	ldr	r0, [pc, #236]	; (403c70 <_dtoa_r+0x2c0>)
  403b82:	e743      	b.n	403a0c <_dtoa_r+0x5c>
  403b84:	2100      	movs	r1, #0
  403b86:	6461      	str	r1, [r4, #68]	; 0x44
  403b88:	4620      	mov	r0, r4
  403b8a:	9125      	str	r1, [sp, #148]	; 0x94
  403b8c:	f001 fa0e 	bl	404fac <_Balloc>
  403b90:	f04f 33ff 	mov.w	r3, #4294967295
  403b94:	930a      	str	r3, [sp, #40]	; 0x28
  403b96:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b98:	930f      	str	r3, [sp, #60]	; 0x3c
  403b9a:	2301      	movs	r3, #1
  403b9c:	9004      	str	r0, [sp, #16]
  403b9e:	6420      	str	r0, [r4, #64]	; 0x40
  403ba0:	9224      	str	r2, [sp, #144]	; 0x90
  403ba2:	930b      	str	r3, [sp, #44]	; 0x2c
  403ba4:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403ba6:	2b00      	cmp	r3, #0
  403ba8:	f2c0 80d9 	blt.w	403d5e <_dtoa_r+0x3ae>
  403bac:	9a02      	ldr	r2, [sp, #8]
  403bae:	2a0e      	cmp	r2, #14
  403bb0:	f300 80d5 	bgt.w	403d5e <_dtoa_r+0x3ae>
  403bb4:	4b2d      	ldr	r3, [pc, #180]	; (403c6c <_dtoa_r+0x2bc>)
  403bb6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403bba:	e9d3 2300 	ldrd	r2, r3, [r3]
  403bbe:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403bc2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403bc4:	2b00      	cmp	r3, #0
  403bc6:	f2c0 83ba 	blt.w	40433e <_dtoa_r+0x98e>
  403bca:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403bce:	4650      	mov	r0, sl
  403bd0:	462a      	mov	r2, r5
  403bd2:	4633      	mov	r3, r6
  403bd4:	4659      	mov	r1, fp
  403bd6:	f7fe fa4b 	bl	402070 <__aeabi_ddiv>
  403bda:	f7fe fb31 	bl	402240 <__aeabi_d2iz>
  403bde:	4680      	mov	r8, r0
  403be0:	f7fe f8b6 	bl	401d50 <__aeabi_i2d>
  403be4:	462a      	mov	r2, r5
  403be6:	4633      	mov	r3, r6
  403be8:	f7fe f918 	bl	401e1c <__aeabi_dmul>
  403bec:	460b      	mov	r3, r1
  403bee:	4602      	mov	r2, r0
  403bf0:	4659      	mov	r1, fp
  403bf2:	4650      	mov	r0, sl
  403bf4:	f7fd ff5e 	bl	401ab4 <__aeabi_dsub>
  403bf8:	9d04      	ldr	r5, [sp, #16]
  403bfa:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403bfe:	702b      	strb	r3, [r5, #0]
  403c00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c02:	2b01      	cmp	r3, #1
  403c04:	4606      	mov	r6, r0
  403c06:	460f      	mov	r7, r1
  403c08:	f105 0501 	add.w	r5, r5, #1
  403c0c:	d068      	beq.n	403ce0 <_dtoa_r+0x330>
  403c0e:	2200      	movs	r2, #0
  403c10:	4b18      	ldr	r3, [pc, #96]	; (403c74 <_dtoa_r+0x2c4>)
  403c12:	f7fe f903 	bl	401e1c <__aeabi_dmul>
  403c16:	2200      	movs	r2, #0
  403c18:	2300      	movs	r3, #0
  403c1a:	4606      	mov	r6, r0
  403c1c:	460f      	mov	r7, r1
  403c1e:	f002 fa27 	bl	406070 <__aeabi_dcmpeq>
  403c22:	2800      	cmp	r0, #0
  403c24:	f040 8088 	bne.w	403d38 <_dtoa_r+0x388>
  403c28:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403c2c:	f04f 0a00 	mov.w	sl, #0
  403c30:	f8df b040 	ldr.w	fp, [pc, #64]	; 403c74 <_dtoa_r+0x2c4>
  403c34:	940c      	str	r4, [sp, #48]	; 0x30
  403c36:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403c3a:	e028      	b.n	403c8e <_dtoa_r+0x2de>
  403c3c:	f3af 8000 	nop.w
  403c40:	636f4361 	.word	0x636f4361
  403c44:	3fd287a7 	.word	0x3fd287a7
  403c48:	8b60c8b3 	.word	0x8b60c8b3
  403c4c:	3fc68a28 	.word	0x3fc68a28
  403c50:	509f79fb 	.word	0x509f79fb
  403c54:	3fd34413 	.word	0x3fd34413
  403c58:	7ff00000 	.word	0x7ff00000
  403c5c:	00406ebd 	.word	0x00406ebd
  403c60:	00406ee0 	.word	0x00406ee0
  403c64:	00406eec 	.word	0x00406eec
  403c68:	3ff80000 	.word	0x3ff80000
  403c6c:	00406f18 	.word	0x00406f18
  403c70:	00406ebc 	.word	0x00406ebc
  403c74:	40240000 	.word	0x40240000
  403c78:	f7fe f8d0 	bl	401e1c <__aeabi_dmul>
  403c7c:	2200      	movs	r2, #0
  403c7e:	2300      	movs	r3, #0
  403c80:	4606      	mov	r6, r0
  403c82:	460f      	mov	r7, r1
  403c84:	f002 f9f4 	bl	406070 <__aeabi_dcmpeq>
  403c88:	2800      	cmp	r0, #0
  403c8a:	f040 83c1 	bne.w	404410 <_dtoa_r+0xa60>
  403c8e:	4642      	mov	r2, r8
  403c90:	464b      	mov	r3, r9
  403c92:	4630      	mov	r0, r6
  403c94:	4639      	mov	r1, r7
  403c96:	f7fe f9eb 	bl	402070 <__aeabi_ddiv>
  403c9a:	f7fe fad1 	bl	402240 <__aeabi_d2iz>
  403c9e:	4604      	mov	r4, r0
  403ca0:	f7fe f856 	bl	401d50 <__aeabi_i2d>
  403ca4:	4642      	mov	r2, r8
  403ca6:	464b      	mov	r3, r9
  403ca8:	f7fe f8b8 	bl	401e1c <__aeabi_dmul>
  403cac:	4602      	mov	r2, r0
  403cae:	460b      	mov	r3, r1
  403cb0:	4630      	mov	r0, r6
  403cb2:	4639      	mov	r1, r7
  403cb4:	f7fd fefe 	bl	401ab4 <__aeabi_dsub>
  403cb8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403cbc:	9e04      	ldr	r6, [sp, #16]
  403cbe:	f805 eb01 	strb.w	lr, [r5], #1
  403cc2:	eba5 0e06 	sub.w	lr, r5, r6
  403cc6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403cc8:	45b6      	cmp	lr, r6
  403cca:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403cce:	4652      	mov	r2, sl
  403cd0:	465b      	mov	r3, fp
  403cd2:	d1d1      	bne.n	403c78 <_dtoa_r+0x2c8>
  403cd4:	46a0      	mov	r8, r4
  403cd6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403cda:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403cdc:	4606      	mov	r6, r0
  403cde:	460f      	mov	r7, r1
  403ce0:	4632      	mov	r2, r6
  403ce2:	463b      	mov	r3, r7
  403ce4:	4630      	mov	r0, r6
  403ce6:	4639      	mov	r1, r7
  403ce8:	f7fd fee6 	bl	401ab8 <__adddf3>
  403cec:	4606      	mov	r6, r0
  403cee:	460f      	mov	r7, r1
  403cf0:	4602      	mov	r2, r0
  403cf2:	460b      	mov	r3, r1
  403cf4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403cf8:	f002 f9c4 	bl	406084 <__aeabi_dcmplt>
  403cfc:	b948      	cbnz	r0, 403d12 <_dtoa_r+0x362>
  403cfe:	4632      	mov	r2, r6
  403d00:	463b      	mov	r3, r7
  403d02:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403d06:	f002 f9b3 	bl	406070 <__aeabi_dcmpeq>
  403d0a:	b1a8      	cbz	r0, 403d38 <_dtoa_r+0x388>
  403d0c:	f018 0f01 	tst.w	r8, #1
  403d10:	d012      	beq.n	403d38 <_dtoa_r+0x388>
  403d12:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403d16:	9a04      	ldr	r2, [sp, #16]
  403d18:	1e6b      	subs	r3, r5, #1
  403d1a:	e004      	b.n	403d26 <_dtoa_r+0x376>
  403d1c:	429a      	cmp	r2, r3
  403d1e:	f000 8401 	beq.w	404524 <_dtoa_r+0xb74>
  403d22:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403d26:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403d2a:	f103 0501 	add.w	r5, r3, #1
  403d2e:	d0f5      	beq.n	403d1c <_dtoa_r+0x36c>
  403d30:	f108 0801 	add.w	r8, r8, #1
  403d34:	f883 8000 	strb.w	r8, [r3]
  403d38:	4649      	mov	r1, r9
  403d3a:	4620      	mov	r0, r4
  403d3c:	f001 f95c 	bl	404ff8 <_Bfree>
  403d40:	2200      	movs	r2, #0
  403d42:	9b02      	ldr	r3, [sp, #8]
  403d44:	702a      	strb	r2, [r5, #0]
  403d46:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403d48:	3301      	adds	r3, #1
  403d4a:	6013      	str	r3, [r2, #0]
  403d4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403d4e:	2b00      	cmp	r3, #0
  403d50:	f000 839e 	beq.w	404490 <_dtoa_r+0xae0>
  403d54:	9804      	ldr	r0, [sp, #16]
  403d56:	601d      	str	r5, [r3, #0]
  403d58:	b01b      	add	sp, #108	; 0x6c
  403d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d60:	2a00      	cmp	r2, #0
  403d62:	d03e      	beq.n	403de2 <_dtoa_r+0x432>
  403d64:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403d66:	2a01      	cmp	r2, #1
  403d68:	f340 8311 	ble.w	40438e <_dtoa_r+0x9de>
  403d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d6e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d70:	1e5f      	subs	r7, r3, #1
  403d72:	42ba      	cmp	r2, r7
  403d74:	f2c0 838f 	blt.w	404496 <_dtoa_r+0xae6>
  403d78:	1bd7      	subs	r7, r2, r7
  403d7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d7c:	2b00      	cmp	r3, #0
  403d7e:	f2c0 848b 	blt.w	404698 <_dtoa_r+0xce8>
  403d82:	9d08      	ldr	r5, [sp, #32]
  403d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d86:	9a08      	ldr	r2, [sp, #32]
  403d88:	441a      	add	r2, r3
  403d8a:	9208      	str	r2, [sp, #32]
  403d8c:	9a06      	ldr	r2, [sp, #24]
  403d8e:	2101      	movs	r1, #1
  403d90:	441a      	add	r2, r3
  403d92:	4620      	mov	r0, r4
  403d94:	9206      	str	r2, [sp, #24]
  403d96:	f001 f9c9 	bl	40512c <__i2b>
  403d9a:	4606      	mov	r6, r0
  403d9c:	e024      	b.n	403de8 <_dtoa_r+0x438>
  403d9e:	2301      	movs	r3, #1
  403da0:	930e      	str	r3, [sp, #56]	; 0x38
  403da2:	e6af      	b.n	403b04 <_dtoa_r+0x154>
  403da4:	9a08      	ldr	r2, [sp, #32]
  403da6:	9b02      	ldr	r3, [sp, #8]
  403da8:	1ad2      	subs	r2, r2, r3
  403daa:	425b      	negs	r3, r3
  403dac:	930c      	str	r3, [sp, #48]	; 0x30
  403dae:	2300      	movs	r3, #0
  403db0:	9208      	str	r2, [sp, #32]
  403db2:	930d      	str	r3, [sp, #52]	; 0x34
  403db4:	e6b8      	b.n	403b28 <_dtoa_r+0x178>
  403db6:	f1c7 0301 	rsb	r3, r7, #1
  403dba:	9308      	str	r3, [sp, #32]
  403dbc:	2300      	movs	r3, #0
  403dbe:	9306      	str	r3, [sp, #24]
  403dc0:	e6a7      	b.n	403b12 <_dtoa_r+0x162>
  403dc2:	9d02      	ldr	r5, [sp, #8]
  403dc4:	4628      	mov	r0, r5
  403dc6:	f7fd ffc3 	bl	401d50 <__aeabi_i2d>
  403dca:	4602      	mov	r2, r0
  403dcc:	460b      	mov	r3, r1
  403dce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403dd2:	f002 f94d 	bl	406070 <__aeabi_dcmpeq>
  403dd6:	2800      	cmp	r0, #0
  403dd8:	f47f ae80 	bne.w	403adc <_dtoa_r+0x12c>
  403ddc:	1e6b      	subs	r3, r5, #1
  403dde:	9302      	str	r3, [sp, #8]
  403de0:	e67c      	b.n	403adc <_dtoa_r+0x12c>
  403de2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403de4:	9d08      	ldr	r5, [sp, #32]
  403de6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403de8:	2d00      	cmp	r5, #0
  403dea:	dd0c      	ble.n	403e06 <_dtoa_r+0x456>
  403dec:	9906      	ldr	r1, [sp, #24]
  403dee:	2900      	cmp	r1, #0
  403df0:	460b      	mov	r3, r1
  403df2:	dd08      	ble.n	403e06 <_dtoa_r+0x456>
  403df4:	42a9      	cmp	r1, r5
  403df6:	9a08      	ldr	r2, [sp, #32]
  403df8:	bfa8      	it	ge
  403dfa:	462b      	movge	r3, r5
  403dfc:	1ad2      	subs	r2, r2, r3
  403dfe:	1aed      	subs	r5, r5, r3
  403e00:	1acb      	subs	r3, r1, r3
  403e02:	9208      	str	r2, [sp, #32]
  403e04:	9306      	str	r3, [sp, #24]
  403e06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e08:	b1d3      	cbz	r3, 403e40 <_dtoa_r+0x490>
  403e0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e0c:	2b00      	cmp	r3, #0
  403e0e:	f000 82b7 	beq.w	404380 <_dtoa_r+0x9d0>
  403e12:	2f00      	cmp	r7, #0
  403e14:	dd10      	ble.n	403e38 <_dtoa_r+0x488>
  403e16:	4631      	mov	r1, r6
  403e18:	463a      	mov	r2, r7
  403e1a:	4620      	mov	r0, r4
  403e1c:	f001 fa22 	bl	405264 <__pow5mult>
  403e20:	464a      	mov	r2, r9
  403e22:	4601      	mov	r1, r0
  403e24:	4606      	mov	r6, r0
  403e26:	4620      	mov	r0, r4
  403e28:	f001 f98a 	bl	405140 <__multiply>
  403e2c:	4649      	mov	r1, r9
  403e2e:	4680      	mov	r8, r0
  403e30:	4620      	mov	r0, r4
  403e32:	f001 f8e1 	bl	404ff8 <_Bfree>
  403e36:	46c1      	mov	r9, r8
  403e38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e3a:	1bda      	subs	r2, r3, r7
  403e3c:	f040 82a1 	bne.w	404382 <_dtoa_r+0x9d2>
  403e40:	2101      	movs	r1, #1
  403e42:	4620      	mov	r0, r4
  403e44:	f001 f972 	bl	40512c <__i2b>
  403e48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e4a:	2b00      	cmp	r3, #0
  403e4c:	4680      	mov	r8, r0
  403e4e:	dd1c      	ble.n	403e8a <_dtoa_r+0x4da>
  403e50:	4601      	mov	r1, r0
  403e52:	461a      	mov	r2, r3
  403e54:	4620      	mov	r0, r4
  403e56:	f001 fa05 	bl	405264 <__pow5mult>
  403e5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e5c:	2b01      	cmp	r3, #1
  403e5e:	4680      	mov	r8, r0
  403e60:	f340 8254 	ble.w	40430c <_dtoa_r+0x95c>
  403e64:	2300      	movs	r3, #0
  403e66:	930c      	str	r3, [sp, #48]	; 0x30
  403e68:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403e6c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403e70:	6918      	ldr	r0, [r3, #16]
  403e72:	f001 f90b 	bl	40508c <__hi0bits>
  403e76:	f1c0 0020 	rsb	r0, r0, #32
  403e7a:	e010      	b.n	403e9e <_dtoa_r+0x4ee>
  403e7c:	f1c3 0520 	rsb	r5, r3, #32
  403e80:	fa0a f005 	lsl.w	r0, sl, r5
  403e84:	e674      	b.n	403b70 <_dtoa_r+0x1c0>
  403e86:	900e      	str	r0, [sp, #56]	; 0x38
  403e88:	e63c      	b.n	403b04 <_dtoa_r+0x154>
  403e8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e8c:	2b01      	cmp	r3, #1
  403e8e:	f340 8287 	ble.w	4043a0 <_dtoa_r+0x9f0>
  403e92:	2300      	movs	r3, #0
  403e94:	930c      	str	r3, [sp, #48]	; 0x30
  403e96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e98:	2001      	movs	r0, #1
  403e9a:	2b00      	cmp	r3, #0
  403e9c:	d1e4      	bne.n	403e68 <_dtoa_r+0x4b8>
  403e9e:	9a06      	ldr	r2, [sp, #24]
  403ea0:	4410      	add	r0, r2
  403ea2:	f010 001f 	ands.w	r0, r0, #31
  403ea6:	f000 80a1 	beq.w	403fec <_dtoa_r+0x63c>
  403eaa:	f1c0 0320 	rsb	r3, r0, #32
  403eae:	2b04      	cmp	r3, #4
  403eb0:	f340 849e 	ble.w	4047f0 <_dtoa_r+0xe40>
  403eb4:	9b08      	ldr	r3, [sp, #32]
  403eb6:	f1c0 001c 	rsb	r0, r0, #28
  403eba:	4403      	add	r3, r0
  403ebc:	9308      	str	r3, [sp, #32]
  403ebe:	4613      	mov	r3, r2
  403ec0:	4403      	add	r3, r0
  403ec2:	4405      	add	r5, r0
  403ec4:	9306      	str	r3, [sp, #24]
  403ec6:	9b08      	ldr	r3, [sp, #32]
  403ec8:	2b00      	cmp	r3, #0
  403eca:	dd05      	ble.n	403ed8 <_dtoa_r+0x528>
  403ecc:	4649      	mov	r1, r9
  403ece:	461a      	mov	r2, r3
  403ed0:	4620      	mov	r0, r4
  403ed2:	f001 fa17 	bl	405304 <__lshift>
  403ed6:	4681      	mov	r9, r0
  403ed8:	9b06      	ldr	r3, [sp, #24]
  403eda:	2b00      	cmp	r3, #0
  403edc:	dd05      	ble.n	403eea <_dtoa_r+0x53a>
  403ede:	4641      	mov	r1, r8
  403ee0:	461a      	mov	r2, r3
  403ee2:	4620      	mov	r0, r4
  403ee4:	f001 fa0e 	bl	405304 <__lshift>
  403ee8:	4680      	mov	r8, r0
  403eea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403eec:	2b00      	cmp	r3, #0
  403eee:	f040 8086 	bne.w	403ffe <_dtoa_r+0x64e>
  403ef2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ef4:	2b00      	cmp	r3, #0
  403ef6:	f340 8266 	ble.w	4043c6 <_dtoa_r+0xa16>
  403efa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403efc:	2b00      	cmp	r3, #0
  403efe:	f000 8098 	beq.w	404032 <_dtoa_r+0x682>
  403f02:	2d00      	cmp	r5, #0
  403f04:	dd05      	ble.n	403f12 <_dtoa_r+0x562>
  403f06:	4631      	mov	r1, r6
  403f08:	462a      	mov	r2, r5
  403f0a:	4620      	mov	r0, r4
  403f0c:	f001 f9fa 	bl	405304 <__lshift>
  403f10:	4606      	mov	r6, r0
  403f12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403f14:	2b00      	cmp	r3, #0
  403f16:	f040 8337 	bne.w	404588 <_dtoa_r+0xbd8>
  403f1a:	9606      	str	r6, [sp, #24]
  403f1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403f1e:	9a04      	ldr	r2, [sp, #16]
  403f20:	f8dd b018 	ldr.w	fp, [sp, #24]
  403f24:	3b01      	subs	r3, #1
  403f26:	18d3      	adds	r3, r2, r3
  403f28:	930b      	str	r3, [sp, #44]	; 0x2c
  403f2a:	f00a 0301 	and.w	r3, sl, #1
  403f2e:	930c      	str	r3, [sp, #48]	; 0x30
  403f30:	4617      	mov	r7, r2
  403f32:	46c2      	mov	sl, r8
  403f34:	4651      	mov	r1, sl
  403f36:	4648      	mov	r0, r9
  403f38:	f7ff fca4 	bl	403884 <quorem>
  403f3c:	4631      	mov	r1, r6
  403f3e:	4605      	mov	r5, r0
  403f40:	4648      	mov	r0, r9
  403f42:	f001 fa31 	bl	4053a8 <__mcmp>
  403f46:	465a      	mov	r2, fp
  403f48:	900a      	str	r0, [sp, #40]	; 0x28
  403f4a:	4651      	mov	r1, sl
  403f4c:	4620      	mov	r0, r4
  403f4e:	f001 fa47 	bl	4053e0 <__mdiff>
  403f52:	68c2      	ldr	r2, [r0, #12]
  403f54:	4680      	mov	r8, r0
  403f56:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403f5a:	2a00      	cmp	r2, #0
  403f5c:	f040 822b 	bne.w	4043b6 <_dtoa_r+0xa06>
  403f60:	4601      	mov	r1, r0
  403f62:	4648      	mov	r0, r9
  403f64:	9308      	str	r3, [sp, #32]
  403f66:	f001 fa1f 	bl	4053a8 <__mcmp>
  403f6a:	4641      	mov	r1, r8
  403f6c:	9006      	str	r0, [sp, #24]
  403f6e:	4620      	mov	r0, r4
  403f70:	f001 f842 	bl	404ff8 <_Bfree>
  403f74:	9a06      	ldr	r2, [sp, #24]
  403f76:	9b08      	ldr	r3, [sp, #32]
  403f78:	b932      	cbnz	r2, 403f88 <_dtoa_r+0x5d8>
  403f7a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f7c:	b921      	cbnz	r1, 403f88 <_dtoa_r+0x5d8>
  403f7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f80:	2a00      	cmp	r2, #0
  403f82:	f000 83ef 	beq.w	404764 <_dtoa_r+0xdb4>
  403f86:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403f88:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f8a:	2900      	cmp	r1, #0
  403f8c:	f2c0 829f 	blt.w	4044ce <_dtoa_r+0xb1e>
  403f90:	d105      	bne.n	403f9e <_dtoa_r+0x5ee>
  403f92:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f94:	b919      	cbnz	r1, 403f9e <_dtoa_r+0x5ee>
  403f96:	990c      	ldr	r1, [sp, #48]	; 0x30
  403f98:	2900      	cmp	r1, #0
  403f9a:	f000 8298 	beq.w	4044ce <_dtoa_r+0xb1e>
  403f9e:	2a00      	cmp	r2, #0
  403fa0:	f300 8306 	bgt.w	4045b0 <_dtoa_r+0xc00>
  403fa4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403fa6:	703b      	strb	r3, [r7, #0]
  403fa8:	f107 0801 	add.w	r8, r7, #1
  403fac:	4297      	cmp	r7, r2
  403fae:	4645      	mov	r5, r8
  403fb0:	f000 830c 	beq.w	4045cc <_dtoa_r+0xc1c>
  403fb4:	4649      	mov	r1, r9
  403fb6:	2300      	movs	r3, #0
  403fb8:	220a      	movs	r2, #10
  403fba:	4620      	mov	r0, r4
  403fbc:	f001 f826 	bl	40500c <__multadd>
  403fc0:	455e      	cmp	r6, fp
  403fc2:	4681      	mov	r9, r0
  403fc4:	4631      	mov	r1, r6
  403fc6:	f04f 0300 	mov.w	r3, #0
  403fca:	f04f 020a 	mov.w	r2, #10
  403fce:	4620      	mov	r0, r4
  403fd0:	f000 81eb 	beq.w	4043aa <_dtoa_r+0x9fa>
  403fd4:	f001 f81a 	bl	40500c <__multadd>
  403fd8:	4659      	mov	r1, fp
  403fda:	4606      	mov	r6, r0
  403fdc:	2300      	movs	r3, #0
  403fde:	220a      	movs	r2, #10
  403fe0:	4620      	mov	r0, r4
  403fe2:	f001 f813 	bl	40500c <__multadd>
  403fe6:	4647      	mov	r7, r8
  403fe8:	4683      	mov	fp, r0
  403fea:	e7a3      	b.n	403f34 <_dtoa_r+0x584>
  403fec:	201c      	movs	r0, #28
  403fee:	9b08      	ldr	r3, [sp, #32]
  403ff0:	4403      	add	r3, r0
  403ff2:	9308      	str	r3, [sp, #32]
  403ff4:	9b06      	ldr	r3, [sp, #24]
  403ff6:	4403      	add	r3, r0
  403ff8:	4405      	add	r5, r0
  403ffa:	9306      	str	r3, [sp, #24]
  403ffc:	e763      	b.n	403ec6 <_dtoa_r+0x516>
  403ffe:	4641      	mov	r1, r8
  404000:	4648      	mov	r0, r9
  404002:	f001 f9d1 	bl	4053a8 <__mcmp>
  404006:	2800      	cmp	r0, #0
  404008:	f6bf af73 	bge.w	403ef2 <_dtoa_r+0x542>
  40400c:	9f02      	ldr	r7, [sp, #8]
  40400e:	4649      	mov	r1, r9
  404010:	2300      	movs	r3, #0
  404012:	220a      	movs	r2, #10
  404014:	4620      	mov	r0, r4
  404016:	3f01      	subs	r7, #1
  404018:	9702      	str	r7, [sp, #8]
  40401a:	f000 fff7 	bl	40500c <__multadd>
  40401e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404020:	4681      	mov	r9, r0
  404022:	2b00      	cmp	r3, #0
  404024:	f040 83b6 	bne.w	404794 <_dtoa_r+0xde4>
  404028:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40402a:	2b00      	cmp	r3, #0
  40402c:	f340 83bf 	ble.w	4047ae <_dtoa_r+0xdfe>
  404030:	930a      	str	r3, [sp, #40]	; 0x28
  404032:	f8dd b010 	ldr.w	fp, [sp, #16]
  404036:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404038:	465d      	mov	r5, fp
  40403a:	e002      	b.n	404042 <_dtoa_r+0x692>
  40403c:	f000 ffe6 	bl	40500c <__multadd>
  404040:	4681      	mov	r9, r0
  404042:	4641      	mov	r1, r8
  404044:	4648      	mov	r0, r9
  404046:	f7ff fc1d 	bl	403884 <quorem>
  40404a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40404e:	f805 ab01 	strb.w	sl, [r5], #1
  404052:	eba5 030b 	sub.w	r3, r5, fp
  404056:	42bb      	cmp	r3, r7
  404058:	f04f 020a 	mov.w	r2, #10
  40405c:	f04f 0300 	mov.w	r3, #0
  404060:	4649      	mov	r1, r9
  404062:	4620      	mov	r0, r4
  404064:	dbea      	blt.n	40403c <_dtoa_r+0x68c>
  404066:	9b04      	ldr	r3, [sp, #16]
  404068:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40406a:	2a01      	cmp	r2, #1
  40406c:	bfac      	ite	ge
  40406e:	189b      	addge	r3, r3, r2
  404070:	3301      	addlt	r3, #1
  404072:	461d      	mov	r5, r3
  404074:	f04f 0b00 	mov.w	fp, #0
  404078:	4649      	mov	r1, r9
  40407a:	2201      	movs	r2, #1
  40407c:	4620      	mov	r0, r4
  40407e:	f001 f941 	bl	405304 <__lshift>
  404082:	4641      	mov	r1, r8
  404084:	4681      	mov	r9, r0
  404086:	f001 f98f 	bl	4053a8 <__mcmp>
  40408a:	2800      	cmp	r0, #0
  40408c:	f340 823d 	ble.w	40450a <_dtoa_r+0xb5a>
  404090:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404094:	9904      	ldr	r1, [sp, #16]
  404096:	1e6b      	subs	r3, r5, #1
  404098:	e004      	b.n	4040a4 <_dtoa_r+0x6f4>
  40409a:	428b      	cmp	r3, r1
  40409c:	f000 81ae 	beq.w	4043fc <_dtoa_r+0xa4c>
  4040a0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4040a4:	2a39      	cmp	r2, #57	; 0x39
  4040a6:	f103 0501 	add.w	r5, r3, #1
  4040aa:	d0f6      	beq.n	40409a <_dtoa_r+0x6ea>
  4040ac:	3201      	adds	r2, #1
  4040ae:	701a      	strb	r2, [r3, #0]
  4040b0:	4641      	mov	r1, r8
  4040b2:	4620      	mov	r0, r4
  4040b4:	f000 ffa0 	bl	404ff8 <_Bfree>
  4040b8:	2e00      	cmp	r6, #0
  4040ba:	f43f ae3d 	beq.w	403d38 <_dtoa_r+0x388>
  4040be:	f1bb 0f00 	cmp.w	fp, #0
  4040c2:	d005      	beq.n	4040d0 <_dtoa_r+0x720>
  4040c4:	45b3      	cmp	fp, r6
  4040c6:	d003      	beq.n	4040d0 <_dtoa_r+0x720>
  4040c8:	4659      	mov	r1, fp
  4040ca:	4620      	mov	r0, r4
  4040cc:	f000 ff94 	bl	404ff8 <_Bfree>
  4040d0:	4631      	mov	r1, r6
  4040d2:	4620      	mov	r0, r4
  4040d4:	f000 ff90 	bl	404ff8 <_Bfree>
  4040d8:	e62e      	b.n	403d38 <_dtoa_r+0x388>
  4040da:	2300      	movs	r3, #0
  4040dc:	930b      	str	r3, [sp, #44]	; 0x2c
  4040de:	9b02      	ldr	r3, [sp, #8]
  4040e0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4040e2:	4413      	add	r3, r2
  4040e4:	930f      	str	r3, [sp, #60]	; 0x3c
  4040e6:	3301      	adds	r3, #1
  4040e8:	2b01      	cmp	r3, #1
  4040ea:	461f      	mov	r7, r3
  4040ec:	461e      	mov	r6, r3
  4040ee:	930a      	str	r3, [sp, #40]	; 0x28
  4040f0:	bfb8      	it	lt
  4040f2:	2701      	movlt	r7, #1
  4040f4:	2100      	movs	r1, #0
  4040f6:	2f17      	cmp	r7, #23
  4040f8:	6461      	str	r1, [r4, #68]	; 0x44
  4040fa:	d90a      	bls.n	404112 <_dtoa_r+0x762>
  4040fc:	2201      	movs	r2, #1
  4040fe:	2304      	movs	r3, #4
  404100:	005b      	lsls	r3, r3, #1
  404102:	f103 0014 	add.w	r0, r3, #20
  404106:	4287      	cmp	r7, r0
  404108:	4611      	mov	r1, r2
  40410a:	f102 0201 	add.w	r2, r2, #1
  40410e:	d2f7      	bcs.n	404100 <_dtoa_r+0x750>
  404110:	6461      	str	r1, [r4, #68]	; 0x44
  404112:	4620      	mov	r0, r4
  404114:	f000 ff4a 	bl	404fac <_Balloc>
  404118:	2e0e      	cmp	r6, #14
  40411a:	9004      	str	r0, [sp, #16]
  40411c:	6420      	str	r0, [r4, #64]	; 0x40
  40411e:	f63f ad41 	bhi.w	403ba4 <_dtoa_r+0x1f4>
  404122:	2d00      	cmp	r5, #0
  404124:	f43f ad3e 	beq.w	403ba4 <_dtoa_r+0x1f4>
  404128:	9902      	ldr	r1, [sp, #8]
  40412a:	2900      	cmp	r1, #0
  40412c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404130:	f340 8202 	ble.w	404538 <_dtoa_r+0xb88>
  404134:	4bb8      	ldr	r3, [pc, #736]	; (404418 <_dtoa_r+0xa68>)
  404136:	f001 020f 	and.w	r2, r1, #15
  40413a:	110d      	asrs	r5, r1, #4
  40413c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404140:	06e9      	lsls	r1, r5, #27
  404142:	e9d3 6700 	ldrd	r6, r7, [r3]
  404146:	f140 81ae 	bpl.w	4044a6 <_dtoa_r+0xaf6>
  40414a:	4bb4      	ldr	r3, [pc, #720]	; (40441c <_dtoa_r+0xa6c>)
  40414c:	4650      	mov	r0, sl
  40414e:	4659      	mov	r1, fp
  404150:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  404154:	f7fd ff8c 	bl	402070 <__aeabi_ddiv>
  404158:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40415c:	f005 050f 	and.w	r5, r5, #15
  404160:	f04f 0a03 	mov.w	sl, #3
  404164:	b18d      	cbz	r5, 40418a <_dtoa_r+0x7da>
  404166:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40441c <_dtoa_r+0xa6c>
  40416a:	07ea      	lsls	r2, r5, #31
  40416c:	d509      	bpl.n	404182 <_dtoa_r+0x7d2>
  40416e:	4630      	mov	r0, r6
  404170:	4639      	mov	r1, r7
  404172:	e9d8 2300 	ldrd	r2, r3, [r8]
  404176:	f7fd fe51 	bl	401e1c <__aeabi_dmul>
  40417a:	f10a 0a01 	add.w	sl, sl, #1
  40417e:	4606      	mov	r6, r0
  404180:	460f      	mov	r7, r1
  404182:	106d      	asrs	r5, r5, #1
  404184:	f108 0808 	add.w	r8, r8, #8
  404188:	d1ef      	bne.n	40416a <_dtoa_r+0x7ba>
  40418a:	463b      	mov	r3, r7
  40418c:	4632      	mov	r2, r6
  40418e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404192:	f7fd ff6d 	bl	402070 <__aeabi_ddiv>
  404196:	4607      	mov	r7, r0
  404198:	4688      	mov	r8, r1
  40419a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40419c:	b143      	cbz	r3, 4041b0 <_dtoa_r+0x800>
  40419e:	2200      	movs	r2, #0
  4041a0:	4b9f      	ldr	r3, [pc, #636]	; (404420 <_dtoa_r+0xa70>)
  4041a2:	4638      	mov	r0, r7
  4041a4:	4641      	mov	r1, r8
  4041a6:	f001 ff6d 	bl	406084 <__aeabi_dcmplt>
  4041aa:	2800      	cmp	r0, #0
  4041ac:	f040 8286 	bne.w	4046bc <_dtoa_r+0xd0c>
  4041b0:	4650      	mov	r0, sl
  4041b2:	f7fd fdcd 	bl	401d50 <__aeabi_i2d>
  4041b6:	463a      	mov	r2, r7
  4041b8:	4643      	mov	r3, r8
  4041ba:	f7fd fe2f 	bl	401e1c <__aeabi_dmul>
  4041be:	4b99      	ldr	r3, [pc, #612]	; (404424 <_dtoa_r+0xa74>)
  4041c0:	2200      	movs	r2, #0
  4041c2:	f7fd fc79 	bl	401ab8 <__adddf3>
  4041c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041c8:	4605      	mov	r5, r0
  4041ca:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4041ce:	2b00      	cmp	r3, #0
  4041d0:	f000 813e 	beq.w	404450 <_dtoa_r+0xaa0>
  4041d4:	9b02      	ldr	r3, [sp, #8]
  4041d6:	9315      	str	r3, [sp, #84]	; 0x54
  4041d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041da:	9312      	str	r3, [sp, #72]	; 0x48
  4041dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4041de:	2b00      	cmp	r3, #0
  4041e0:	f000 81fa 	beq.w	4045d8 <_dtoa_r+0xc28>
  4041e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4041e6:	4b8c      	ldr	r3, [pc, #560]	; (404418 <_dtoa_r+0xa68>)
  4041e8:	498f      	ldr	r1, [pc, #572]	; (404428 <_dtoa_r+0xa78>)
  4041ea:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041ee:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4041f2:	2000      	movs	r0, #0
  4041f4:	f7fd ff3c 	bl	402070 <__aeabi_ddiv>
  4041f8:	462a      	mov	r2, r5
  4041fa:	4633      	mov	r3, r6
  4041fc:	f7fd fc5a 	bl	401ab4 <__aeabi_dsub>
  404200:	4682      	mov	sl, r0
  404202:	468b      	mov	fp, r1
  404204:	4638      	mov	r0, r7
  404206:	4641      	mov	r1, r8
  404208:	f7fe f81a 	bl	402240 <__aeabi_d2iz>
  40420c:	4605      	mov	r5, r0
  40420e:	f7fd fd9f 	bl	401d50 <__aeabi_i2d>
  404212:	4602      	mov	r2, r0
  404214:	460b      	mov	r3, r1
  404216:	4638      	mov	r0, r7
  404218:	4641      	mov	r1, r8
  40421a:	f7fd fc4b 	bl	401ab4 <__aeabi_dsub>
  40421e:	3530      	adds	r5, #48	; 0x30
  404220:	fa5f f885 	uxtb.w	r8, r5
  404224:	9d04      	ldr	r5, [sp, #16]
  404226:	4606      	mov	r6, r0
  404228:	460f      	mov	r7, r1
  40422a:	f885 8000 	strb.w	r8, [r5]
  40422e:	4602      	mov	r2, r0
  404230:	460b      	mov	r3, r1
  404232:	4650      	mov	r0, sl
  404234:	4659      	mov	r1, fp
  404236:	3501      	adds	r5, #1
  404238:	f001 ff42 	bl	4060c0 <__aeabi_dcmpgt>
  40423c:	2800      	cmp	r0, #0
  40423e:	d154      	bne.n	4042ea <_dtoa_r+0x93a>
  404240:	4632      	mov	r2, r6
  404242:	463b      	mov	r3, r7
  404244:	2000      	movs	r0, #0
  404246:	4976      	ldr	r1, [pc, #472]	; (404420 <_dtoa_r+0xa70>)
  404248:	f7fd fc34 	bl	401ab4 <__aeabi_dsub>
  40424c:	4602      	mov	r2, r0
  40424e:	460b      	mov	r3, r1
  404250:	4650      	mov	r0, sl
  404252:	4659      	mov	r1, fp
  404254:	f001 ff34 	bl	4060c0 <__aeabi_dcmpgt>
  404258:	2800      	cmp	r0, #0
  40425a:	f040 8270 	bne.w	40473e <_dtoa_r+0xd8e>
  40425e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404260:	2a01      	cmp	r2, #1
  404262:	f000 8111 	beq.w	404488 <_dtoa_r+0xad8>
  404266:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404268:	9a04      	ldr	r2, [sp, #16]
  40426a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40426e:	4413      	add	r3, r2
  404270:	4699      	mov	r9, r3
  404272:	e00d      	b.n	404290 <_dtoa_r+0x8e0>
  404274:	2000      	movs	r0, #0
  404276:	496a      	ldr	r1, [pc, #424]	; (404420 <_dtoa_r+0xa70>)
  404278:	f7fd fc1c 	bl	401ab4 <__aeabi_dsub>
  40427c:	4652      	mov	r2, sl
  40427e:	465b      	mov	r3, fp
  404280:	f001 ff00 	bl	406084 <__aeabi_dcmplt>
  404284:	2800      	cmp	r0, #0
  404286:	f040 8258 	bne.w	40473a <_dtoa_r+0xd8a>
  40428a:	454d      	cmp	r5, r9
  40428c:	f000 80fa 	beq.w	404484 <_dtoa_r+0xad4>
  404290:	4650      	mov	r0, sl
  404292:	4659      	mov	r1, fp
  404294:	2200      	movs	r2, #0
  404296:	4b65      	ldr	r3, [pc, #404]	; (40442c <_dtoa_r+0xa7c>)
  404298:	f7fd fdc0 	bl	401e1c <__aeabi_dmul>
  40429c:	2200      	movs	r2, #0
  40429e:	4b63      	ldr	r3, [pc, #396]	; (40442c <_dtoa_r+0xa7c>)
  4042a0:	4682      	mov	sl, r0
  4042a2:	468b      	mov	fp, r1
  4042a4:	4630      	mov	r0, r6
  4042a6:	4639      	mov	r1, r7
  4042a8:	f7fd fdb8 	bl	401e1c <__aeabi_dmul>
  4042ac:	460f      	mov	r7, r1
  4042ae:	4606      	mov	r6, r0
  4042b0:	f7fd ffc6 	bl	402240 <__aeabi_d2iz>
  4042b4:	4680      	mov	r8, r0
  4042b6:	f7fd fd4b 	bl	401d50 <__aeabi_i2d>
  4042ba:	4602      	mov	r2, r0
  4042bc:	460b      	mov	r3, r1
  4042be:	4630      	mov	r0, r6
  4042c0:	4639      	mov	r1, r7
  4042c2:	f7fd fbf7 	bl	401ab4 <__aeabi_dsub>
  4042c6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4042ca:	fa5f f888 	uxtb.w	r8, r8
  4042ce:	4652      	mov	r2, sl
  4042d0:	465b      	mov	r3, fp
  4042d2:	f805 8b01 	strb.w	r8, [r5], #1
  4042d6:	4606      	mov	r6, r0
  4042d8:	460f      	mov	r7, r1
  4042da:	f001 fed3 	bl	406084 <__aeabi_dcmplt>
  4042de:	4632      	mov	r2, r6
  4042e0:	463b      	mov	r3, r7
  4042e2:	2800      	cmp	r0, #0
  4042e4:	d0c6      	beq.n	404274 <_dtoa_r+0x8c4>
  4042e6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042ea:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4042ec:	9302      	str	r3, [sp, #8]
  4042ee:	e523      	b.n	403d38 <_dtoa_r+0x388>
  4042f0:	2300      	movs	r3, #0
  4042f2:	930b      	str	r3, [sp, #44]	; 0x2c
  4042f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4042f6:	2b00      	cmp	r3, #0
  4042f8:	f340 80dc 	ble.w	4044b4 <_dtoa_r+0xb04>
  4042fc:	461f      	mov	r7, r3
  4042fe:	461e      	mov	r6, r3
  404300:	930f      	str	r3, [sp, #60]	; 0x3c
  404302:	930a      	str	r3, [sp, #40]	; 0x28
  404304:	e6f6      	b.n	4040f4 <_dtoa_r+0x744>
  404306:	2301      	movs	r3, #1
  404308:	930b      	str	r3, [sp, #44]	; 0x2c
  40430a:	e7f3      	b.n	4042f4 <_dtoa_r+0x944>
  40430c:	f1ba 0f00 	cmp.w	sl, #0
  404310:	f47f ada8 	bne.w	403e64 <_dtoa_r+0x4b4>
  404314:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404318:	2b00      	cmp	r3, #0
  40431a:	f47f adba 	bne.w	403e92 <_dtoa_r+0x4e2>
  40431e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404322:	0d3f      	lsrs	r7, r7, #20
  404324:	053f      	lsls	r7, r7, #20
  404326:	2f00      	cmp	r7, #0
  404328:	f000 820d 	beq.w	404746 <_dtoa_r+0xd96>
  40432c:	9b08      	ldr	r3, [sp, #32]
  40432e:	3301      	adds	r3, #1
  404330:	9308      	str	r3, [sp, #32]
  404332:	9b06      	ldr	r3, [sp, #24]
  404334:	3301      	adds	r3, #1
  404336:	9306      	str	r3, [sp, #24]
  404338:	2301      	movs	r3, #1
  40433a:	930c      	str	r3, [sp, #48]	; 0x30
  40433c:	e5ab      	b.n	403e96 <_dtoa_r+0x4e6>
  40433e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404340:	2b00      	cmp	r3, #0
  404342:	f73f ac42 	bgt.w	403bca <_dtoa_r+0x21a>
  404346:	f040 8221 	bne.w	40478c <_dtoa_r+0xddc>
  40434a:	2200      	movs	r2, #0
  40434c:	4b38      	ldr	r3, [pc, #224]	; (404430 <_dtoa_r+0xa80>)
  40434e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404352:	f7fd fd63 	bl	401e1c <__aeabi_dmul>
  404356:	4652      	mov	r2, sl
  404358:	465b      	mov	r3, fp
  40435a:	f001 fea7 	bl	4060ac <__aeabi_dcmpge>
  40435e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  404362:	4646      	mov	r6, r8
  404364:	2800      	cmp	r0, #0
  404366:	d041      	beq.n	4043ec <_dtoa_r+0xa3c>
  404368:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40436a:	9d04      	ldr	r5, [sp, #16]
  40436c:	43db      	mvns	r3, r3
  40436e:	9302      	str	r3, [sp, #8]
  404370:	4641      	mov	r1, r8
  404372:	4620      	mov	r0, r4
  404374:	f000 fe40 	bl	404ff8 <_Bfree>
  404378:	2e00      	cmp	r6, #0
  40437a:	f43f acdd 	beq.w	403d38 <_dtoa_r+0x388>
  40437e:	e6a7      	b.n	4040d0 <_dtoa_r+0x720>
  404380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404382:	4649      	mov	r1, r9
  404384:	4620      	mov	r0, r4
  404386:	f000 ff6d 	bl	405264 <__pow5mult>
  40438a:	4681      	mov	r9, r0
  40438c:	e558      	b.n	403e40 <_dtoa_r+0x490>
  40438e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404390:	2a00      	cmp	r2, #0
  404392:	f000 8187 	beq.w	4046a4 <_dtoa_r+0xcf4>
  404396:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40439a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40439c:	9d08      	ldr	r5, [sp, #32]
  40439e:	e4f2      	b.n	403d86 <_dtoa_r+0x3d6>
  4043a0:	f1ba 0f00 	cmp.w	sl, #0
  4043a4:	f47f ad75 	bne.w	403e92 <_dtoa_r+0x4e2>
  4043a8:	e7b4      	b.n	404314 <_dtoa_r+0x964>
  4043aa:	f000 fe2f 	bl	40500c <__multadd>
  4043ae:	4647      	mov	r7, r8
  4043b0:	4606      	mov	r6, r0
  4043b2:	4683      	mov	fp, r0
  4043b4:	e5be      	b.n	403f34 <_dtoa_r+0x584>
  4043b6:	4601      	mov	r1, r0
  4043b8:	4620      	mov	r0, r4
  4043ba:	9306      	str	r3, [sp, #24]
  4043bc:	f000 fe1c 	bl	404ff8 <_Bfree>
  4043c0:	2201      	movs	r2, #1
  4043c2:	9b06      	ldr	r3, [sp, #24]
  4043c4:	e5e0      	b.n	403f88 <_dtoa_r+0x5d8>
  4043c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043c8:	2b02      	cmp	r3, #2
  4043ca:	f77f ad96 	ble.w	403efa <_dtoa_r+0x54a>
  4043ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043d0:	2b00      	cmp	r3, #0
  4043d2:	d1c9      	bne.n	404368 <_dtoa_r+0x9b8>
  4043d4:	4641      	mov	r1, r8
  4043d6:	2205      	movs	r2, #5
  4043d8:	4620      	mov	r0, r4
  4043da:	f000 fe17 	bl	40500c <__multadd>
  4043de:	4601      	mov	r1, r0
  4043e0:	4680      	mov	r8, r0
  4043e2:	4648      	mov	r0, r9
  4043e4:	f000 ffe0 	bl	4053a8 <__mcmp>
  4043e8:	2800      	cmp	r0, #0
  4043ea:	ddbd      	ble.n	404368 <_dtoa_r+0x9b8>
  4043ec:	9a02      	ldr	r2, [sp, #8]
  4043ee:	9904      	ldr	r1, [sp, #16]
  4043f0:	2331      	movs	r3, #49	; 0x31
  4043f2:	3201      	adds	r2, #1
  4043f4:	9202      	str	r2, [sp, #8]
  4043f6:	700b      	strb	r3, [r1, #0]
  4043f8:	1c4d      	adds	r5, r1, #1
  4043fa:	e7b9      	b.n	404370 <_dtoa_r+0x9c0>
  4043fc:	9a02      	ldr	r2, [sp, #8]
  4043fe:	3201      	adds	r2, #1
  404400:	9202      	str	r2, [sp, #8]
  404402:	9a04      	ldr	r2, [sp, #16]
  404404:	2331      	movs	r3, #49	; 0x31
  404406:	7013      	strb	r3, [r2, #0]
  404408:	e652      	b.n	4040b0 <_dtoa_r+0x700>
  40440a:	2301      	movs	r3, #1
  40440c:	930b      	str	r3, [sp, #44]	; 0x2c
  40440e:	e666      	b.n	4040de <_dtoa_r+0x72e>
  404410:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404414:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404416:	e48f      	b.n	403d38 <_dtoa_r+0x388>
  404418:	00406f18 	.word	0x00406f18
  40441c:	00406ef0 	.word	0x00406ef0
  404420:	3ff00000 	.word	0x3ff00000
  404424:	401c0000 	.word	0x401c0000
  404428:	3fe00000 	.word	0x3fe00000
  40442c:	40240000 	.word	0x40240000
  404430:	40140000 	.word	0x40140000
  404434:	4650      	mov	r0, sl
  404436:	f7fd fc8b 	bl	401d50 <__aeabi_i2d>
  40443a:	463a      	mov	r2, r7
  40443c:	4643      	mov	r3, r8
  40443e:	f7fd fced 	bl	401e1c <__aeabi_dmul>
  404442:	2200      	movs	r2, #0
  404444:	4bc1      	ldr	r3, [pc, #772]	; (40474c <_dtoa_r+0xd9c>)
  404446:	f7fd fb37 	bl	401ab8 <__adddf3>
  40444a:	4605      	mov	r5, r0
  40444c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404450:	4641      	mov	r1, r8
  404452:	2200      	movs	r2, #0
  404454:	4bbe      	ldr	r3, [pc, #760]	; (404750 <_dtoa_r+0xda0>)
  404456:	4638      	mov	r0, r7
  404458:	f7fd fb2c 	bl	401ab4 <__aeabi_dsub>
  40445c:	462a      	mov	r2, r5
  40445e:	4633      	mov	r3, r6
  404460:	4682      	mov	sl, r0
  404462:	468b      	mov	fp, r1
  404464:	f001 fe2c 	bl	4060c0 <__aeabi_dcmpgt>
  404468:	4680      	mov	r8, r0
  40446a:	2800      	cmp	r0, #0
  40446c:	f040 8110 	bne.w	404690 <_dtoa_r+0xce0>
  404470:	462a      	mov	r2, r5
  404472:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404476:	4650      	mov	r0, sl
  404478:	4659      	mov	r1, fp
  40447a:	f001 fe03 	bl	406084 <__aeabi_dcmplt>
  40447e:	b118      	cbz	r0, 404488 <_dtoa_r+0xad8>
  404480:	4646      	mov	r6, r8
  404482:	e771      	b.n	404368 <_dtoa_r+0x9b8>
  404484:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404488:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40448c:	f7ff bb8a 	b.w	403ba4 <_dtoa_r+0x1f4>
  404490:	9804      	ldr	r0, [sp, #16]
  404492:	f7ff babb 	b.w	403a0c <_dtoa_r+0x5c>
  404496:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404498:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40449a:	970c      	str	r7, [sp, #48]	; 0x30
  40449c:	1afb      	subs	r3, r7, r3
  40449e:	441a      	add	r2, r3
  4044a0:	920d      	str	r2, [sp, #52]	; 0x34
  4044a2:	2700      	movs	r7, #0
  4044a4:	e469      	b.n	403d7a <_dtoa_r+0x3ca>
  4044a6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  4044aa:	f04f 0a02 	mov.w	sl, #2
  4044ae:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  4044b2:	e657      	b.n	404164 <_dtoa_r+0x7b4>
  4044b4:	2100      	movs	r1, #0
  4044b6:	2301      	movs	r3, #1
  4044b8:	6461      	str	r1, [r4, #68]	; 0x44
  4044ba:	4620      	mov	r0, r4
  4044bc:	9325      	str	r3, [sp, #148]	; 0x94
  4044be:	f000 fd75 	bl	404fac <_Balloc>
  4044c2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4044c4:	9004      	str	r0, [sp, #16]
  4044c6:	6420      	str	r0, [r4, #64]	; 0x40
  4044c8:	930a      	str	r3, [sp, #40]	; 0x28
  4044ca:	930f      	str	r3, [sp, #60]	; 0x3c
  4044cc:	e629      	b.n	404122 <_dtoa_r+0x772>
  4044ce:	2a00      	cmp	r2, #0
  4044d0:	46d0      	mov	r8, sl
  4044d2:	f8cd b018 	str.w	fp, [sp, #24]
  4044d6:	469a      	mov	sl, r3
  4044d8:	dd11      	ble.n	4044fe <_dtoa_r+0xb4e>
  4044da:	4649      	mov	r1, r9
  4044dc:	2201      	movs	r2, #1
  4044de:	4620      	mov	r0, r4
  4044e0:	f000 ff10 	bl	405304 <__lshift>
  4044e4:	4641      	mov	r1, r8
  4044e6:	4681      	mov	r9, r0
  4044e8:	f000 ff5e 	bl	4053a8 <__mcmp>
  4044ec:	2800      	cmp	r0, #0
  4044ee:	f340 8146 	ble.w	40477e <_dtoa_r+0xdce>
  4044f2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4044f6:	f000 8106 	beq.w	404706 <_dtoa_r+0xd56>
  4044fa:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4044fe:	46b3      	mov	fp, r6
  404500:	f887 a000 	strb.w	sl, [r7]
  404504:	1c7d      	adds	r5, r7, #1
  404506:	9e06      	ldr	r6, [sp, #24]
  404508:	e5d2      	b.n	4040b0 <_dtoa_r+0x700>
  40450a:	d104      	bne.n	404516 <_dtoa_r+0xb66>
  40450c:	f01a 0f01 	tst.w	sl, #1
  404510:	d001      	beq.n	404516 <_dtoa_r+0xb66>
  404512:	e5bd      	b.n	404090 <_dtoa_r+0x6e0>
  404514:	4615      	mov	r5, r2
  404516:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40451a:	2b30      	cmp	r3, #48	; 0x30
  40451c:	f105 32ff 	add.w	r2, r5, #4294967295
  404520:	d0f8      	beq.n	404514 <_dtoa_r+0xb64>
  404522:	e5c5      	b.n	4040b0 <_dtoa_r+0x700>
  404524:	9904      	ldr	r1, [sp, #16]
  404526:	2230      	movs	r2, #48	; 0x30
  404528:	700a      	strb	r2, [r1, #0]
  40452a:	9a02      	ldr	r2, [sp, #8]
  40452c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404530:	3201      	adds	r2, #1
  404532:	9202      	str	r2, [sp, #8]
  404534:	f7ff bbfc 	b.w	403d30 <_dtoa_r+0x380>
  404538:	f000 80bb 	beq.w	4046b2 <_dtoa_r+0xd02>
  40453c:	9b02      	ldr	r3, [sp, #8]
  40453e:	425d      	negs	r5, r3
  404540:	4b84      	ldr	r3, [pc, #528]	; (404754 <_dtoa_r+0xda4>)
  404542:	f005 020f 	and.w	r2, r5, #15
  404546:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40454a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40454e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404552:	f7fd fc63 	bl	401e1c <__aeabi_dmul>
  404556:	112d      	asrs	r5, r5, #4
  404558:	4607      	mov	r7, r0
  40455a:	4688      	mov	r8, r1
  40455c:	f000 812c 	beq.w	4047b8 <_dtoa_r+0xe08>
  404560:	4e7d      	ldr	r6, [pc, #500]	; (404758 <_dtoa_r+0xda8>)
  404562:	f04f 0a02 	mov.w	sl, #2
  404566:	07eb      	lsls	r3, r5, #31
  404568:	d509      	bpl.n	40457e <_dtoa_r+0xbce>
  40456a:	4638      	mov	r0, r7
  40456c:	4641      	mov	r1, r8
  40456e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404572:	f7fd fc53 	bl	401e1c <__aeabi_dmul>
  404576:	f10a 0a01 	add.w	sl, sl, #1
  40457a:	4607      	mov	r7, r0
  40457c:	4688      	mov	r8, r1
  40457e:	106d      	asrs	r5, r5, #1
  404580:	f106 0608 	add.w	r6, r6, #8
  404584:	d1ef      	bne.n	404566 <_dtoa_r+0xbb6>
  404586:	e608      	b.n	40419a <_dtoa_r+0x7ea>
  404588:	6871      	ldr	r1, [r6, #4]
  40458a:	4620      	mov	r0, r4
  40458c:	f000 fd0e 	bl	404fac <_Balloc>
  404590:	6933      	ldr	r3, [r6, #16]
  404592:	3302      	adds	r3, #2
  404594:	009a      	lsls	r2, r3, #2
  404596:	4605      	mov	r5, r0
  404598:	f106 010c 	add.w	r1, r6, #12
  40459c:	300c      	adds	r0, #12
  40459e:	f000 fc5f 	bl	404e60 <memcpy>
  4045a2:	4629      	mov	r1, r5
  4045a4:	2201      	movs	r2, #1
  4045a6:	4620      	mov	r0, r4
  4045a8:	f000 feac 	bl	405304 <__lshift>
  4045ac:	9006      	str	r0, [sp, #24]
  4045ae:	e4b5      	b.n	403f1c <_dtoa_r+0x56c>
  4045b0:	2b39      	cmp	r3, #57	; 0x39
  4045b2:	f8cd b018 	str.w	fp, [sp, #24]
  4045b6:	46d0      	mov	r8, sl
  4045b8:	f000 80a5 	beq.w	404706 <_dtoa_r+0xd56>
  4045bc:	f103 0a01 	add.w	sl, r3, #1
  4045c0:	46b3      	mov	fp, r6
  4045c2:	f887 a000 	strb.w	sl, [r7]
  4045c6:	1c7d      	adds	r5, r7, #1
  4045c8:	9e06      	ldr	r6, [sp, #24]
  4045ca:	e571      	b.n	4040b0 <_dtoa_r+0x700>
  4045cc:	465a      	mov	r2, fp
  4045ce:	46d0      	mov	r8, sl
  4045d0:	46b3      	mov	fp, r6
  4045d2:	469a      	mov	sl, r3
  4045d4:	4616      	mov	r6, r2
  4045d6:	e54f      	b.n	404078 <_dtoa_r+0x6c8>
  4045d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045da:	495e      	ldr	r1, [pc, #376]	; (404754 <_dtoa_r+0xda4>)
  4045dc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4045e0:	462a      	mov	r2, r5
  4045e2:	4633      	mov	r3, r6
  4045e4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4045e8:	f7fd fc18 	bl	401e1c <__aeabi_dmul>
  4045ec:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4045f0:	4638      	mov	r0, r7
  4045f2:	4641      	mov	r1, r8
  4045f4:	f7fd fe24 	bl	402240 <__aeabi_d2iz>
  4045f8:	4605      	mov	r5, r0
  4045fa:	f7fd fba9 	bl	401d50 <__aeabi_i2d>
  4045fe:	460b      	mov	r3, r1
  404600:	4602      	mov	r2, r0
  404602:	4641      	mov	r1, r8
  404604:	4638      	mov	r0, r7
  404606:	f7fd fa55 	bl	401ab4 <__aeabi_dsub>
  40460a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40460c:	460f      	mov	r7, r1
  40460e:	9904      	ldr	r1, [sp, #16]
  404610:	3530      	adds	r5, #48	; 0x30
  404612:	2b01      	cmp	r3, #1
  404614:	700d      	strb	r5, [r1, #0]
  404616:	4606      	mov	r6, r0
  404618:	f101 0501 	add.w	r5, r1, #1
  40461c:	d026      	beq.n	40466c <_dtoa_r+0xcbc>
  40461e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404620:	9a04      	ldr	r2, [sp, #16]
  404622:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404760 <_dtoa_r+0xdb0>
  404626:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40462a:	4413      	add	r3, r2
  40462c:	f04f 0a00 	mov.w	sl, #0
  404630:	4699      	mov	r9, r3
  404632:	4652      	mov	r2, sl
  404634:	465b      	mov	r3, fp
  404636:	4630      	mov	r0, r6
  404638:	4639      	mov	r1, r7
  40463a:	f7fd fbef 	bl	401e1c <__aeabi_dmul>
  40463e:	460f      	mov	r7, r1
  404640:	4606      	mov	r6, r0
  404642:	f7fd fdfd 	bl	402240 <__aeabi_d2iz>
  404646:	4680      	mov	r8, r0
  404648:	f7fd fb82 	bl	401d50 <__aeabi_i2d>
  40464c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404650:	4602      	mov	r2, r0
  404652:	460b      	mov	r3, r1
  404654:	4630      	mov	r0, r6
  404656:	4639      	mov	r1, r7
  404658:	f7fd fa2c 	bl	401ab4 <__aeabi_dsub>
  40465c:	f805 8b01 	strb.w	r8, [r5], #1
  404660:	454d      	cmp	r5, r9
  404662:	4606      	mov	r6, r0
  404664:	460f      	mov	r7, r1
  404666:	d1e4      	bne.n	404632 <_dtoa_r+0xc82>
  404668:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40466c:	4b3b      	ldr	r3, [pc, #236]	; (40475c <_dtoa_r+0xdac>)
  40466e:	2200      	movs	r2, #0
  404670:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404674:	f7fd fa20 	bl	401ab8 <__adddf3>
  404678:	4632      	mov	r2, r6
  40467a:	463b      	mov	r3, r7
  40467c:	f001 fd02 	bl	406084 <__aeabi_dcmplt>
  404680:	2800      	cmp	r0, #0
  404682:	d046      	beq.n	404712 <_dtoa_r+0xd62>
  404684:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404686:	9302      	str	r3, [sp, #8]
  404688:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40468c:	f7ff bb43 	b.w	403d16 <_dtoa_r+0x366>
  404690:	f04f 0800 	mov.w	r8, #0
  404694:	4646      	mov	r6, r8
  404696:	e6a9      	b.n	4043ec <_dtoa_r+0xa3c>
  404698:	9b08      	ldr	r3, [sp, #32]
  40469a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40469c:	1a9d      	subs	r5, r3, r2
  40469e:	2300      	movs	r3, #0
  4046a0:	f7ff bb71 	b.w	403d86 <_dtoa_r+0x3d6>
  4046a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4046a6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4046a8:	9d08      	ldr	r5, [sp, #32]
  4046aa:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4046ae:	f7ff bb6a 	b.w	403d86 <_dtoa_r+0x3d6>
  4046b2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  4046b6:	f04f 0a02 	mov.w	sl, #2
  4046ba:	e56e      	b.n	40419a <_dtoa_r+0x7ea>
  4046bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4046be:	2b00      	cmp	r3, #0
  4046c0:	f43f aeb8 	beq.w	404434 <_dtoa_r+0xa84>
  4046c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046c6:	2b00      	cmp	r3, #0
  4046c8:	f77f aede 	ble.w	404488 <_dtoa_r+0xad8>
  4046cc:	2200      	movs	r2, #0
  4046ce:	4b24      	ldr	r3, [pc, #144]	; (404760 <_dtoa_r+0xdb0>)
  4046d0:	4638      	mov	r0, r7
  4046d2:	4641      	mov	r1, r8
  4046d4:	f7fd fba2 	bl	401e1c <__aeabi_dmul>
  4046d8:	4607      	mov	r7, r0
  4046da:	4688      	mov	r8, r1
  4046dc:	f10a 0001 	add.w	r0, sl, #1
  4046e0:	f7fd fb36 	bl	401d50 <__aeabi_i2d>
  4046e4:	463a      	mov	r2, r7
  4046e6:	4643      	mov	r3, r8
  4046e8:	f7fd fb98 	bl	401e1c <__aeabi_dmul>
  4046ec:	2200      	movs	r2, #0
  4046ee:	4b17      	ldr	r3, [pc, #92]	; (40474c <_dtoa_r+0xd9c>)
  4046f0:	f7fd f9e2 	bl	401ab8 <__adddf3>
  4046f4:	9a02      	ldr	r2, [sp, #8]
  4046f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046f8:	9312      	str	r3, [sp, #72]	; 0x48
  4046fa:	3a01      	subs	r2, #1
  4046fc:	4605      	mov	r5, r0
  4046fe:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404702:	9215      	str	r2, [sp, #84]	; 0x54
  404704:	e56a      	b.n	4041dc <_dtoa_r+0x82c>
  404706:	2239      	movs	r2, #57	; 0x39
  404708:	46b3      	mov	fp, r6
  40470a:	703a      	strb	r2, [r7, #0]
  40470c:	9e06      	ldr	r6, [sp, #24]
  40470e:	1c7d      	adds	r5, r7, #1
  404710:	e4c0      	b.n	404094 <_dtoa_r+0x6e4>
  404712:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404716:	2000      	movs	r0, #0
  404718:	4910      	ldr	r1, [pc, #64]	; (40475c <_dtoa_r+0xdac>)
  40471a:	f7fd f9cb 	bl	401ab4 <__aeabi_dsub>
  40471e:	4632      	mov	r2, r6
  404720:	463b      	mov	r3, r7
  404722:	f001 fccd 	bl	4060c0 <__aeabi_dcmpgt>
  404726:	b908      	cbnz	r0, 40472c <_dtoa_r+0xd7c>
  404728:	e6ae      	b.n	404488 <_dtoa_r+0xad8>
  40472a:	4615      	mov	r5, r2
  40472c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404730:	2b30      	cmp	r3, #48	; 0x30
  404732:	f105 32ff 	add.w	r2, r5, #4294967295
  404736:	d0f8      	beq.n	40472a <_dtoa_r+0xd7a>
  404738:	e5d7      	b.n	4042ea <_dtoa_r+0x93a>
  40473a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40473e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404740:	9302      	str	r3, [sp, #8]
  404742:	f7ff bae8 	b.w	403d16 <_dtoa_r+0x366>
  404746:	970c      	str	r7, [sp, #48]	; 0x30
  404748:	f7ff bba5 	b.w	403e96 <_dtoa_r+0x4e6>
  40474c:	401c0000 	.word	0x401c0000
  404750:	40140000 	.word	0x40140000
  404754:	00406f18 	.word	0x00406f18
  404758:	00406ef0 	.word	0x00406ef0
  40475c:	3fe00000 	.word	0x3fe00000
  404760:	40240000 	.word	0x40240000
  404764:	2b39      	cmp	r3, #57	; 0x39
  404766:	f8cd b018 	str.w	fp, [sp, #24]
  40476a:	46d0      	mov	r8, sl
  40476c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404770:	469a      	mov	sl, r3
  404772:	d0c8      	beq.n	404706 <_dtoa_r+0xd56>
  404774:	f1bb 0f00 	cmp.w	fp, #0
  404778:	f73f aebf 	bgt.w	4044fa <_dtoa_r+0xb4a>
  40477c:	e6bf      	b.n	4044fe <_dtoa_r+0xb4e>
  40477e:	f47f aebe 	bne.w	4044fe <_dtoa_r+0xb4e>
  404782:	f01a 0f01 	tst.w	sl, #1
  404786:	f43f aeba 	beq.w	4044fe <_dtoa_r+0xb4e>
  40478a:	e6b2      	b.n	4044f2 <_dtoa_r+0xb42>
  40478c:	f04f 0800 	mov.w	r8, #0
  404790:	4646      	mov	r6, r8
  404792:	e5e9      	b.n	404368 <_dtoa_r+0x9b8>
  404794:	4631      	mov	r1, r6
  404796:	2300      	movs	r3, #0
  404798:	220a      	movs	r2, #10
  40479a:	4620      	mov	r0, r4
  40479c:	f000 fc36 	bl	40500c <__multadd>
  4047a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047a2:	2b00      	cmp	r3, #0
  4047a4:	4606      	mov	r6, r0
  4047a6:	dd0a      	ble.n	4047be <_dtoa_r+0xe0e>
  4047a8:	930a      	str	r3, [sp, #40]	; 0x28
  4047aa:	f7ff bbaa 	b.w	403f02 <_dtoa_r+0x552>
  4047ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4047b0:	2b02      	cmp	r3, #2
  4047b2:	dc23      	bgt.n	4047fc <_dtoa_r+0xe4c>
  4047b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047b6:	e43b      	b.n	404030 <_dtoa_r+0x680>
  4047b8:	f04f 0a02 	mov.w	sl, #2
  4047bc:	e4ed      	b.n	40419a <_dtoa_r+0x7ea>
  4047be:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4047c0:	2b02      	cmp	r3, #2
  4047c2:	dc1b      	bgt.n	4047fc <_dtoa_r+0xe4c>
  4047c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047c6:	e7ef      	b.n	4047a8 <_dtoa_r+0xdf8>
  4047c8:	2500      	movs	r5, #0
  4047ca:	6465      	str	r5, [r4, #68]	; 0x44
  4047cc:	4629      	mov	r1, r5
  4047ce:	4620      	mov	r0, r4
  4047d0:	f000 fbec 	bl	404fac <_Balloc>
  4047d4:	f04f 33ff 	mov.w	r3, #4294967295
  4047d8:	930a      	str	r3, [sp, #40]	; 0x28
  4047da:	930f      	str	r3, [sp, #60]	; 0x3c
  4047dc:	2301      	movs	r3, #1
  4047de:	9004      	str	r0, [sp, #16]
  4047e0:	9525      	str	r5, [sp, #148]	; 0x94
  4047e2:	6420      	str	r0, [r4, #64]	; 0x40
  4047e4:	930b      	str	r3, [sp, #44]	; 0x2c
  4047e6:	f7ff b9dd 	b.w	403ba4 <_dtoa_r+0x1f4>
  4047ea:	2501      	movs	r5, #1
  4047ec:	f7ff b9a5 	b.w	403b3a <_dtoa_r+0x18a>
  4047f0:	f43f ab69 	beq.w	403ec6 <_dtoa_r+0x516>
  4047f4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4047f8:	f7ff bbf9 	b.w	403fee <_dtoa_r+0x63e>
  4047fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047fe:	930a      	str	r3, [sp, #40]	; 0x28
  404800:	e5e5      	b.n	4043ce <_dtoa_r+0xa1e>
  404802:	bf00      	nop

00404804 <__libc_fini_array>:
  404804:	b538      	push	{r3, r4, r5, lr}
  404806:	4c0a      	ldr	r4, [pc, #40]	; (404830 <__libc_fini_array+0x2c>)
  404808:	4d0a      	ldr	r5, [pc, #40]	; (404834 <__libc_fini_array+0x30>)
  40480a:	1b64      	subs	r4, r4, r5
  40480c:	10a4      	asrs	r4, r4, #2
  40480e:	d00a      	beq.n	404826 <__libc_fini_array+0x22>
  404810:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  404814:	3b01      	subs	r3, #1
  404816:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40481a:	3c01      	subs	r4, #1
  40481c:	f855 3904 	ldr.w	r3, [r5], #-4
  404820:	4798      	blx	r3
  404822:	2c00      	cmp	r4, #0
  404824:	d1f9      	bne.n	40481a <__libc_fini_array+0x16>
  404826:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40482a:	f002 bc73 	b.w	407114 <_fini>
  40482e:	bf00      	nop
  404830:	00407124 	.word	0x00407124
  404834:	00407120 	.word	0x00407120

00404838 <_localeconv_r>:
  404838:	4a04      	ldr	r2, [pc, #16]	; (40484c <_localeconv_r+0x14>)
  40483a:	4b05      	ldr	r3, [pc, #20]	; (404850 <_localeconv_r+0x18>)
  40483c:	6812      	ldr	r2, [r2, #0]
  40483e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404840:	2800      	cmp	r0, #0
  404842:	bf08      	it	eq
  404844:	4618      	moveq	r0, r3
  404846:	30f0      	adds	r0, #240	; 0xf0
  404848:	4770      	bx	lr
  40484a:	bf00      	nop
  40484c:	20400024 	.word	0x20400024
  404850:	20400864 	.word	0x20400864

00404854 <__retarget_lock_acquire_recursive>:
  404854:	4770      	bx	lr
  404856:	bf00      	nop

00404858 <__retarget_lock_release_recursive>:
  404858:	4770      	bx	lr
  40485a:	bf00      	nop

0040485c <_malloc_r>:
  40485c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404860:	f101 060b 	add.w	r6, r1, #11
  404864:	2e16      	cmp	r6, #22
  404866:	b083      	sub	sp, #12
  404868:	4605      	mov	r5, r0
  40486a:	f240 809e 	bls.w	4049aa <_malloc_r+0x14e>
  40486e:	f036 0607 	bics.w	r6, r6, #7
  404872:	f100 80bd 	bmi.w	4049f0 <_malloc_r+0x194>
  404876:	42b1      	cmp	r1, r6
  404878:	f200 80ba 	bhi.w	4049f0 <_malloc_r+0x194>
  40487c:	f000 fb8a 	bl	404f94 <__malloc_lock>
  404880:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404884:	f0c0 8293 	bcc.w	404dae <_malloc_r+0x552>
  404888:	0a73      	lsrs	r3, r6, #9
  40488a:	f000 80b8 	beq.w	4049fe <_malloc_r+0x1a2>
  40488e:	2b04      	cmp	r3, #4
  404890:	f200 8179 	bhi.w	404b86 <_malloc_r+0x32a>
  404894:	09b3      	lsrs	r3, r6, #6
  404896:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40489a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40489e:	00c3      	lsls	r3, r0, #3
  4048a0:	4fbf      	ldr	r7, [pc, #764]	; (404ba0 <_malloc_r+0x344>)
  4048a2:	443b      	add	r3, r7
  4048a4:	f1a3 0108 	sub.w	r1, r3, #8
  4048a8:	685c      	ldr	r4, [r3, #4]
  4048aa:	42a1      	cmp	r1, r4
  4048ac:	d106      	bne.n	4048bc <_malloc_r+0x60>
  4048ae:	e00c      	b.n	4048ca <_malloc_r+0x6e>
  4048b0:	2a00      	cmp	r2, #0
  4048b2:	f280 80aa 	bge.w	404a0a <_malloc_r+0x1ae>
  4048b6:	68e4      	ldr	r4, [r4, #12]
  4048b8:	42a1      	cmp	r1, r4
  4048ba:	d006      	beq.n	4048ca <_malloc_r+0x6e>
  4048bc:	6863      	ldr	r3, [r4, #4]
  4048be:	f023 0303 	bic.w	r3, r3, #3
  4048c2:	1b9a      	subs	r2, r3, r6
  4048c4:	2a0f      	cmp	r2, #15
  4048c6:	ddf3      	ble.n	4048b0 <_malloc_r+0x54>
  4048c8:	4670      	mov	r0, lr
  4048ca:	693c      	ldr	r4, [r7, #16]
  4048cc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404bb4 <_malloc_r+0x358>
  4048d0:	4574      	cmp	r4, lr
  4048d2:	f000 81ab 	beq.w	404c2c <_malloc_r+0x3d0>
  4048d6:	6863      	ldr	r3, [r4, #4]
  4048d8:	f023 0303 	bic.w	r3, r3, #3
  4048dc:	1b9a      	subs	r2, r3, r6
  4048de:	2a0f      	cmp	r2, #15
  4048e0:	f300 8190 	bgt.w	404c04 <_malloc_r+0x3a8>
  4048e4:	2a00      	cmp	r2, #0
  4048e6:	f8c7 e014 	str.w	lr, [r7, #20]
  4048ea:	f8c7 e010 	str.w	lr, [r7, #16]
  4048ee:	f280 809d 	bge.w	404a2c <_malloc_r+0x1d0>
  4048f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4048f6:	f080 8161 	bcs.w	404bbc <_malloc_r+0x360>
  4048fa:	08db      	lsrs	r3, r3, #3
  4048fc:	f103 0c01 	add.w	ip, r3, #1
  404900:	1099      	asrs	r1, r3, #2
  404902:	687a      	ldr	r2, [r7, #4]
  404904:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404908:	f8c4 8008 	str.w	r8, [r4, #8]
  40490c:	2301      	movs	r3, #1
  40490e:	408b      	lsls	r3, r1
  404910:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404914:	4313      	orrs	r3, r2
  404916:	3908      	subs	r1, #8
  404918:	60e1      	str	r1, [r4, #12]
  40491a:	607b      	str	r3, [r7, #4]
  40491c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404920:	f8c8 400c 	str.w	r4, [r8, #12]
  404924:	1082      	asrs	r2, r0, #2
  404926:	2401      	movs	r4, #1
  404928:	4094      	lsls	r4, r2
  40492a:	429c      	cmp	r4, r3
  40492c:	f200 808b 	bhi.w	404a46 <_malloc_r+0x1ea>
  404930:	421c      	tst	r4, r3
  404932:	d106      	bne.n	404942 <_malloc_r+0xe6>
  404934:	f020 0003 	bic.w	r0, r0, #3
  404938:	0064      	lsls	r4, r4, #1
  40493a:	421c      	tst	r4, r3
  40493c:	f100 0004 	add.w	r0, r0, #4
  404940:	d0fa      	beq.n	404938 <_malloc_r+0xdc>
  404942:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404946:	46cc      	mov	ip, r9
  404948:	4680      	mov	r8, r0
  40494a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40494e:	459c      	cmp	ip, r3
  404950:	d107      	bne.n	404962 <_malloc_r+0x106>
  404952:	e16d      	b.n	404c30 <_malloc_r+0x3d4>
  404954:	2a00      	cmp	r2, #0
  404956:	f280 817b 	bge.w	404c50 <_malloc_r+0x3f4>
  40495a:	68db      	ldr	r3, [r3, #12]
  40495c:	459c      	cmp	ip, r3
  40495e:	f000 8167 	beq.w	404c30 <_malloc_r+0x3d4>
  404962:	6859      	ldr	r1, [r3, #4]
  404964:	f021 0103 	bic.w	r1, r1, #3
  404968:	1b8a      	subs	r2, r1, r6
  40496a:	2a0f      	cmp	r2, #15
  40496c:	ddf2      	ble.n	404954 <_malloc_r+0xf8>
  40496e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404972:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404976:	9300      	str	r3, [sp, #0]
  404978:	199c      	adds	r4, r3, r6
  40497a:	4628      	mov	r0, r5
  40497c:	f046 0601 	orr.w	r6, r6, #1
  404980:	f042 0501 	orr.w	r5, r2, #1
  404984:	605e      	str	r6, [r3, #4]
  404986:	f8c8 c00c 	str.w	ip, [r8, #12]
  40498a:	f8cc 8008 	str.w	r8, [ip, #8]
  40498e:	617c      	str	r4, [r7, #20]
  404990:	613c      	str	r4, [r7, #16]
  404992:	f8c4 e00c 	str.w	lr, [r4, #12]
  404996:	f8c4 e008 	str.w	lr, [r4, #8]
  40499a:	6065      	str	r5, [r4, #4]
  40499c:	505a      	str	r2, [r3, r1]
  40499e:	f000 faff 	bl	404fa0 <__malloc_unlock>
  4049a2:	9b00      	ldr	r3, [sp, #0]
  4049a4:	f103 0408 	add.w	r4, r3, #8
  4049a8:	e01e      	b.n	4049e8 <_malloc_r+0x18c>
  4049aa:	2910      	cmp	r1, #16
  4049ac:	d820      	bhi.n	4049f0 <_malloc_r+0x194>
  4049ae:	f000 faf1 	bl	404f94 <__malloc_lock>
  4049b2:	2610      	movs	r6, #16
  4049b4:	2318      	movs	r3, #24
  4049b6:	2002      	movs	r0, #2
  4049b8:	4f79      	ldr	r7, [pc, #484]	; (404ba0 <_malloc_r+0x344>)
  4049ba:	443b      	add	r3, r7
  4049bc:	f1a3 0208 	sub.w	r2, r3, #8
  4049c0:	685c      	ldr	r4, [r3, #4]
  4049c2:	4294      	cmp	r4, r2
  4049c4:	f000 813d 	beq.w	404c42 <_malloc_r+0x3e6>
  4049c8:	6863      	ldr	r3, [r4, #4]
  4049ca:	68e1      	ldr	r1, [r4, #12]
  4049cc:	68a6      	ldr	r6, [r4, #8]
  4049ce:	f023 0303 	bic.w	r3, r3, #3
  4049d2:	4423      	add	r3, r4
  4049d4:	4628      	mov	r0, r5
  4049d6:	685a      	ldr	r2, [r3, #4]
  4049d8:	60f1      	str	r1, [r6, #12]
  4049da:	f042 0201 	orr.w	r2, r2, #1
  4049de:	608e      	str	r6, [r1, #8]
  4049e0:	605a      	str	r2, [r3, #4]
  4049e2:	f000 fadd 	bl	404fa0 <__malloc_unlock>
  4049e6:	3408      	adds	r4, #8
  4049e8:	4620      	mov	r0, r4
  4049ea:	b003      	add	sp, #12
  4049ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049f0:	2400      	movs	r4, #0
  4049f2:	230c      	movs	r3, #12
  4049f4:	4620      	mov	r0, r4
  4049f6:	602b      	str	r3, [r5, #0]
  4049f8:	b003      	add	sp, #12
  4049fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049fe:	2040      	movs	r0, #64	; 0x40
  404a00:	f44f 7300 	mov.w	r3, #512	; 0x200
  404a04:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404a08:	e74a      	b.n	4048a0 <_malloc_r+0x44>
  404a0a:	4423      	add	r3, r4
  404a0c:	68e1      	ldr	r1, [r4, #12]
  404a0e:	685a      	ldr	r2, [r3, #4]
  404a10:	68a6      	ldr	r6, [r4, #8]
  404a12:	f042 0201 	orr.w	r2, r2, #1
  404a16:	60f1      	str	r1, [r6, #12]
  404a18:	4628      	mov	r0, r5
  404a1a:	608e      	str	r6, [r1, #8]
  404a1c:	605a      	str	r2, [r3, #4]
  404a1e:	f000 fabf 	bl	404fa0 <__malloc_unlock>
  404a22:	3408      	adds	r4, #8
  404a24:	4620      	mov	r0, r4
  404a26:	b003      	add	sp, #12
  404a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a2c:	4423      	add	r3, r4
  404a2e:	4628      	mov	r0, r5
  404a30:	685a      	ldr	r2, [r3, #4]
  404a32:	f042 0201 	orr.w	r2, r2, #1
  404a36:	605a      	str	r2, [r3, #4]
  404a38:	f000 fab2 	bl	404fa0 <__malloc_unlock>
  404a3c:	3408      	adds	r4, #8
  404a3e:	4620      	mov	r0, r4
  404a40:	b003      	add	sp, #12
  404a42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a46:	68bc      	ldr	r4, [r7, #8]
  404a48:	6863      	ldr	r3, [r4, #4]
  404a4a:	f023 0803 	bic.w	r8, r3, #3
  404a4e:	45b0      	cmp	r8, r6
  404a50:	d304      	bcc.n	404a5c <_malloc_r+0x200>
  404a52:	eba8 0306 	sub.w	r3, r8, r6
  404a56:	2b0f      	cmp	r3, #15
  404a58:	f300 8085 	bgt.w	404b66 <_malloc_r+0x30a>
  404a5c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404bb8 <_malloc_r+0x35c>
  404a60:	4b50      	ldr	r3, [pc, #320]	; (404ba4 <_malloc_r+0x348>)
  404a62:	f8d9 2000 	ldr.w	r2, [r9]
  404a66:	681b      	ldr	r3, [r3, #0]
  404a68:	3201      	adds	r2, #1
  404a6a:	4433      	add	r3, r6
  404a6c:	eb04 0a08 	add.w	sl, r4, r8
  404a70:	f000 8155 	beq.w	404d1e <_malloc_r+0x4c2>
  404a74:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404a78:	330f      	adds	r3, #15
  404a7a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404a7e:	f02b 0b0f 	bic.w	fp, fp, #15
  404a82:	4659      	mov	r1, fp
  404a84:	4628      	mov	r0, r5
  404a86:	f000 fd8b 	bl	4055a0 <_sbrk_r>
  404a8a:	1c41      	adds	r1, r0, #1
  404a8c:	4602      	mov	r2, r0
  404a8e:	f000 80fc 	beq.w	404c8a <_malloc_r+0x42e>
  404a92:	4582      	cmp	sl, r0
  404a94:	f200 80f7 	bhi.w	404c86 <_malloc_r+0x42a>
  404a98:	4b43      	ldr	r3, [pc, #268]	; (404ba8 <_malloc_r+0x34c>)
  404a9a:	6819      	ldr	r1, [r3, #0]
  404a9c:	4459      	add	r1, fp
  404a9e:	6019      	str	r1, [r3, #0]
  404aa0:	f000 814d 	beq.w	404d3e <_malloc_r+0x4e2>
  404aa4:	f8d9 0000 	ldr.w	r0, [r9]
  404aa8:	3001      	adds	r0, #1
  404aaa:	bf1b      	ittet	ne
  404aac:	eba2 0a0a 	subne.w	sl, r2, sl
  404ab0:	4451      	addne	r1, sl
  404ab2:	f8c9 2000 	streq.w	r2, [r9]
  404ab6:	6019      	strne	r1, [r3, #0]
  404ab8:	f012 0107 	ands.w	r1, r2, #7
  404abc:	f000 8115 	beq.w	404cea <_malloc_r+0x48e>
  404ac0:	f1c1 0008 	rsb	r0, r1, #8
  404ac4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404ac8:	4402      	add	r2, r0
  404aca:	3108      	adds	r1, #8
  404acc:	eb02 090b 	add.w	r9, r2, fp
  404ad0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404ad4:	eba1 0909 	sub.w	r9, r1, r9
  404ad8:	4649      	mov	r1, r9
  404ada:	4628      	mov	r0, r5
  404adc:	9301      	str	r3, [sp, #4]
  404ade:	9200      	str	r2, [sp, #0]
  404ae0:	f000 fd5e 	bl	4055a0 <_sbrk_r>
  404ae4:	1c43      	adds	r3, r0, #1
  404ae6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404aea:	f000 8143 	beq.w	404d74 <_malloc_r+0x518>
  404aee:	1a80      	subs	r0, r0, r2
  404af0:	4448      	add	r0, r9
  404af2:	f040 0001 	orr.w	r0, r0, #1
  404af6:	6819      	ldr	r1, [r3, #0]
  404af8:	60ba      	str	r2, [r7, #8]
  404afa:	4449      	add	r1, r9
  404afc:	42bc      	cmp	r4, r7
  404afe:	6050      	str	r0, [r2, #4]
  404b00:	6019      	str	r1, [r3, #0]
  404b02:	d017      	beq.n	404b34 <_malloc_r+0x2d8>
  404b04:	f1b8 0f0f 	cmp.w	r8, #15
  404b08:	f240 80fb 	bls.w	404d02 <_malloc_r+0x4a6>
  404b0c:	6860      	ldr	r0, [r4, #4]
  404b0e:	f1a8 020c 	sub.w	r2, r8, #12
  404b12:	f022 0207 	bic.w	r2, r2, #7
  404b16:	eb04 0e02 	add.w	lr, r4, r2
  404b1a:	f000 0001 	and.w	r0, r0, #1
  404b1e:	f04f 0c05 	mov.w	ip, #5
  404b22:	4310      	orrs	r0, r2
  404b24:	2a0f      	cmp	r2, #15
  404b26:	6060      	str	r0, [r4, #4]
  404b28:	f8ce c004 	str.w	ip, [lr, #4]
  404b2c:	f8ce c008 	str.w	ip, [lr, #8]
  404b30:	f200 8117 	bhi.w	404d62 <_malloc_r+0x506>
  404b34:	4b1d      	ldr	r3, [pc, #116]	; (404bac <_malloc_r+0x350>)
  404b36:	68bc      	ldr	r4, [r7, #8]
  404b38:	681a      	ldr	r2, [r3, #0]
  404b3a:	4291      	cmp	r1, r2
  404b3c:	bf88      	it	hi
  404b3e:	6019      	strhi	r1, [r3, #0]
  404b40:	4b1b      	ldr	r3, [pc, #108]	; (404bb0 <_malloc_r+0x354>)
  404b42:	681a      	ldr	r2, [r3, #0]
  404b44:	4291      	cmp	r1, r2
  404b46:	6862      	ldr	r2, [r4, #4]
  404b48:	bf88      	it	hi
  404b4a:	6019      	strhi	r1, [r3, #0]
  404b4c:	f022 0203 	bic.w	r2, r2, #3
  404b50:	4296      	cmp	r6, r2
  404b52:	eba2 0306 	sub.w	r3, r2, r6
  404b56:	d801      	bhi.n	404b5c <_malloc_r+0x300>
  404b58:	2b0f      	cmp	r3, #15
  404b5a:	dc04      	bgt.n	404b66 <_malloc_r+0x30a>
  404b5c:	4628      	mov	r0, r5
  404b5e:	f000 fa1f 	bl	404fa0 <__malloc_unlock>
  404b62:	2400      	movs	r4, #0
  404b64:	e740      	b.n	4049e8 <_malloc_r+0x18c>
  404b66:	19a2      	adds	r2, r4, r6
  404b68:	f043 0301 	orr.w	r3, r3, #1
  404b6c:	f046 0601 	orr.w	r6, r6, #1
  404b70:	6066      	str	r6, [r4, #4]
  404b72:	4628      	mov	r0, r5
  404b74:	60ba      	str	r2, [r7, #8]
  404b76:	6053      	str	r3, [r2, #4]
  404b78:	f000 fa12 	bl	404fa0 <__malloc_unlock>
  404b7c:	3408      	adds	r4, #8
  404b7e:	4620      	mov	r0, r4
  404b80:	b003      	add	sp, #12
  404b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b86:	2b14      	cmp	r3, #20
  404b88:	d971      	bls.n	404c6e <_malloc_r+0x412>
  404b8a:	2b54      	cmp	r3, #84	; 0x54
  404b8c:	f200 80a3 	bhi.w	404cd6 <_malloc_r+0x47a>
  404b90:	0b33      	lsrs	r3, r6, #12
  404b92:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404b96:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404b9a:	00c3      	lsls	r3, r0, #3
  404b9c:	e680      	b.n	4048a0 <_malloc_r+0x44>
  404b9e:	bf00      	nop
  404ba0:	20400454 	.word	0x20400454
  404ba4:	20400cac 	.word	0x20400cac
  404ba8:	20400c7c 	.word	0x20400c7c
  404bac:	20400ca4 	.word	0x20400ca4
  404bb0:	20400ca8 	.word	0x20400ca8
  404bb4:	2040045c 	.word	0x2040045c
  404bb8:	2040085c 	.word	0x2040085c
  404bbc:	0a5a      	lsrs	r2, r3, #9
  404bbe:	2a04      	cmp	r2, #4
  404bc0:	d95b      	bls.n	404c7a <_malloc_r+0x41e>
  404bc2:	2a14      	cmp	r2, #20
  404bc4:	f200 80ae 	bhi.w	404d24 <_malloc_r+0x4c8>
  404bc8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404bcc:	00c9      	lsls	r1, r1, #3
  404bce:	325b      	adds	r2, #91	; 0x5b
  404bd0:	eb07 0c01 	add.w	ip, r7, r1
  404bd4:	5879      	ldr	r1, [r7, r1]
  404bd6:	f1ac 0c08 	sub.w	ip, ip, #8
  404bda:	458c      	cmp	ip, r1
  404bdc:	f000 8088 	beq.w	404cf0 <_malloc_r+0x494>
  404be0:	684a      	ldr	r2, [r1, #4]
  404be2:	f022 0203 	bic.w	r2, r2, #3
  404be6:	4293      	cmp	r3, r2
  404be8:	d273      	bcs.n	404cd2 <_malloc_r+0x476>
  404bea:	6889      	ldr	r1, [r1, #8]
  404bec:	458c      	cmp	ip, r1
  404bee:	d1f7      	bne.n	404be0 <_malloc_r+0x384>
  404bf0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404bf4:	687b      	ldr	r3, [r7, #4]
  404bf6:	60e2      	str	r2, [r4, #12]
  404bf8:	f8c4 c008 	str.w	ip, [r4, #8]
  404bfc:	6094      	str	r4, [r2, #8]
  404bfe:	f8cc 400c 	str.w	r4, [ip, #12]
  404c02:	e68f      	b.n	404924 <_malloc_r+0xc8>
  404c04:	19a1      	adds	r1, r4, r6
  404c06:	f046 0c01 	orr.w	ip, r6, #1
  404c0a:	f042 0601 	orr.w	r6, r2, #1
  404c0e:	f8c4 c004 	str.w	ip, [r4, #4]
  404c12:	4628      	mov	r0, r5
  404c14:	6179      	str	r1, [r7, #20]
  404c16:	6139      	str	r1, [r7, #16]
  404c18:	f8c1 e00c 	str.w	lr, [r1, #12]
  404c1c:	f8c1 e008 	str.w	lr, [r1, #8]
  404c20:	604e      	str	r6, [r1, #4]
  404c22:	50e2      	str	r2, [r4, r3]
  404c24:	f000 f9bc 	bl	404fa0 <__malloc_unlock>
  404c28:	3408      	adds	r4, #8
  404c2a:	e6dd      	b.n	4049e8 <_malloc_r+0x18c>
  404c2c:	687b      	ldr	r3, [r7, #4]
  404c2e:	e679      	b.n	404924 <_malloc_r+0xc8>
  404c30:	f108 0801 	add.w	r8, r8, #1
  404c34:	f018 0f03 	tst.w	r8, #3
  404c38:	f10c 0c08 	add.w	ip, ip, #8
  404c3c:	f47f ae85 	bne.w	40494a <_malloc_r+0xee>
  404c40:	e02d      	b.n	404c9e <_malloc_r+0x442>
  404c42:	68dc      	ldr	r4, [r3, #12]
  404c44:	42a3      	cmp	r3, r4
  404c46:	bf08      	it	eq
  404c48:	3002      	addeq	r0, #2
  404c4a:	f43f ae3e 	beq.w	4048ca <_malloc_r+0x6e>
  404c4e:	e6bb      	b.n	4049c8 <_malloc_r+0x16c>
  404c50:	4419      	add	r1, r3
  404c52:	461c      	mov	r4, r3
  404c54:	684a      	ldr	r2, [r1, #4]
  404c56:	68db      	ldr	r3, [r3, #12]
  404c58:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404c5c:	f042 0201 	orr.w	r2, r2, #1
  404c60:	604a      	str	r2, [r1, #4]
  404c62:	4628      	mov	r0, r5
  404c64:	60f3      	str	r3, [r6, #12]
  404c66:	609e      	str	r6, [r3, #8]
  404c68:	f000 f99a 	bl	404fa0 <__malloc_unlock>
  404c6c:	e6bc      	b.n	4049e8 <_malloc_r+0x18c>
  404c6e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404c72:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404c76:	00c3      	lsls	r3, r0, #3
  404c78:	e612      	b.n	4048a0 <_malloc_r+0x44>
  404c7a:	099a      	lsrs	r2, r3, #6
  404c7c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404c80:	00c9      	lsls	r1, r1, #3
  404c82:	3238      	adds	r2, #56	; 0x38
  404c84:	e7a4      	b.n	404bd0 <_malloc_r+0x374>
  404c86:	42bc      	cmp	r4, r7
  404c88:	d054      	beq.n	404d34 <_malloc_r+0x4d8>
  404c8a:	68bc      	ldr	r4, [r7, #8]
  404c8c:	6862      	ldr	r2, [r4, #4]
  404c8e:	f022 0203 	bic.w	r2, r2, #3
  404c92:	e75d      	b.n	404b50 <_malloc_r+0x2f4>
  404c94:	f859 3908 	ldr.w	r3, [r9], #-8
  404c98:	4599      	cmp	r9, r3
  404c9a:	f040 8086 	bne.w	404daa <_malloc_r+0x54e>
  404c9e:	f010 0f03 	tst.w	r0, #3
  404ca2:	f100 30ff 	add.w	r0, r0, #4294967295
  404ca6:	d1f5      	bne.n	404c94 <_malloc_r+0x438>
  404ca8:	687b      	ldr	r3, [r7, #4]
  404caa:	ea23 0304 	bic.w	r3, r3, r4
  404cae:	607b      	str	r3, [r7, #4]
  404cb0:	0064      	lsls	r4, r4, #1
  404cb2:	429c      	cmp	r4, r3
  404cb4:	f63f aec7 	bhi.w	404a46 <_malloc_r+0x1ea>
  404cb8:	2c00      	cmp	r4, #0
  404cba:	f43f aec4 	beq.w	404a46 <_malloc_r+0x1ea>
  404cbe:	421c      	tst	r4, r3
  404cc0:	4640      	mov	r0, r8
  404cc2:	f47f ae3e 	bne.w	404942 <_malloc_r+0xe6>
  404cc6:	0064      	lsls	r4, r4, #1
  404cc8:	421c      	tst	r4, r3
  404cca:	f100 0004 	add.w	r0, r0, #4
  404cce:	d0fa      	beq.n	404cc6 <_malloc_r+0x46a>
  404cd0:	e637      	b.n	404942 <_malloc_r+0xe6>
  404cd2:	468c      	mov	ip, r1
  404cd4:	e78c      	b.n	404bf0 <_malloc_r+0x394>
  404cd6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404cda:	d815      	bhi.n	404d08 <_malloc_r+0x4ac>
  404cdc:	0bf3      	lsrs	r3, r6, #15
  404cde:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404ce2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404ce6:	00c3      	lsls	r3, r0, #3
  404ce8:	e5da      	b.n	4048a0 <_malloc_r+0x44>
  404cea:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404cee:	e6ed      	b.n	404acc <_malloc_r+0x270>
  404cf0:	687b      	ldr	r3, [r7, #4]
  404cf2:	1092      	asrs	r2, r2, #2
  404cf4:	2101      	movs	r1, #1
  404cf6:	fa01 f202 	lsl.w	r2, r1, r2
  404cfa:	4313      	orrs	r3, r2
  404cfc:	607b      	str	r3, [r7, #4]
  404cfe:	4662      	mov	r2, ip
  404d00:	e779      	b.n	404bf6 <_malloc_r+0x39a>
  404d02:	2301      	movs	r3, #1
  404d04:	6053      	str	r3, [r2, #4]
  404d06:	e729      	b.n	404b5c <_malloc_r+0x300>
  404d08:	f240 5254 	movw	r2, #1364	; 0x554
  404d0c:	4293      	cmp	r3, r2
  404d0e:	d822      	bhi.n	404d56 <_malloc_r+0x4fa>
  404d10:	0cb3      	lsrs	r3, r6, #18
  404d12:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404d16:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404d1a:	00c3      	lsls	r3, r0, #3
  404d1c:	e5c0      	b.n	4048a0 <_malloc_r+0x44>
  404d1e:	f103 0b10 	add.w	fp, r3, #16
  404d22:	e6ae      	b.n	404a82 <_malloc_r+0x226>
  404d24:	2a54      	cmp	r2, #84	; 0x54
  404d26:	d829      	bhi.n	404d7c <_malloc_r+0x520>
  404d28:	0b1a      	lsrs	r2, r3, #12
  404d2a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404d2e:	00c9      	lsls	r1, r1, #3
  404d30:	326e      	adds	r2, #110	; 0x6e
  404d32:	e74d      	b.n	404bd0 <_malloc_r+0x374>
  404d34:	4b20      	ldr	r3, [pc, #128]	; (404db8 <_malloc_r+0x55c>)
  404d36:	6819      	ldr	r1, [r3, #0]
  404d38:	4459      	add	r1, fp
  404d3a:	6019      	str	r1, [r3, #0]
  404d3c:	e6b2      	b.n	404aa4 <_malloc_r+0x248>
  404d3e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404d42:	2800      	cmp	r0, #0
  404d44:	f47f aeae 	bne.w	404aa4 <_malloc_r+0x248>
  404d48:	eb08 030b 	add.w	r3, r8, fp
  404d4c:	68ba      	ldr	r2, [r7, #8]
  404d4e:	f043 0301 	orr.w	r3, r3, #1
  404d52:	6053      	str	r3, [r2, #4]
  404d54:	e6ee      	b.n	404b34 <_malloc_r+0x2d8>
  404d56:	207f      	movs	r0, #127	; 0x7f
  404d58:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404d5c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404d60:	e59e      	b.n	4048a0 <_malloc_r+0x44>
  404d62:	f104 0108 	add.w	r1, r4, #8
  404d66:	4628      	mov	r0, r5
  404d68:	9300      	str	r3, [sp, #0]
  404d6a:	f000 fe17 	bl	40599c <_free_r>
  404d6e:	9b00      	ldr	r3, [sp, #0]
  404d70:	6819      	ldr	r1, [r3, #0]
  404d72:	e6df      	b.n	404b34 <_malloc_r+0x2d8>
  404d74:	2001      	movs	r0, #1
  404d76:	f04f 0900 	mov.w	r9, #0
  404d7a:	e6bc      	b.n	404af6 <_malloc_r+0x29a>
  404d7c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404d80:	d805      	bhi.n	404d8e <_malloc_r+0x532>
  404d82:	0bda      	lsrs	r2, r3, #15
  404d84:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404d88:	00c9      	lsls	r1, r1, #3
  404d8a:	3277      	adds	r2, #119	; 0x77
  404d8c:	e720      	b.n	404bd0 <_malloc_r+0x374>
  404d8e:	f240 5154 	movw	r1, #1364	; 0x554
  404d92:	428a      	cmp	r2, r1
  404d94:	d805      	bhi.n	404da2 <_malloc_r+0x546>
  404d96:	0c9a      	lsrs	r2, r3, #18
  404d98:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404d9c:	00c9      	lsls	r1, r1, #3
  404d9e:	327c      	adds	r2, #124	; 0x7c
  404da0:	e716      	b.n	404bd0 <_malloc_r+0x374>
  404da2:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404da6:	227e      	movs	r2, #126	; 0x7e
  404da8:	e712      	b.n	404bd0 <_malloc_r+0x374>
  404daa:	687b      	ldr	r3, [r7, #4]
  404dac:	e780      	b.n	404cb0 <_malloc_r+0x454>
  404dae:	08f0      	lsrs	r0, r6, #3
  404db0:	f106 0308 	add.w	r3, r6, #8
  404db4:	e600      	b.n	4049b8 <_malloc_r+0x15c>
  404db6:	bf00      	nop
  404db8:	20400c7c 	.word	0x20400c7c
  404dbc:	00000000 	.word	0x00000000

00404dc0 <memchr>:
  404dc0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404dc4:	2a10      	cmp	r2, #16
  404dc6:	db2b      	blt.n	404e20 <memchr+0x60>
  404dc8:	f010 0f07 	tst.w	r0, #7
  404dcc:	d008      	beq.n	404de0 <memchr+0x20>
  404dce:	f810 3b01 	ldrb.w	r3, [r0], #1
  404dd2:	3a01      	subs	r2, #1
  404dd4:	428b      	cmp	r3, r1
  404dd6:	d02d      	beq.n	404e34 <memchr+0x74>
  404dd8:	f010 0f07 	tst.w	r0, #7
  404ddc:	b342      	cbz	r2, 404e30 <memchr+0x70>
  404dde:	d1f6      	bne.n	404dce <memchr+0xe>
  404de0:	b4f0      	push	{r4, r5, r6, r7}
  404de2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404de6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404dea:	f022 0407 	bic.w	r4, r2, #7
  404dee:	f07f 0700 	mvns.w	r7, #0
  404df2:	2300      	movs	r3, #0
  404df4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404df8:	3c08      	subs	r4, #8
  404dfa:	ea85 0501 	eor.w	r5, r5, r1
  404dfe:	ea86 0601 	eor.w	r6, r6, r1
  404e02:	fa85 f547 	uadd8	r5, r5, r7
  404e06:	faa3 f587 	sel	r5, r3, r7
  404e0a:	fa86 f647 	uadd8	r6, r6, r7
  404e0e:	faa5 f687 	sel	r6, r5, r7
  404e12:	b98e      	cbnz	r6, 404e38 <memchr+0x78>
  404e14:	d1ee      	bne.n	404df4 <memchr+0x34>
  404e16:	bcf0      	pop	{r4, r5, r6, r7}
  404e18:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404e1c:	f002 0207 	and.w	r2, r2, #7
  404e20:	b132      	cbz	r2, 404e30 <memchr+0x70>
  404e22:	f810 3b01 	ldrb.w	r3, [r0], #1
  404e26:	3a01      	subs	r2, #1
  404e28:	ea83 0301 	eor.w	r3, r3, r1
  404e2c:	b113      	cbz	r3, 404e34 <memchr+0x74>
  404e2e:	d1f8      	bne.n	404e22 <memchr+0x62>
  404e30:	2000      	movs	r0, #0
  404e32:	4770      	bx	lr
  404e34:	3801      	subs	r0, #1
  404e36:	4770      	bx	lr
  404e38:	2d00      	cmp	r5, #0
  404e3a:	bf06      	itte	eq
  404e3c:	4635      	moveq	r5, r6
  404e3e:	3803      	subeq	r0, #3
  404e40:	3807      	subne	r0, #7
  404e42:	f015 0f01 	tst.w	r5, #1
  404e46:	d107      	bne.n	404e58 <memchr+0x98>
  404e48:	3001      	adds	r0, #1
  404e4a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404e4e:	bf02      	ittt	eq
  404e50:	3001      	addeq	r0, #1
  404e52:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404e56:	3001      	addeq	r0, #1
  404e58:	bcf0      	pop	{r4, r5, r6, r7}
  404e5a:	3801      	subs	r0, #1
  404e5c:	4770      	bx	lr
  404e5e:	bf00      	nop

00404e60 <memcpy>:
  404e60:	4684      	mov	ip, r0
  404e62:	ea41 0300 	orr.w	r3, r1, r0
  404e66:	f013 0303 	ands.w	r3, r3, #3
  404e6a:	d16d      	bne.n	404f48 <memcpy+0xe8>
  404e6c:	3a40      	subs	r2, #64	; 0x40
  404e6e:	d341      	bcc.n	404ef4 <memcpy+0x94>
  404e70:	f851 3b04 	ldr.w	r3, [r1], #4
  404e74:	f840 3b04 	str.w	r3, [r0], #4
  404e78:	f851 3b04 	ldr.w	r3, [r1], #4
  404e7c:	f840 3b04 	str.w	r3, [r0], #4
  404e80:	f851 3b04 	ldr.w	r3, [r1], #4
  404e84:	f840 3b04 	str.w	r3, [r0], #4
  404e88:	f851 3b04 	ldr.w	r3, [r1], #4
  404e8c:	f840 3b04 	str.w	r3, [r0], #4
  404e90:	f851 3b04 	ldr.w	r3, [r1], #4
  404e94:	f840 3b04 	str.w	r3, [r0], #4
  404e98:	f851 3b04 	ldr.w	r3, [r1], #4
  404e9c:	f840 3b04 	str.w	r3, [r0], #4
  404ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ea4:	f840 3b04 	str.w	r3, [r0], #4
  404ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eac:	f840 3b04 	str.w	r3, [r0], #4
  404eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404eb4:	f840 3b04 	str.w	r3, [r0], #4
  404eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ebc:	f840 3b04 	str.w	r3, [r0], #4
  404ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ec4:	f840 3b04 	str.w	r3, [r0], #4
  404ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ecc:	f840 3b04 	str.w	r3, [r0], #4
  404ed0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ed4:	f840 3b04 	str.w	r3, [r0], #4
  404ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  404edc:	f840 3b04 	str.w	r3, [r0], #4
  404ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ee4:	f840 3b04 	str.w	r3, [r0], #4
  404ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eec:	f840 3b04 	str.w	r3, [r0], #4
  404ef0:	3a40      	subs	r2, #64	; 0x40
  404ef2:	d2bd      	bcs.n	404e70 <memcpy+0x10>
  404ef4:	3230      	adds	r2, #48	; 0x30
  404ef6:	d311      	bcc.n	404f1c <memcpy+0xbc>
  404ef8:	f851 3b04 	ldr.w	r3, [r1], #4
  404efc:	f840 3b04 	str.w	r3, [r0], #4
  404f00:	f851 3b04 	ldr.w	r3, [r1], #4
  404f04:	f840 3b04 	str.w	r3, [r0], #4
  404f08:	f851 3b04 	ldr.w	r3, [r1], #4
  404f0c:	f840 3b04 	str.w	r3, [r0], #4
  404f10:	f851 3b04 	ldr.w	r3, [r1], #4
  404f14:	f840 3b04 	str.w	r3, [r0], #4
  404f18:	3a10      	subs	r2, #16
  404f1a:	d2ed      	bcs.n	404ef8 <memcpy+0x98>
  404f1c:	320c      	adds	r2, #12
  404f1e:	d305      	bcc.n	404f2c <memcpy+0xcc>
  404f20:	f851 3b04 	ldr.w	r3, [r1], #4
  404f24:	f840 3b04 	str.w	r3, [r0], #4
  404f28:	3a04      	subs	r2, #4
  404f2a:	d2f9      	bcs.n	404f20 <memcpy+0xc0>
  404f2c:	3204      	adds	r2, #4
  404f2e:	d008      	beq.n	404f42 <memcpy+0xe2>
  404f30:	07d2      	lsls	r2, r2, #31
  404f32:	bf1c      	itt	ne
  404f34:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f38:	f800 3b01 	strbne.w	r3, [r0], #1
  404f3c:	d301      	bcc.n	404f42 <memcpy+0xe2>
  404f3e:	880b      	ldrh	r3, [r1, #0]
  404f40:	8003      	strh	r3, [r0, #0]
  404f42:	4660      	mov	r0, ip
  404f44:	4770      	bx	lr
  404f46:	bf00      	nop
  404f48:	2a08      	cmp	r2, #8
  404f4a:	d313      	bcc.n	404f74 <memcpy+0x114>
  404f4c:	078b      	lsls	r3, r1, #30
  404f4e:	d08d      	beq.n	404e6c <memcpy+0xc>
  404f50:	f010 0303 	ands.w	r3, r0, #3
  404f54:	d08a      	beq.n	404e6c <memcpy+0xc>
  404f56:	f1c3 0304 	rsb	r3, r3, #4
  404f5a:	1ad2      	subs	r2, r2, r3
  404f5c:	07db      	lsls	r3, r3, #31
  404f5e:	bf1c      	itt	ne
  404f60:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f64:	f800 3b01 	strbne.w	r3, [r0], #1
  404f68:	d380      	bcc.n	404e6c <memcpy+0xc>
  404f6a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404f6e:	f820 3b02 	strh.w	r3, [r0], #2
  404f72:	e77b      	b.n	404e6c <memcpy+0xc>
  404f74:	3a04      	subs	r2, #4
  404f76:	d3d9      	bcc.n	404f2c <memcpy+0xcc>
  404f78:	3a01      	subs	r2, #1
  404f7a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404f7e:	f800 3b01 	strb.w	r3, [r0], #1
  404f82:	d2f9      	bcs.n	404f78 <memcpy+0x118>
  404f84:	780b      	ldrb	r3, [r1, #0]
  404f86:	7003      	strb	r3, [r0, #0]
  404f88:	784b      	ldrb	r3, [r1, #1]
  404f8a:	7043      	strb	r3, [r0, #1]
  404f8c:	788b      	ldrb	r3, [r1, #2]
  404f8e:	7083      	strb	r3, [r0, #2]
  404f90:	4660      	mov	r0, ip
  404f92:	4770      	bx	lr

00404f94 <__malloc_lock>:
  404f94:	4801      	ldr	r0, [pc, #4]	; (404f9c <__malloc_lock+0x8>)
  404f96:	f7ff bc5d 	b.w	404854 <__retarget_lock_acquire_recursive>
  404f9a:	bf00      	nop
  404f9c:	20400cc0 	.word	0x20400cc0

00404fa0 <__malloc_unlock>:
  404fa0:	4801      	ldr	r0, [pc, #4]	; (404fa8 <__malloc_unlock+0x8>)
  404fa2:	f7ff bc59 	b.w	404858 <__retarget_lock_release_recursive>
  404fa6:	bf00      	nop
  404fa8:	20400cc0 	.word	0x20400cc0

00404fac <_Balloc>:
  404fac:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404fae:	b570      	push	{r4, r5, r6, lr}
  404fb0:	4605      	mov	r5, r0
  404fb2:	460c      	mov	r4, r1
  404fb4:	b14b      	cbz	r3, 404fca <_Balloc+0x1e>
  404fb6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404fba:	b180      	cbz	r0, 404fde <_Balloc+0x32>
  404fbc:	6802      	ldr	r2, [r0, #0]
  404fbe:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404fc2:	2300      	movs	r3, #0
  404fc4:	6103      	str	r3, [r0, #16]
  404fc6:	60c3      	str	r3, [r0, #12]
  404fc8:	bd70      	pop	{r4, r5, r6, pc}
  404fca:	2221      	movs	r2, #33	; 0x21
  404fcc:	2104      	movs	r1, #4
  404fce:	f000 fc65 	bl	40589c <_calloc_r>
  404fd2:	64e8      	str	r0, [r5, #76]	; 0x4c
  404fd4:	4603      	mov	r3, r0
  404fd6:	2800      	cmp	r0, #0
  404fd8:	d1ed      	bne.n	404fb6 <_Balloc+0xa>
  404fda:	2000      	movs	r0, #0
  404fdc:	bd70      	pop	{r4, r5, r6, pc}
  404fde:	2101      	movs	r1, #1
  404fe0:	fa01 f604 	lsl.w	r6, r1, r4
  404fe4:	1d72      	adds	r2, r6, #5
  404fe6:	4628      	mov	r0, r5
  404fe8:	0092      	lsls	r2, r2, #2
  404fea:	f000 fc57 	bl	40589c <_calloc_r>
  404fee:	2800      	cmp	r0, #0
  404ff0:	d0f3      	beq.n	404fda <_Balloc+0x2e>
  404ff2:	6044      	str	r4, [r0, #4]
  404ff4:	6086      	str	r6, [r0, #8]
  404ff6:	e7e4      	b.n	404fc2 <_Balloc+0x16>

00404ff8 <_Bfree>:
  404ff8:	b131      	cbz	r1, 405008 <_Bfree+0x10>
  404ffa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404ffc:	684a      	ldr	r2, [r1, #4]
  404ffe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405002:	6008      	str	r0, [r1, #0]
  405004:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405008:	4770      	bx	lr
  40500a:	bf00      	nop

0040500c <__multadd>:
  40500c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40500e:	690c      	ldr	r4, [r1, #16]
  405010:	b083      	sub	sp, #12
  405012:	460d      	mov	r5, r1
  405014:	4606      	mov	r6, r0
  405016:	f101 0e14 	add.w	lr, r1, #20
  40501a:	2700      	movs	r7, #0
  40501c:	f8de 0000 	ldr.w	r0, [lr]
  405020:	b281      	uxth	r1, r0
  405022:	fb02 3301 	mla	r3, r2, r1, r3
  405026:	0c01      	lsrs	r1, r0, #16
  405028:	0c18      	lsrs	r0, r3, #16
  40502a:	fb02 0101 	mla	r1, r2, r1, r0
  40502e:	b29b      	uxth	r3, r3
  405030:	3701      	adds	r7, #1
  405032:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405036:	42bc      	cmp	r4, r7
  405038:	f84e 3b04 	str.w	r3, [lr], #4
  40503c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405040:	dcec      	bgt.n	40501c <__multadd+0x10>
  405042:	b13b      	cbz	r3, 405054 <__multadd+0x48>
  405044:	68aa      	ldr	r2, [r5, #8]
  405046:	4294      	cmp	r4, r2
  405048:	da07      	bge.n	40505a <__multadd+0x4e>
  40504a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40504e:	3401      	adds	r4, #1
  405050:	6153      	str	r3, [r2, #20]
  405052:	612c      	str	r4, [r5, #16]
  405054:	4628      	mov	r0, r5
  405056:	b003      	add	sp, #12
  405058:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40505a:	6869      	ldr	r1, [r5, #4]
  40505c:	9301      	str	r3, [sp, #4]
  40505e:	3101      	adds	r1, #1
  405060:	4630      	mov	r0, r6
  405062:	f7ff ffa3 	bl	404fac <_Balloc>
  405066:	692a      	ldr	r2, [r5, #16]
  405068:	3202      	adds	r2, #2
  40506a:	f105 010c 	add.w	r1, r5, #12
  40506e:	4607      	mov	r7, r0
  405070:	0092      	lsls	r2, r2, #2
  405072:	300c      	adds	r0, #12
  405074:	f7ff fef4 	bl	404e60 <memcpy>
  405078:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40507a:	6869      	ldr	r1, [r5, #4]
  40507c:	9b01      	ldr	r3, [sp, #4]
  40507e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405082:	6028      	str	r0, [r5, #0]
  405084:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405088:	463d      	mov	r5, r7
  40508a:	e7de      	b.n	40504a <__multadd+0x3e>

0040508c <__hi0bits>:
  40508c:	0c02      	lsrs	r2, r0, #16
  40508e:	0412      	lsls	r2, r2, #16
  405090:	4603      	mov	r3, r0
  405092:	b9b2      	cbnz	r2, 4050c2 <__hi0bits+0x36>
  405094:	0403      	lsls	r3, r0, #16
  405096:	2010      	movs	r0, #16
  405098:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40509c:	bf04      	itt	eq
  40509e:	021b      	lsleq	r3, r3, #8
  4050a0:	3008      	addeq	r0, #8
  4050a2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4050a6:	bf04      	itt	eq
  4050a8:	011b      	lsleq	r3, r3, #4
  4050aa:	3004      	addeq	r0, #4
  4050ac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4050b0:	bf04      	itt	eq
  4050b2:	009b      	lsleq	r3, r3, #2
  4050b4:	3002      	addeq	r0, #2
  4050b6:	2b00      	cmp	r3, #0
  4050b8:	db02      	blt.n	4050c0 <__hi0bits+0x34>
  4050ba:	005b      	lsls	r3, r3, #1
  4050bc:	d403      	bmi.n	4050c6 <__hi0bits+0x3a>
  4050be:	2020      	movs	r0, #32
  4050c0:	4770      	bx	lr
  4050c2:	2000      	movs	r0, #0
  4050c4:	e7e8      	b.n	405098 <__hi0bits+0xc>
  4050c6:	3001      	adds	r0, #1
  4050c8:	4770      	bx	lr
  4050ca:	bf00      	nop

004050cc <__lo0bits>:
  4050cc:	6803      	ldr	r3, [r0, #0]
  4050ce:	f013 0207 	ands.w	r2, r3, #7
  4050d2:	4601      	mov	r1, r0
  4050d4:	d007      	beq.n	4050e6 <__lo0bits+0x1a>
  4050d6:	07da      	lsls	r2, r3, #31
  4050d8:	d421      	bmi.n	40511e <__lo0bits+0x52>
  4050da:	0798      	lsls	r0, r3, #30
  4050dc:	d421      	bmi.n	405122 <__lo0bits+0x56>
  4050de:	089b      	lsrs	r3, r3, #2
  4050e0:	600b      	str	r3, [r1, #0]
  4050e2:	2002      	movs	r0, #2
  4050e4:	4770      	bx	lr
  4050e6:	b298      	uxth	r0, r3
  4050e8:	b198      	cbz	r0, 405112 <__lo0bits+0x46>
  4050ea:	4610      	mov	r0, r2
  4050ec:	f013 0fff 	tst.w	r3, #255	; 0xff
  4050f0:	bf04      	itt	eq
  4050f2:	0a1b      	lsreq	r3, r3, #8
  4050f4:	3008      	addeq	r0, #8
  4050f6:	071a      	lsls	r2, r3, #28
  4050f8:	bf04      	itt	eq
  4050fa:	091b      	lsreq	r3, r3, #4
  4050fc:	3004      	addeq	r0, #4
  4050fe:	079a      	lsls	r2, r3, #30
  405100:	bf04      	itt	eq
  405102:	089b      	lsreq	r3, r3, #2
  405104:	3002      	addeq	r0, #2
  405106:	07da      	lsls	r2, r3, #31
  405108:	d407      	bmi.n	40511a <__lo0bits+0x4e>
  40510a:	085b      	lsrs	r3, r3, #1
  40510c:	d104      	bne.n	405118 <__lo0bits+0x4c>
  40510e:	2020      	movs	r0, #32
  405110:	4770      	bx	lr
  405112:	0c1b      	lsrs	r3, r3, #16
  405114:	2010      	movs	r0, #16
  405116:	e7e9      	b.n	4050ec <__lo0bits+0x20>
  405118:	3001      	adds	r0, #1
  40511a:	600b      	str	r3, [r1, #0]
  40511c:	4770      	bx	lr
  40511e:	2000      	movs	r0, #0
  405120:	4770      	bx	lr
  405122:	085b      	lsrs	r3, r3, #1
  405124:	600b      	str	r3, [r1, #0]
  405126:	2001      	movs	r0, #1
  405128:	4770      	bx	lr
  40512a:	bf00      	nop

0040512c <__i2b>:
  40512c:	b510      	push	{r4, lr}
  40512e:	460c      	mov	r4, r1
  405130:	2101      	movs	r1, #1
  405132:	f7ff ff3b 	bl	404fac <_Balloc>
  405136:	2201      	movs	r2, #1
  405138:	6144      	str	r4, [r0, #20]
  40513a:	6102      	str	r2, [r0, #16]
  40513c:	bd10      	pop	{r4, pc}
  40513e:	bf00      	nop

00405140 <__multiply>:
  405140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405144:	690c      	ldr	r4, [r1, #16]
  405146:	6915      	ldr	r5, [r2, #16]
  405148:	42ac      	cmp	r4, r5
  40514a:	b083      	sub	sp, #12
  40514c:	468b      	mov	fp, r1
  40514e:	4616      	mov	r6, r2
  405150:	da04      	bge.n	40515c <__multiply+0x1c>
  405152:	4622      	mov	r2, r4
  405154:	46b3      	mov	fp, r6
  405156:	462c      	mov	r4, r5
  405158:	460e      	mov	r6, r1
  40515a:	4615      	mov	r5, r2
  40515c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405160:	f8db 1004 	ldr.w	r1, [fp, #4]
  405164:	eb04 0805 	add.w	r8, r4, r5
  405168:	4598      	cmp	r8, r3
  40516a:	bfc8      	it	gt
  40516c:	3101      	addgt	r1, #1
  40516e:	f7ff ff1d 	bl	404fac <_Balloc>
  405172:	f100 0914 	add.w	r9, r0, #20
  405176:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40517a:	45d1      	cmp	r9, sl
  40517c:	9000      	str	r0, [sp, #0]
  40517e:	d205      	bcs.n	40518c <__multiply+0x4c>
  405180:	464b      	mov	r3, r9
  405182:	2100      	movs	r1, #0
  405184:	f843 1b04 	str.w	r1, [r3], #4
  405188:	459a      	cmp	sl, r3
  40518a:	d8fb      	bhi.n	405184 <__multiply+0x44>
  40518c:	f106 0c14 	add.w	ip, r6, #20
  405190:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405194:	f10b 0b14 	add.w	fp, fp, #20
  405198:	459c      	cmp	ip, r3
  40519a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40519e:	d24c      	bcs.n	40523a <__multiply+0xfa>
  4051a0:	f8cd a004 	str.w	sl, [sp, #4]
  4051a4:	469a      	mov	sl, r3
  4051a6:	f8dc 5000 	ldr.w	r5, [ip]
  4051aa:	b2af      	uxth	r7, r5
  4051ac:	b1ef      	cbz	r7, 4051ea <__multiply+0xaa>
  4051ae:	2100      	movs	r1, #0
  4051b0:	464d      	mov	r5, r9
  4051b2:	465e      	mov	r6, fp
  4051b4:	460c      	mov	r4, r1
  4051b6:	f856 2b04 	ldr.w	r2, [r6], #4
  4051ba:	6828      	ldr	r0, [r5, #0]
  4051bc:	b293      	uxth	r3, r2
  4051be:	b281      	uxth	r1, r0
  4051c0:	fb07 1303 	mla	r3, r7, r3, r1
  4051c4:	0c12      	lsrs	r2, r2, #16
  4051c6:	0c01      	lsrs	r1, r0, #16
  4051c8:	4423      	add	r3, r4
  4051ca:	fb07 1102 	mla	r1, r7, r2, r1
  4051ce:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4051d2:	b29b      	uxth	r3, r3
  4051d4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4051d8:	45b6      	cmp	lr, r6
  4051da:	f845 3b04 	str.w	r3, [r5], #4
  4051de:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4051e2:	d8e8      	bhi.n	4051b6 <__multiply+0x76>
  4051e4:	602c      	str	r4, [r5, #0]
  4051e6:	f8dc 5000 	ldr.w	r5, [ip]
  4051ea:	0c2d      	lsrs	r5, r5, #16
  4051ec:	d01d      	beq.n	40522a <__multiply+0xea>
  4051ee:	f8d9 3000 	ldr.w	r3, [r9]
  4051f2:	4648      	mov	r0, r9
  4051f4:	461c      	mov	r4, r3
  4051f6:	4659      	mov	r1, fp
  4051f8:	2200      	movs	r2, #0
  4051fa:	880e      	ldrh	r6, [r1, #0]
  4051fc:	0c24      	lsrs	r4, r4, #16
  4051fe:	fb05 4406 	mla	r4, r5, r6, r4
  405202:	4422      	add	r2, r4
  405204:	b29b      	uxth	r3, r3
  405206:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40520a:	f840 3b04 	str.w	r3, [r0], #4
  40520e:	f851 3b04 	ldr.w	r3, [r1], #4
  405212:	6804      	ldr	r4, [r0, #0]
  405214:	0c1b      	lsrs	r3, r3, #16
  405216:	b2a6      	uxth	r6, r4
  405218:	fb05 6303 	mla	r3, r5, r3, r6
  40521c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405220:	458e      	cmp	lr, r1
  405222:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405226:	d8e8      	bhi.n	4051fa <__multiply+0xba>
  405228:	6003      	str	r3, [r0, #0]
  40522a:	f10c 0c04 	add.w	ip, ip, #4
  40522e:	45e2      	cmp	sl, ip
  405230:	f109 0904 	add.w	r9, r9, #4
  405234:	d8b7      	bhi.n	4051a6 <__multiply+0x66>
  405236:	f8dd a004 	ldr.w	sl, [sp, #4]
  40523a:	f1b8 0f00 	cmp.w	r8, #0
  40523e:	dd0b      	ble.n	405258 <__multiply+0x118>
  405240:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405244:	f1aa 0a04 	sub.w	sl, sl, #4
  405248:	b11b      	cbz	r3, 405252 <__multiply+0x112>
  40524a:	e005      	b.n	405258 <__multiply+0x118>
  40524c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405250:	b913      	cbnz	r3, 405258 <__multiply+0x118>
  405252:	f1b8 0801 	subs.w	r8, r8, #1
  405256:	d1f9      	bne.n	40524c <__multiply+0x10c>
  405258:	9800      	ldr	r0, [sp, #0]
  40525a:	f8c0 8010 	str.w	r8, [r0, #16]
  40525e:	b003      	add	sp, #12
  405260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405264 <__pow5mult>:
  405264:	f012 0303 	ands.w	r3, r2, #3
  405268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40526c:	4614      	mov	r4, r2
  40526e:	4607      	mov	r7, r0
  405270:	d12e      	bne.n	4052d0 <__pow5mult+0x6c>
  405272:	460d      	mov	r5, r1
  405274:	10a4      	asrs	r4, r4, #2
  405276:	d01c      	beq.n	4052b2 <__pow5mult+0x4e>
  405278:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40527a:	b396      	cbz	r6, 4052e2 <__pow5mult+0x7e>
  40527c:	07e3      	lsls	r3, r4, #31
  40527e:	f04f 0800 	mov.w	r8, #0
  405282:	d406      	bmi.n	405292 <__pow5mult+0x2e>
  405284:	1064      	asrs	r4, r4, #1
  405286:	d014      	beq.n	4052b2 <__pow5mult+0x4e>
  405288:	6830      	ldr	r0, [r6, #0]
  40528a:	b1a8      	cbz	r0, 4052b8 <__pow5mult+0x54>
  40528c:	4606      	mov	r6, r0
  40528e:	07e3      	lsls	r3, r4, #31
  405290:	d5f8      	bpl.n	405284 <__pow5mult+0x20>
  405292:	4632      	mov	r2, r6
  405294:	4629      	mov	r1, r5
  405296:	4638      	mov	r0, r7
  405298:	f7ff ff52 	bl	405140 <__multiply>
  40529c:	b1b5      	cbz	r5, 4052cc <__pow5mult+0x68>
  40529e:	686a      	ldr	r2, [r5, #4]
  4052a0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4052a2:	1064      	asrs	r4, r4, #1
  4052a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4052a8:	6029      	str	r1, [r5, #0]
  4052aa:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  4052ae:	4605      	mov	r5, r0
  4052b0:	d1ea      	bne.n	405288 <__pow5mult+0x24>
  4052b2:	4628      	mov	r0, r5
  4052b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4052b8:	4632      	mov	r2, r6
  4052ba:	4631      	mov	r1, r6
  4052bc:	4638      	mov	r0, r7
  4052be:	f7ff ff3f 	bl	405140 <__multiply>
  4052c2:	6030      	str	r0, [r6, #0]
  4052c4:	f8c0 8000 	str.w	r8, [r0]
  4052c8:	4606      	mov	r6, r0
  4052ca:	e7e0      	b.n	40528e <__pow5mult+0x2a>
  4052cc:	4605      	mov	r5, r0
  4052ce:	e7d9      	b.n	405284 <__pow5mult+0x20>
  4052d0:	1e5a      	subs	r2, r3, #1
  4052d2:	4d0b      	ldr	r5, [pc, #44]	; (405300 <__pow5mult+0x9c>)
  4052d4:	2300      	movs	r3, #0
  4052d6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4052da:	f7ff fe97 	bl	40500c <__multadd>
  4052de:	4605      	mov	r5, r0
  4052e0:	e7c8      	b.n	405274 <__pow5mult+0x10>
  4052e2:	2101      	movs	r1, #1
  4052e4:	4638      	mov	r0, r7
  4052e6:	f7ff fe61 	bl	404fac <_Balloc>
  4052ea:	f240 2171 	movw	r1, #625	; 0x271
  4052ee:	2201      	movs	r2, #1
  4052f0:	2300      	movs	r3, #0
  4052f2:	6141      	str	r1, [r0, #20]
  4052f4:	6102      	str	r2, [r0, #16]
  4052f6:	4606      	mov	r6, r0
  4052f8:	64b8      	str	r0, [r7, #72]	; 0x48
  4052fa:	6003      	str	r3, [r0, #0]
  4052fc:	e7be      	b.n	40527c <__pow5mult+0x18>
  4052fe:	bf00      	nop
  405300:	00406fe0 	.word	0x00406fe0

00405304 <__lshift>:
  405304:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405308:	4691      	mov	r9, r2
  40530a:	690a      	ldr	r2, [r1, #16]
  40530c:	688b      	ldr	r3, [r1, #8]
  40530e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405312:	eb04 0802 	add.w	r8, r4, r2
  405316:	f108 0501 	add.w	r5, r8, #1
  40531a:	429d      	cmp	r5, r3
  40531c:	460e      	mov	r6, r1
  40531e:	4607      	mov	r7, r0
  405320:	6849      	ldr	r1, [r1, #4]
  405322:	dd04      	ble.n	40532e <__lshift+0x2a>
  405324:	005b      	lsls	r3, r3, #1
  405326:	429d      	cmp	r5, r3
  405328:	f101 0101 	add.w	r1, r1, #1
  40532c:	dcfa      	bgt.n	405324 <__lshift+0x20>
  40532e:	4638      	mov	r0, r7
  405330:	f7ff fe3c 	bl	404fac <_Balloc>
  405334:	2c00      	cmp	r4, #0
  405336:	f100 0314 	add.w	r3, r0, #20
  40533a:	dd06      	ble.n	40534a <__lshift+0x46>
  40533c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405340:	2100      	movs	r1, #0
  405342:	f843 1b04 	str.w	r1, [r3], #4
  405346:	429a      	cmp	r2, r3
  405348:	d1fb      	bne.n	405342 <__lshift+0x3e>
  40534a:	6934      	ldr	r4, [r6, #16]
  40534c:	f106 0114 	add.w	r1, r6, #20
  405350:	f019 091f 	ands.w	r9, r9, #31
  405354:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405358:	d01d      	beq.n	405396 <__lshift+0x92>
  40535a:	f1c9 0c20 	rsb	ip, r9, #32
  40535e:	2200      	movs	r2, #0
  405360:	680c      	ldr	r4, [r1, #0]
  405362:	fa04 f409 	lsl.w	r4, r4, r9
  405366:	4314      	orrs	r4, r2
  405368:	f843 4b04 	str.w	r4, [r3], #4
  40536c:	f851 2b04 	ldr.w	r2, [r1], #4
  405370:	458e      	cmp	lr, r1
  405372:	fa22 f20c 	lsr.w	r2, r2, ip
  405376:	d8f3      	bhi.n	405360 <__lshift+0x5c>
  405378:	601a      	str	r2, [r3, #0]
  40537a:	b10a      	cbz	r2, 405380 <__lshift+0x7c>
  40537c:	f108 0502 	add.w	r5, r8, #2
  405380:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405382:	6872      	ldr	r2, [r6, #4]
  405384:	3d01      	subs	r5, #1
  405386:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40538a:	6105      	str	r5, [r0, #16]
  40538c:	6031      	str	r1, [r6, #0]
  40538e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405392:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405396:	3b04      	subs	r3, #4
  405398:	f851 2b04 	ldr.w	r2, [r1], #4
  40539c:	f843 2f04 	str.w	r2, [r3, #4]!
  4053a0:	458e      	cmp	lr, r1
  4053a2:	d8f9      	bhi.n	405398 <__lshift+0x94>
  4053a4:	e7ec      	b.n	405380 <__lshift+0x7c>
  4053a6:	bf00      	nop

004053a8 <__mcmp>:
  4053a8:	b430      	push	{r4, r5}
  4053aa:	690b      	ldr	r3, [r1, #16]
  4053ac:	4605      	mov	r5, r0
  4053ae:	6900      	ldr	r0, [r0, #16]
  4053b0:	1ac0      	subs	r0, r0, r3
  4053b2:	d10f      	bne.n	4053d4 <__mcmp+0x2c>
  4053b4:	009b      	lsls	r3, r3, #2
  4053b6:	3514      	adds	r5, #20
  4053b8:	3114      	adds	r1, #20
  4053ba:	4419      	add	r1, r3
  4053bc:	442b      	add	r3, r5
  4053be:	e001      	b.n	4053c4 <__mcmp+0x1c>
  4053c0:	429d      	cmp	r5, r3
  4053c2:	d207      	bcs.n	4053d4 <__mcmp+0x2c>
  4053c4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4053c8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4053cc:	4294      	cmp	r4, r2
  4053ce:	d0f7      	beq.n	4053c0 <__mcmp+0x18>
  4053d0:	d302      	bcc.n	4053d8 <__mcmp+0x30>
  4053d2:	2001      	movs	r0, #1
  4053d4:	bc30      	pop	{r4, r5}
  4053d6:	4770      	bx	lr
  4053d8:	f04f 30ff 	mov.w	r0, #4294967295
  4053dc:	e7fa      	b.n	4053d4 <__mcmp+0x2c>
  4053de:	bf00      	nop

004053e0 <__mdiff>:
  4053e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4053e4:	690f      	ldr	r7, [r1, #16]
  4053e6:	460e      	mov	r6, r1
  4053e8:	6911      	ldr	r1, [r2, #16]
  4053ea:	1a7f      	subs	r7, r7, r1
  4053ec:	2f00      	cmp	r7, #0
  4053ee:	4690      	mov	r8, r2
  4053f0:	d117      	bne.n	405422 <__mdiff+0x42>
  4053f2:	0089      	lsls	r1, r1, #2
  4053f4:	f106 0514 	add.w	r5, r6, #20
  4053f8:	f102 0e14 	add.w	lr, r2, #20
  4053fc:	186b      	adds	r3, r5, r1
  4053fe:	4471      	add	r1, lr
  405400:	e001      	b.n	405406 <__mdiff+0x26>
  405402:	429d      	cmp	r5, r3
  405404:	d25c      	bcs.n	4054c0 <__mdiff+0xe0>
  405406:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40540a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40540e:	42a2      	cmp	r2, r4
  405410:	d0f7      	beq.n	405402 <__mdiff+0x22>
  405412:	d25e      	bcs.n	4054d2 <__mdiff+0xf2>
  405414:	4633      	mov	r3, r6
  405416:	462c      	mov	r4, r5
  405418:	4646      	mov	r6, r8
  40541a:	4675      	mov	r5, lr
  40541c:	4698      	mov	r8, r3
  40541e:	2701      	movs	r7, #1
  405420:	e005      	b.n	40542e <__mdiff+0x4e>
  405422:	db58      	blt.n	4054d6 <__mdiff+0xf6>
  405424:	f106 0514 	add.w	r5, r6, #20
  405428:	f108 0414 	add.w	r4, r8, #20
  40542c:	2700      	movs	r7, #0
  40542e:	6871      	ldr	r1, [r6, #4]
  405430:	f7ff fdbc 	bl	404fac <_Balloc>
  405434:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405438:	6936      	ldr	r6, [r6, #16]
  40543a:	60c7      	str	r7, [r0, #12]
  40543c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405440:	46a6      	mov	lr, r4
  405442:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405446:	f100 0414 	add.w	r4, r0, #20
  40544a:	2300      	movs	r3, #0
  40544c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405450:	f855 8b04 	ldr.w	r8, [r5], #4
  405454:	b28a      	uxth	r2, r1
  405456:	fa13 f388 	uxtah	r3, r3, r8
  40545a:	0c09      	lsrs	r1, r1, #16
  40545c:	1a9a      	subs	r2, r3, r2
  40545e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405462:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405466:	b292      	uxth	r2, r2
  405468:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40546c:	45f4      	cmp	ip, lr
  40546e:	f844 2b04 	str.w	r2, [r4], #4
  405472:	ea4f 4323 	mov.w	r3, r3, asr #16
  405476:	d8e9      	bhi.n	40544c <__mdiff+0x6c>
  405478:	42af      	cmp	r7, r5
  40547a:	d917      	bls.n	4054ac <__mdiff+0xcc>
  40547c:	46a4      	mov	ip, r4
  40547e:	46ae      	mov	lr, r5
  405480:	f85e 2b04 	ldr.w	r2, [lr], #4
  405484:	fa13 f382 	uxtah	r3, r3, r2
  405488:	1419      	asrs	r1, r3, #16
  40548a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40548e:	b29b      	uxth	r3, r3
  405490:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405494:	4577      	cmp	r7, lr
  405496:	f84c 2b04 	str.w	r2, [ip], #4
  40549a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40549e:	d8ef      	bhi.n	405480 <__mdiff+0xa0>
  4054a0:	43ed      	mvns	r5, r5
  4054a2:	442f      	add	r7, r5
  4054a4:	f027 0703 	bic.w	r7, r7, #3
  4054a8:	3704      	adds	r7, #4
  4054aa:	443c      	add	r4, r7
  4054ac:	3c04      	subs	r4, #4
  4054ae:	b922      	cbnz	r2, 4054ba <__mdiff+0xda>
  4054b0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4054b4:	3e01      	subs	r6, #1
  4054b6:	2b00      	cmp	r3, #0
  4054b8:	d0fa      	beq.n	4054b0 <__mdiff+0xd0>
  4054ba:	6106      	str	r6, [r0, #16]
  4054bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054c0:	2100      	movs	r1, #0
  4054c2:	f7ff fd73 	bl	404fac <_Balloc>
  4054c6:	2201      	movs	r2, #1
  4054c8:	2300      	movs	r3, #0
  4054ca:	6102      	str	r2, [r0, #16]
  4054cc:	6143      	str	r3, [r0, #20]
  4054ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054d2:	4674      	mov	r4, lr
  4054d4:	e7ab      	b.n	40542e <__mdiff+0x4e>
  4054d6:	4633      	mov	r3, r6
  4054d8:	f106 0414 	add.w	r4, r6, #20
  4054dc:	f102 0514 	add.w	r5, r2, #20
  4054e0:	4616      	mov	r6, r2
  4054e2:	2701      	movs	r7, #1
  4054e4:	4698      	mov	r8, r3
  4054e6:	e7a2      	b.n	40542e <__mdiff+0x4e>

004054e8 <__d2b>:
  4054e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4054ec:	b082      	sub	sp, #8
  4054ee:	2101      	movs	r1, #1
  4054f0:	461c      	mov	r4, r3
  4054f2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4054f6:	4615      	mov	r5, r2
  4054f8:	9e08      	ldr	r6, [sp, #32]
  4054fa:	f7ff fd57 	bl	404fac <_Balloc>
  4054fe:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405502:	4680      	mov	r8, r0
  405504:	b10f      	cbz	r7, 40550a <__d2b+0x22>
  405506:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40550a:	9401      	str	r4, [sp, #4]
  40550c:	b31d      	cbz	r5, 405556 <__d2b+0x6e>
  40550e:	a802      	add	r0, sp, #8
  405510:	f840 5d08 	str.w	r5, [r0, #-8]!
  405514:	f7ff fdda 	bl	4050cc <__lo0bits>
  405518:	2800      	cmp	r0, #0
  40551a:	d134      	bne.n	405586 <__d2b+0x9e>
  40551c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405520:	f8c8 2014 	str.w	r2, [r8, #20]
  405524:	2b00      	cmp	r3, #0
  405526:	bf0c      	ite	eq
  405528:	2101      	moveq	r1, #1
  40552a:	2102      	movne	r1, #2
  40552c:	f8c8 3018 	str.w	r3, [r8, #24]
  405530:	f8c8 1010 	str.w	r1, [r8, #16]
  405534:	b9df      	cbnz	r7, 40556e <__d2b+0x86>
  405536:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40553a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40553e:	6030      	str	r0, [r6, #0]
  405540:	6918      	ldr	r0, [r3, #16]
  405542:	f7ff fda3 	bl	40508c <__hi0bits>
  405546:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405548:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40554c:	6018      	str	r0, [r3, #0]
  40554e:	4640      	mov	r0, r8
  405550:	b002      	add	sp, #8
  405552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405556:	a801      	add	r0, sp, #4
  405558:	f7ff fdb8 	bl	4050cc <__lo0bits>
  40555c:	9b01      	ldr	r3, [sp, #4]
  40555e:	f8c8 3014 	str.w	r3, [r8, #20]
  405562:	2101      	movs	r1, #1
  405564:	3020      	adds	r0, #32
  405566:	f8c8 1010 	str.w	r1, [r8, #16]
  40556a:	2f00      	cmp	r7, #0
  40556c:	d0e3      	beq.n	405536 <__d2b+0x4e>
  40556e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405570:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405574:	4407      	add	r7, r0
  405576:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40557a:	6037      	str	r7, [r6, #0]
  40557c:	6018      	str	r0, [r3, #0]
  40557e:	4640      	mov	r0, r8
  405580:	b002      	add	sp, #8
  405582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405586:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40558a:	f1c0 0220 	rsb	r2, r0, #32
  40558e:	fa03 f202 	lsl.w	r2, r3, r2
  405592:	430a      	orrs	r2, r1
  405594:	40c3      	lsrs	r3, r0
  405596:	9301      	str	r3, [sp, #4]
  405598:	f8c8 2014 	str.w	r2, [r8, #20]
  40559c:	e7c2      	b.n	405524 <__d2b+0x3c>
  40559e:	bf00      	nop

004055a0 <_sbrk_r>:
  4055a0:	b538      	push	{r3, r4, r5, lr}
  4055a2:	4c07      	ldr	r4, [pc, #28]	; (4055c0 <_sbrk_r+0x20>)
  4055a4:	2300      	movs	r3, #0
  4055a6:	4605      	mov	r5, r0
  4055a8:	4608      	mov	r0, r1
  4055aa:	6023      	str	r3, [r4, #0]
  4055ac:	f7fc f878 	bl	4016a0 <_sbrk>
  4055b0:	1c43      	adds	r3, r0, #1
  4055b2:	d000      	beq.n	4055b6 <_sbrk_r+0x16>
  4055b4:	bd38      	pop	{r3, r4, r5, pc}
  4055b6:	6823      	ldr	r3, [r4, #0]
  4055b8:	2b00      	cmp	r3, #0
  4055ba:	d0fb      	beq.n	4055b4 <_sbrk_r+0x14>
  4055bc:	602b      	str	r3, [r5, #0]
  4055be:	bd38      	pop	{r3, r4, r5, pc}
  4055c0:	20400cd4 	.word	0x20400cd4
	...

00405600 <strlen>:
  405600:	f890 f000 	pld	[r0]
  405604:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405608:	f020 0107 	bic.w	r1, r0, #7
  40560c:	f06f 0c00 	mvn.w	ip, #0
  405610:	f010 0407 	ands.w	r4, r0, #7
  405614:	f891 f020 	pld	[r1, #32]
  405618:	f040 8049 	bne.w	4056ae <strlen+0xae>
  40561c:	f04f 0400 	mov.w	r4, #0
  405620:	f06f 0007 	mvn.w	r0, #7
  405624:	e9d1 2300 	ldrd	r2, r3, [r1]
  405628:	f891 f040 	pld	[r1, #64]	; 0x40
  40562c:	f100 0008 	add.w	r0, r0, #8
  405630:	fa82 f24c 	uadd8	r2, r2, ip
  405634:	faa4 f28c 	sel	r2, r4, ip
  405638:	fa83 f34c 	uadd8	r3, r3, ip
  40563c:	faa2 f38c 	sel	r3, r2, ip
  405640:	bb4b      	cbnz	r3, 405696 <strlen+0x96>
  405642:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405646:	fa82 f24c 	uadd8	r2, r2, ip
  40564a:	f100 0008 	add.w	r0, r0, #8
  40564e:	faa4 f28c 	sel	r2, r4, ip
  405652:	fa83 f34c 	uadd8	r3, r3, ip
  405656:	faa2 f38c 	sel	r3, r2, ip
  40565a:	b9e3      	cbnz	r3, 405696 <strlen+0x96>
  40565c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405660:	fa82 f24c 	uadd8	r2, r2, ip
  405664:	f100 0008 	add.w	r0, r0, #8
  405668:	faa4 f28c 	sel	r2, r4, ip
  40566c:	fa83 f34c 	uadd8	r3, r3, ip
  405670:	faa2 f38c 	sel	r3, r2, ip
  405674:	b97b      	cbnz	r3, 405696 <strlen+0x96>
  405676:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40567a:	f101 0120 	add.w	r1, r1, #32
  40567e:	fa82 f24c 	uadd8	r2, r2, ip
  405682:	f100 0008 	add.w	r0, r0, #8
  405686:	faa4 f28c 	sel	r2, r4, ip
  40568a:	fa83 f34c 	uadd8	r3, r3, ip
  40568e:	faa2 f38c 	sel	r3, r2, ip
  405692:	2b00      	cmp	r3, #0
  405694:	d0c6      	beq.n	405624 <strlen+0x24>
  405696:	2a00      	cmp	r2, #0
  405698:	bf04      	itt	eq
  40569a:	3004      	addeq	r0, #4
  40569c:	461a      	moveq	r2, r3
  40569e:	ba12      	rev	r2, r2
  4056a0:	fab2 f282 	clz	r2, r2
  4056a4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4056a8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4056ac:	4770      	bx	lr
  4056ae:	e9d1 2300 	ldrd	r2, r3, [r1]
  4056b2:	f004 0503 	and.w	r5, r4, #3
  4056b6:	f1c4 0000 	rsb	r0, r4, #0
  4056ba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4056be:	f014 0f04 	tst.w	r4, #4
  4056c2:	f891 f040 	pld	[r1, #64]	; 0x40
  4056c6:	fa0c f505 	lsl.w	r5, ip, r5
  4056ca:	ea62 0205 	orn	r2, r2, r5
  4056ce:	bf1c      	itt	ne
  4056d0:	ea63 0305 	ornne	r3, r3, r5
  4056d4:	4662      	movne	r2, ip
  4056d6:	f04f 0400 	mov.w	r4, #0
  4056da:	e7a9      	b.n	405630 <strlen+0x30>

004056dc <__ssprint_r>:
  4056dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056e0:	6893      	ldr	r3, [r2, #8]
  4056e2:	b083      	sub	sp, #12
  4056e4:	4690      	mov	r8, r2
  4056e6:	2b00      	cmp	r3, #0
  4056e8:	d070      	beq.n	4057cc <__ssprint_r+0xf0>
  4056ea:	4682      	mov	sl, r0
  4056ec:	460c      	mov	r4, r1
  4056ee:	6817      	ldr	r7, [r2, #0]
  4056f0:	688d      	ldr	r5, [r1, #8]
  4056f2:	6808      	ldr	r0, [r1, #0]
  4056f4:	e042      	b.n	40577c <__ssprint_r+0xa0>
  4056f6:	89a3      	ldrh	r3, [r4, #12]
  4056f8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4056fc:	d02e      	beq.n	40575c <__ssprint_r+0x80>
  4056fe:	6965      	ldr	r5, [r4, #20]
  405700:	6921      	ldr	r1, [r4, #16]
  405702:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405706:	eba0 0b01 	sub.w	fp, r0, r1
  40570a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40570e:	f10b 0001 	add.w	r0, fp, #1
  405712:	106d      	asrs	r5, r5, #1
  405714:	4430      	add	r0, r6
  405716:	42a8      	cmp	r0, r5
  405718:	462a      	mov	r2, r5
  40571a:	bf84      	itt	hi
  40571c:	4605      	movhi	r5, r0
  40571e:	462a      	movhi	r2, r5
  405720:	055b      	lsls	r3, r3, #21
  405722:	d538      	bpl.n	405796 <__ssprint_r+0xba>
  405724:	4611      	mov	r1, r2
  405726:	4650      	mov	r0, sl
  405728:	f7ff f898 	bl	40485c <_malloc_r>
  40572c:	2800      	cmp	r0, #0
  40572e:	d03c      	beq.n	4057aa <__ssprint_r+0xce>
  405730:	465a      	mov	r2, fp
  405732:	6921      	ldr	r1, [r4, #16]
  405734:	9001      	str	r0, [sp, #4]
  405736:	f7ff fb93 	bl	404e60 <memcpy>
  40573a:	89a2      	ldrh	r2, [r4, #12]
  40573c:	9b01      	ldr	r3, [sp, #4]
  40573e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405742:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405746:	81a2      	strh	r2, [r4, #12]
  405748:	eba5 020b 	sub.w	r2, r5, fp
  40574c:	eb03 000b 	add.w	r0, r3, fp
  405750:	6165      	str	r5, [r4, #20]
  405752:	6123      	str	r3, [r4, #16]
  405754:	6020      	str	r0, [r4, #0]
  405756:	60a2      	str	r2, [r4, #8]
  405758:	4635      	mov	r5, r6
  40575a:	46b3      	mov	fp, r6
  40575c:	465a      	mov	r2, fp
  40575e:	4649      	mov	r1, r9
  405760:	f000 fa18 	bl	405b94 <memmove>
  405764:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405768:	68a2      	ldr	r2, [r4, #8]
  40576a:	6820      	ldr	r0, [r4, #0]
  40576c:	1b55      	subs	r5, r2, r5
  40576e:	4458      	add	r0, fp
  405770:	1b9e      	subs	r6, r3, r6
  405772:	60a5      	str	r5, [r4, #8]
  405774:	6020      	str	r0, [r4, #0]
  405776:	f8c8 6008 	str.w	r6, [r8, #8]
  40577a:	b33e      	cbz	r6, 4057cc <__ssprint_r+0xf0>
  40577c:	687e      	ldr	r6, [r7, #4]
  40577e:	463b      	mov	r3, r7
  405780:	3708      	adds	r7, #8
  405782:	2e00      	cmp	r6, #0
  405784:	d0fa      	beq.n	40577c <__ssprint_r+0xa0>
  405786:	42ae      	cmp	r6, r5
  405788:	f8d3 9000 	ldr.w	r9, [r3]
  40578c:	46ab      	mov	fp, r5
  40578e:	d2b2      	bcs.n	4056f6 <__ssprint_r+0x1a>
  405790:	4635      	mov	r5, r6
  405792:	46b3      	mov	fp, r6
  405794:	e7e2      	b.n	40575c <__ssprint_r+0x80>
  405796:	4650      	mov	r0, sl
  405798:	f000 fa60 	bl	405c5c <_realloc_r>
  40579c:	4603      	mov	r3, r0
  40579e:	2800      	cmp	r0, #0
  4057a0:	d1d2      	bne.n	405748 <__ssprint_r+0x6c>
  4057a2:	6921      	ldr	r1, [r4, #16]
  4057a4:	4650      	mov	r0, sl
  4057a6:	f000 f8f9 	bl	40599c <_free_r>
  4057aa:	230c      	movs	r3, #12
  4057ac:	f8ca 3000 	str.w	r3, [sl]
  4057b0:	89a3      	ldrh	r3, [r4, #12]
  4057b2:	2200      	movs	r2, #0
  4057b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4057b8:	f04f 30ff 	mov.w	r0, #4294967295
  4057bc:	81a3      	strh	r3, [r4, #12]
  4057be:	f8c8 2008 	str.w	r2, [r8, #8]
  4057c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4057c6:	b003      	add	sp, #12
  4057c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4057cc:	2000      	movs	r0, #0
  4057ce:	f8c8 0004 	str.w	r0, [r8, #4]
  4057d2:	b003      	add	sp, #12
  4057d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004057d8 <__register_exitproc>:
  4057d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4057dc:	4d2c      	ldr	r5, [pc, #176]	; (405890 <__register_exitproc+0xb8>)
  4057de:	4606      	mov	r6, r0
  4057e0:	6828      	ldr	r0, [r5, #0]
  4057e2:	4698      	mov	r8, r3
  4057e4:	460f      	mov	r7, r1
  4057e6:	4691      	mov	r9, r2
  4057e8:	f7ff f834 	bl	404854 <__retarget_lock_acquire_recursive>
  4057ec:	4b29      	ldr	r3, [pc, #164]	; (405894 <__register_exitproc+0xbc>)
  4057ee:	681c      	ldr	r4, [r3, #0]
  4057f0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4057f4:	2b00      	cmp	r3, #0
  4057f6:	d03e      	beq.n	405876 <__register_exitproc+0x9e>
  4057f8:	685a      	ldr	r2, [r3, #4]
  4057fa:	2a1f      	cmp	r2, #31
  4057fc:	dc1c      	bgt.n	405838 <__register_exitproc+0x60>
  4057fe:	f102 0e01 	add.w	lr, r2, #1
  405802:	b176      	cbz	r6, 405822 <__register_exitproc+0x4a>
  405804:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405808:	2401      	movs	r4, #1
  40580a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40580e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405812:	4094      	lsls	r4, r2
  405814:	4320      	orrs	r0, r4
  405816:	2e02      	cmp	r6, #2
  405818:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40581c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405820:	d023      	beq.n	40586a <__register_exitproc+0x92>
  405822:	3202      	adds	r2, #2
  405824:	f8c3 e004 	str.w	lr, [r3, #4]
  405828:	6828      	ldr	r0, [r5, #0]
  40582a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40582e:	f7ff f813 	bl	404858 <__retarget_lock_release_recursive>
  405832:	2000      	movs	r0, #0
  405834:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405838:	4b17      	ldr	r3, [pc, #92]	; (405898 <__register_exitproc+0xc0>)
  40583a:	b30b      	cbz	r3, 405880 <__register_exitproc+0xa8>
  40583c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405840:	f3af 8000 	nop.w
  405844:	4603      	mov	r3, r0
  405846:	b1d8      	cbz	r0, 405880 <__register_exitproc+0xa8>
  405848:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40584c:	6002      	str	r2, [r0, #0]
  40584e:	2100      	movs	r1, #0
  405850:	6041      	str	r1, [r0, #4]
  405852:	460a      	mov	r2, r1
  405854:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405858:	f04f 0e01 	mov.w	lr, #1
  40585c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405860:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405864:	2e00      	cmp	r6, #0
  405866:	d0dc      	beq.n	405822 <__register_exitproc+0x4a>
  405868:	e7cc      	b.n	405804 <__register_exitproc+0x2c>
  40586a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40586e:	430c      	orrs	r4, r1
  405870:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405874:	e7d5      	b.n	405822 <__register_exitproc+0x4a>
  405876:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40587a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40587e:	e7bb      	b.n	4057f8 <__register_exitproc+0x20>
  405880:	6828      	ldr	r0, [r5, #0]
  405882:	f7fe ffe9 	bl	404858 <__retarget_lock_release_recursive>
  405886:	f04f 30ff 	mov.w	r0, #4294967295
  40588a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40588e:	bf00      	nop
  405890:	20400450 	.word	0x20400450
  405894:	00406e78 	.word	0x00406e78
  405898:	00000000 	.word	0x00000000

0040589c <_calloc_r>:
  40589c:	b510      	push	{r4, lr}
  40589e:	fb02 f101 	mul.w	r1, r2, r1
  4058a2:	f7fe ffdb 	bl	40485c <_malloc_r>
  4058a6:	4604      	mov	r4, r0
  4058a8:	b1d8      	cbz	r0, 4058e2 <_calloc_r+0x46>
  4058aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4058ae:	f022 0203 	bic.w	r2, r2, #3
  4058b2:	3a04      	subs	r2, #4
  4058b4:	2a24      	cmp	r2, #36	; 0x24
  4058b6:	d818      	bhi.n	4058ea <_calloc_r+0x4e>
  4058b8:	2a13      	cmp	r2, #19
  4058ba:	d914      	bls.n	4058e6 <_calloc_r+0x4a>
  4058bc:	2300      	movs	r3, #0
  4058be:	2a1b      	cmp	r2, #27
  4058c0:	6003      	str	r3, [r0, #0]
  4058c2:	6043      	str	r3, [r0, #4]
  4058c4:	d916      	bls.n	4058f4 <_calloc_r+0x58>
  4058c6:	2a24      	cmp	r2, #36	; 0x24
  4058c8:	6083      	str	r3, [r0, #8]
  4058ca:	60c3      	str	r3, [r0, #12]
  4058cc:	bf11      	iteee	ne
  4058ce:	f100 0210 	addne.w	r2, r0, #16
  4058d2:	6103      	streq	r3, [r0, #16]
  4058d4:	6143      	streq	r3, [r0, #20]
  4058d6:	f100 0218 	addeq.w	r2, r0, #24
  4058da:	2300      	movs	r3, #0
  4058dc:	6013      	str	r3, [r2, #0]
  4058de:	6053      	str	r3, [r2, #4]
  4058e0:	6093      	str	r3, [r2, #8]
  4058e2:	4620      	mov	r0, r4
  4058e4:	bd10      	pop	{r4, pc}
  4058e6:	4602      	mov	r2, r0
  4058e8:	e7f7      	b.n	4058da <_calloc_r+0x3e>
  4058ea:	2100      	movs	r1, #0
  4058ec:	f7fc fd18 	bl	402320 <memset>
  4058f0:	4620      	mov	r0, r4
  4058f2:	bd10      	pop	{r4, pc}
  4058f4:	f100 0208 	add.w	r2, r0, #8
  4058f8:	e7ef      	b.n	4058da <_calloc_r+0x3e>
  4058fa:	bf00      	nop

004058fc <_malloc_trim_r>:
  4058fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4058fe:	4f24      	ldr	r7, [pc, #144]	; (405990 <_malloc_trim_r+0x94>)
  405900:	460c      	mov	r4, r1
  405902:	4606      	mov	r6, r0
  405904:	f7ff fb46 	bl	404f94 <__malloc_lock>
  405908:	68bb      	ldr	r3, [r7, #8]
  40590a:	685d      	ldr	r5, [r3, #4]
  40590c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405910:	310f      	adds	r1, #15
  405912:	f025 0503 	bic.w	r5, r5, #3
  405916:	4429      	add	r1, r5
  405918:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40591c:	f021 010f 	bic.w	r1, r1, #15
  405920:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405924:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405928:	db07      	blt.n	40593a <_malloc_trim_r+0x3e>
  40592a:	2100      	movs	r1, #0
  40592c:	4630      	mov	r0, r6
  40592e:	f7ff fe37 	bl	4055a0 <_sbrk_r>
  405932:	68bb      	ldr	r3, [r7, #8]
  405934:	442b      	add	r3, r5
  405936:	4298      	cmp	r0, r3
  405938:	d004      	beq.n	405944 <_malloc_trim_r+0x48>
  40593a:	4630      	mov	r0, r6
  40593c:	f7ff fb30 	bl	404fa0 <__malloc_unlock>
  405940:	2000      	movs	r0, #0
  405942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405944:	4261      	negs	r1, r4
  405946:	4630      	mov	r0, r6
  405948:	f7ff fe2a 	bl	4055a0 <_sbrk_r>
  40594c:	3001      	adds	r0, #1
  40594e:	d00d      	beq.n	40596c <_malloc_trim_r+0x70>
  405950:	4b10      	ldr	r3, [pc, #64]	; (405994 <_malloc_trim_r+0x98>)
  405952:	68ba      	ldr	r2, [r7, #8]
  405954:	6819      	ldr	r1, [r3, #0]
  405956:	1b2d      	subs	r5, r5, r4
  405958:	f045 0501 	orr.w	r5, r5, #1
  40595c:	4630      	mov	r0, r6
  40595e:	1b09      	subs	r1, r1, r4
  405960:	6055      	str	r5, [r2, #4]
  405962:	6019      	str	r1, [r3, #0]
  405964:	f7ff fb1c 	bl	404fa0 <__malloc_unlock>
  405968:	2001      	movs	r0, #1
  40596a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40596c:	2100      	movs	r1, #0
  40596e:	4630      	mov	r0, r6
  405970:	f7ff fe16 	bl	4055a0 <_sbrk_r>
  405974:	68ba      	ldr	r2, [r7, #8]
  405976:	1a83      	subs	r3, r0, r2
  405978:	2b0f      	cmp	r3, #15
  40597a:	ddde      	ble.n	40593a <_malloc_trim_r+0x3e>
  40597c:	4c06      	ldr	r4, [pc, #24]	; (405998 <_malloc_trim_r+0x9c>)
  40597e:	4905      	ldr	r1, [pc, #20]	; (405994 <_malloc_trim_r+0x98>)
  405980:	6824      	ldr	r4, [r4, #0]
  405982:	f043 0301 	orr.w	r3, r3, #1
  405986:	1b00      	subs	r0, r0, r4
  405988:	6053      	str	r3, [r2, #4]
  40598a:	6008      	str	r0, [r1, #0]
  40598c:	e7d5      	b.n	40593a <_malloc_trim_r+0x3e>
  40598e:	bf00      	nop
  405990:	20400454 	.word	0x20400454
  405994:	20400c7c 	.word	0x20400c7c
  405998:	2040085c 	.word	0x2040085c

0040599c <_free_r>:
  40599c:	2900      	cmp	r1, #0
  40599e:	d044      	beq.n	405a2a <_free_r+0x8e>
  4059a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4059a4:	460d      	mov	r5, r1
  4059a6:	4680      	mov	r8, r0
  4059a8:	f7ff faf4 	bl	404f94 <__malloc_lock>
  4059ac:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4059b0:	4969      	ldr	r1, [pc, #420]	; (405b58 <_free_r+0x1bc>)
  4059b2:	f027 0301 	bic.w	r3, r7, #1
  4059b6:	f1a5 0408 	sub.w	r4, r5, #8
  4059ba:	18e2      	adds	r2, r4, r3
  4059bc:	688e      	ldr	r6, [r1, #8]
  4059be:	6850      	ldr	r0, [r2, #4]
  4059c0:	42b2      	cmp	r2, r6
  4059c2:	f020 0003 	bic.w	r0, r0, #3
  4059c6:	d05e      	beq.n	405a86 <_free_r+0xea>
  4059c8:	07fe      	lsls	r6, r7, #31
  4059ca:	6050      	str	r0, [r2, #4]
  4059cc:	d40b      	bmi.n	4059e6 <_free_r+0x4a>
  4059ce:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4059d2:	1be4      	subs	r4, r4, r7
  4059d4:	f101 0e08 	add.w	lr, r1, #8
  4059d8:	68a5      	ldr	r5, [r4, #8]
  4059da:	4575      	cmp	r5, lr
  4059dc:	443b      	add	r3, r7
  4059de:	d06d      	beq.n	405abc <_free_r+0x120>
  4059e0:	68e7      	ldr	r7, [r4, #12]
  4059e2:	60ef      	str	r7, [r5, #12]
  4059e4:	60bd      	str	r5, [r7, #8]
  4059e6:	1815      	adds	r5, r2, r0
  4059e8:	686d      	ldr	r5, [r5, #4]
  4059ea:	07ed      	lsls	r5, r5, #31
  4059ec:	d53e      	bpl.n	405a6c <_free_r+0xd0>
  4059ee:	f043 0201 	orr.w	r2, r3, #1
  4059f2:	6062      	str	r2, [r4, #4]
  4059f4:	50e3      	str	r3, [r4, r3]
  4059f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4059fa:	d217      	bcs.n	405a2c <_free_r+0x90>
  4059fc:	08db      	lsrs	r3, r3, #3
  4059fe:	1c58      	adds	r0, r3, #1
  405a00:	109a      	asrs	r2, r3, #2
  405a02:	684d      	ldr	r5, [r1, #4]
  405a04:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405a08:	60a7      	str	r7, [r4, #8]
  405a0a:	2301      	movs	r3, #1
  405a0c:	4093      	lsls	r3, r2
  405a0e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405a12:	432b      	orrs	r3, r5
  405a14:	3a08      	subs	r2, #8
  405a16:	60e2      	str	r2, [r4, #12]
  405a18:	604b      	str	r3, [r1, #4]
  405a1a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405a1e:	60fc      	str	r4, [r7, #12]
  405a20:	4640      	mov	r0, r8
  405a22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405a26:	f7ff babb 	b.w	404fa0 <__malloc_unlock>
  405a2a:	4770      	bx	lr
  405a2c:	0a5a      	lsrs	r2, r3, #9
  405a2e:	2a04      	cmp	r2, #4
  405a30:	d852      	bhi.n	405ad8 <_free_r+0x13c>
  405a32:	099a      	lsrs	r2, r3, #6
  405a34:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405a38:	00ff      	lsls	r7, r7, #3
  405a3a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405a3e:	19c8      	adds	r0, r1, r7
  405a40:	59ca      	ldr	r2, [r1, r7]
  405a42:	3808      	subs	r0, #8
  405a44:	4290      	cmp	r0, r2
  405a46:	d04f      	beq.n	405ae8 <_free_r+0x14c>
  405a48:	6851      	ldr	r1, [r2, #4]
  405a4a:	f021 0103 	bic.w	r1, r1, #3
  405a4e:	428b      	cmp	r3, r1
  405a50:	d232      	bcs.n	405ab8 <_free_r+0x11c>
  405a52:	6892      	ldr	r2, [r2, #8]
  405a54:	4290      	cmp	r0, r2
  405a56:	d1f7      	bne.n	405a48 <_free_r+0xac>
  405a58:	68c3      	ldr	r3, [r0, #12]
  405a5a:	60a0      	str	r0, [r4, #8]
  405a5c:	60e3      	str	r3, [r4, #12]
  405a5e:	609c      	str	r4, [r3, #8]
  405a60:	60c4      	str	r4, [r0, #12]
  405a62:	4640      	mov	r0, r8
  405a64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405a68:	f7ff ba9a 	b.w	404fa0 <__malloc_unlock>
  405a6c:	6895      	ldr	r5, [r2, #8]
  405a6e:	4f3b      	ldr	r7, [pc, #236]	; (405b5c <_free_r+0x1c0>)
  405a70:	42bd      	cmp	r5, r7
  405a72:	4403      	add	r3, r0
  405a74:	d040      	beq.n	405af8 <_free_r+0x15c>
  405a76:	68d0      	ldr	r0, [r2, #12]
  405a78:	60e8      	str	r0, [r5, #12]
  405a7a:	f043 0201 	orr.w	r2, r3, #1
  405a7e:	6085      	str	r5, [r0, #8]
  405a80:	6062      	str	r2, [r4, #4]
  405a82:	50e3      	str	r3, [r4, r3]
  405a84:	e7b7      	b.n	4059f6 <_free_r+0x5a>
  405a86:	07ff      	lsls	r7, r7, #31
  405a88:	4403      	add	r3, r0
  405a8a:	d407      	bmi.n	405a9c <_free_r+0x100>
  405a8c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405a90:	1aa4      	subs	r4, r4, r2
  405a92:	4413      	add	r3, r2
  405a94:	68a0      	ldr	r0, [r4, #8]
  405a96:	68e2      	ldr	r2, [r4, #12]
  405a98:	60c2      	str	r2, [r0, #12]
  405a9a:	6090      	str	r0, [r2, #8]
  405a9c:	4a30      	ldr	r2, [pc, #192]	; (405b60 <_free_r+0x1c4>)
  405a9e:	6812      	ldr	r2, [r2, #0]
  405aa0:	f043 0001 	orr.w	r0, r3, #1
  405aa4:	4293      	cmp	r3, r2
  405aa6:	6060      	str	r0, [r4, #4]
  405aa8:	608c      	str	r4, [r1, #8]
  405aaa:	d3b9      	bcc.n	405a20 <_free_r+0x84>
  405aac:	4b2d      	ldr	r3, [pc, #180]	; (405b64 <_free_r+0x1c8>)
  405aae:	4640      	mov	r0, r8
  405ab0:	6819      	ldr	r1, [r3, #0]
  405ab2:	f7ff ff23 	bl	4058fc <_malloc_trim_r>
  405ab6:	e7b3      	b.n	405a20 <_free_r+0x84>
  405ab8:	4610      	mov	r0, r2
  405aba:	e7cd      	b.n	405a58 <_free_r+0xbc>
  405abc:	1811      	adds	r1, r2, r0
  405abe:	6849      	ldr	r1, [r1, #4]
  405ac0:	07c9      	lsls	r1, r1, #31
  405ac2:	d444      	bmi.n	405b4e <_free_r+0x1b2>
  405ac4:	6891      	ldr	r1, [r2, #8]
  405ac6:	68d2      	ldr	r2, [r2, #12]
  405ac8:	60ca      	str	r2, [r1, #12]
  405aca:	4403      	add	r3, r0
  405acc:	f043 0001 	orr.w	r0, r3, #1
  405ad0:	6091      	str	r1, [r2, #8]
  405ad2:	6060      	str	r0, [r4, #4]
  405ad4:	50e3      	str	r3, [r4, r3]
  405ad6:	e7a3      	b.n	405a20 <_free_r+0x84>
  405ad8:	2a14      	cmp	r2, #20
  405ada:	d816      	bhi.n	405b0a <_free_r+0x16e>
  405adc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405ae0:	00ff      	lsls	r7, r7, #3
  405ae2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405ae6:	e7aa      	b.n	405a3e <_free_r+0xa2>
  405ae8:	10aa      	asrs	r2, r5, #2
  405aea:	2301      	movs	r3, #1
  405aec:	684d      	ldr	r5, [r1, #4]
  405aee:	4093      	lsls	r3, r2
  405af0:	432b      	orrs	r3, r5
  405af2:	604b      	str	r3, [r1, #4]
  405af4:	4603      	mov	r3, r0
  405af6:	e7b0      	b.n	405a5a <_free_r+0xbe>
  405af8:	f043 0201 	orr.w	r2, r3, #1
  405afc:	614c      	str	r4, [r1, #20]
  405afe:	610c      	str	r4, [r1, #16]
  405b00:	60e5      	str	r5, [r4, #12]
  405b02:	60a5      	str	r5, [r4, #8]
  405b04:	6062      	str	r2, [r4, #4]
  405b06:	50e3      	str	r3, [r4, r3]
  405b08:	e78a      	b.n	405a20 <_free_r+0x84>
  405b0a:	2a54      	cmp	r2, #84	; 0x54
  405b0c:	d806      	bhi.n	405b1c <_free_r+0x180>
  405b0e:	0b1a      	lsrs	r2, r3, #12
  405b10:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405b14:	00ff      	lsls	r7, r7, #3
  405b16:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405b1a:	e790      	b.n	405a3e <_free_r+0xa2>
  405b1c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405b20:	d806      	bhi.n	405b30 <_free_r+0x194>
  405b22:	0bda      	lsrs	r2, r3, #15
  405b24:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405b28:	00ff      	lsls	r7, r7, #3
  405b2a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405b2e:	e786      	b.n	405a3e <_free_r+0xa2>
  405b30:	f240 5054 	movw	r0, #1364	; 0x554
  405b34:	4282      	cmp	r2, r0
  405b36:	d806      	bhi.n	405b46 <_free_r+0x1aa>
  405b38:	0c9a      	lsrs	r2, r3, #18
  405b3a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405b3e:	00ff      	lsls	r7, r7, #3
  405b40:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405b44:	e77b      	b.n	405a3e <_free_r+0xa2>
  405b46:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405b4a:	257e      	movs	r5, #126	; 0x7e
  405b4c:	e777      	b.n	405a3e <_free_r+0xa2>
  405b4e:	f043 0101 	orr.w	r1, r3, #1
  405b52:	6061      	str	r1, [r4, #4]
  405b54:	6013      	str	r3, [r2, #0]
  405b56:	e763      	b.n	405a20 <_free_r+0x84>
  405b58:	20400454 	.word	0x20400454
  405b5c:	2040045c 	.word	0x2040045c
  405b60:	20400860 	.word	0x20400860
  405b64:	20400cac 	.word	0x20400cac

00405b68 <__ascii_mbtowc>:
  405b68:	b082      	sub	sp, #8
  405b6a:	b149      	cbz	r1, 405b80 <__ascii_mbtowc+0x18>
  405b6c:	b15a      	cbz	r2, 405b86 <__ascii_mbtowc+0x1e>
  405b6e:	b16b      	cbz	r3, 405b8c <__ascii_mbtowc+0x24>
  405b70:	7813      	ldrb	r3, [r2, #0]
  405b72:	600b      	str	r3, [r1, #0]
  405b74:	7812      	ldrb	r2, [r2, #0]
  405b76:	1c10      	adds	r0, r2, #0
  405b78:	bf18      	it	ne
  405b7a:	2001      	movne	r0, #1
  405b7c:	b002      	add	sp, #8
  405b7e:	4770      	bx	lr
  405b80:	a901      	add	r1, sp, #4
  405b82:	2a00      	cmp	r2, #0
  405b84:	d1f3      	bne.n	405b6e <__ascii_mbtowc+0x6>
  405b86:	4610      	mov	r0, r2
  405b88:	b002      	add	sp, #8
  405b8a:	4770      	bx	lr
  405b8c:	f06f 0001 	mvn.w	r0, #1
  405b90:	e7f4      	b.n	405b7c <__ascii_mbtowc+0x14>
  405b92:	bf00      	nop

00405b94 <memmove>:
  405b94:	4288      	cmp	r0, r1
  405b96:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b98:	d90d      	bls.n	405bb6 <memmove+0x22>
  405b9a:	188b      	adds	r3, r1, r2
  405b9c:	4298      	cmp	r0, r3
  405b9e:	d20a      	bcs.n	405bb6 <memmove+0x22>
  405ba0:	1884      	adds	r4, r0, r2
  405ba2:	2a00      	cmp	r2, #0
  405ba4:	d051      	beq.n	405c4a <memmove+0xb6>
  405ba6:	4622      	mov	r2, r4
  405ba8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405bac:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405bb0:	4299      	cmp	r1, r3
  405bb2:	d1f9      	bne.n	405ba8 <memmove+0x14>
  405bb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405bb6:	2a0f      	cmp	r2, #15
  405bb8:	d948      	bls.n	405c4c <memmove+0xb8>
  405bba:	ea41 0300 	orr.w	r3, r1, r0
  405bbe:	079b      	lsls	r3, r3, #30
  405bc0:	d146      	bne.n	405c50 <memmove+0xbc>
  405bc2:	f100 0410 	add.w	r4, r0, #16
  405bc6:	f101 0310 	add.w	r3, r1, #16
  405bca:	4615      	mov	r5, r2
  405bcc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405bd0:	f844 6c10 	str.w	r6, [r4, #-16]
  405bd4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405bd8:	f844 6c0c 	str.w	r6, [r4, #-12]
  405bdc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405be0:	f844 6c08 	str.w	r6, [r4, #-8]
  405be4:	3d10      	subs	r5, #16
  405be6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405bea:	f844 6c04 	str.w	r6, [r4, #-4]
  405bee:	2d0f      	cmp	r5, #15
  405bf0:	f103 0310 	add.w	r3, r3, #16
  405bf4:	f104 0410 	add.w	r4, r4, #16
  405bf8:	d8e8      	bhi.n	405bcc <memmove+0x38>
  405bfa:	f1a2 0310 	sub.w	r3, r2, #16
  405bfe:	f023 030f 	bic.w	r3, r3, #15
  405c02:	f002 0e0f 	and.w	lr, r2, #15
  405c06:	3310      	adds	r3, #16
  405c08:	f1be 0f03 	cmp.w	lr, #3
  405c0c:	4419      	add	r1, r3
  405c0e:	4403      	add	r3, r0
  405c10:	d921      	bls.n	405c56 <memmove+0xc2>
  405c12:	1f1e      	subs	r6, r3, #4
  405c14:	460d      	mov	r5, r1
  405c16:	4674      	mov	r4, lr
  405c18:	3c04      	subs	r4, #4
  405c1a:	f855 7b04 	ldr.w	r7, [r5], #4
  405c1e:	f846 7f04 	str.w	r7, [r6, #4]!
  405c22:	2c03      	cmp	r4, #3
  405c24:	d8f8      	bhi.n	405c18 <memmove+0x84>
  405c26:	f1ae 0404 	sub.w	r4, lr, #4
  405c2a:	f024 0403 	bic.w	r4, r4, #3
  405c2e:	3404      	adds	r4, #4
  405c30:	4421      	add	r1, r4
  405c32:	4423      	add	r3, r4
  405c34:	f002 0203 	and.w	r2, r2, #3
  405c38:	b162      	cbz	r2, 405c54 <memmove+0xc0>
  405c3a:	3b01      	subs	r3, #1
  405c3c:	440a      	add	r2, r1
  405c3e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405c42:	f803 4f01 	strb.w	r4, [r3, #1]!
  405c46:	428a      	cmp	r2, r1
  405c48:	d1f9      	bne.n	405c3e <memmove+0xaa>
  405c4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c4c:	4603      	mov	r3, r0
  405c4e:	e7f3      	b.n	405c38 <memmove+0xa4>
  405c50:	4603      	mov	r3, r0
  405c52:	e7f2      	b.n	405c3a <memmove+0xa6>
  405c54:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c56:	4672      	mov	r2, lr
  405c58:	e7ee      	b.n	405c38 <memmove+0xa4>
  405c5a:	bf00      	nop

00405c5c <_realloc_r>:
  405c5c:	2900      	cmp	r1, #0
  405c5e:	f000 8095 	beq.w	405d8c <_realloc_r+0x130>
  405c62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405c66:	460d      	mov	r5, r1
  405c68:	4616      	mov	r6, r2
  405c6a:	b083      	sub	sp, #12
  405c6c:	4680      	mov	r8, r0
  405c6e:	f106 070b 	add.w	r7, r6, #11
  405c72:	f7ff f98f 	bl	404f94 <__malloc_lock>
  405c76:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405c7a:	2f16      	cmp	r7, #22
  405c7c:	f02e 0403 	bic.w	r4, lr, #3
  405c80:	f1a5 0908 	sub.w	r9, r5, #8
  405c84:	d83c      	bhi.n	405d00 <_realloc_r+0xa4>
  405c86:	2210      	movs	r2, #16
  405c88:	4617      	mov	r7, r2
  405c8a:	42be      	cmp	r6, r7
  405c8c:	d83d      	bhi.n	405d0a <_realloc_r+0xae>
  405c8e:	4294      	cmp	r4, r2
  405c90:	da43      	bge.n	405d1a <_realloc_r+0xbe>
  405c92:	4bc4      	ldr	r3, [pc, #784]	; (405fa4 <_realloc_r+0x348>)
  405c94:	6899      	ldr	r1, [r3, #8]
  405c96:	eb09 0004 	add.w	r0, r9, r4
  405c9a:	4288      	cmp	r0, r1
  405c9c:	f000 80b4 	beq.w	405e08 <_realloc_r+0x1ac>
  405ca0:	6843      	ldr	r3, [r0, #4]
  405ca2:	f023 0101 	bic.w	r1, r3, #1
  405ca6:	4401      	add	r1, r0
  405ca8:	6849      	ldr	r1, [r1, #4]
  405caa:	07c9      	lsls	r1, r1, #31
  405cac:	d54c      	bpl.n	405d48 <_realloc_r+0xec>
  405cae:	f01e 0f01 	tst.w	lr, #1
  405cb2:	f000 809b 	beq.w	405dec <_realloc_r+0x190>
  405cb6:	4631      	mov	r1, r6
  405cb8:	4640      	mov	r0, r8
  405cba:	f7fe fdcf 	bl	40485c <_malloc_r>
  405cbe:	4606      	mov	r6, r0
  405cc0:	2800      	cmp	r0, #0
  405cc2:	d03a      	beq.n	405d3a <_realloc_r+0xde>
  405cc4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405cc8:	f023 0301 	bic.w	r3, r3, #1
  405ccc:	444b      	add	r3, r9
  405cce:	f1a0 0208 	sub.w	r2, r0, #8
  405cd2:	429a      	cmp	r2, r3
  405cd4:	f000 8121 	beq.w	405f1a <_realloc_r+0x2be>
  405cd8:	1f22      	subs	r2, r4, #4
  405cda:	2a24      	cmp	r2, #36	; 0x24
  405cdc:	f200 8107 	bhi.w	405eee <_realloc_r+0x292>
  405ce0:	2a13      	cmp	r2, #19
  405ce2:	f200 80db 	bhi.w	405e9c <_realloc_r+0x240>
  405ce6:	4603      	mov	r3, r0
  405ce8:	462a      	mov	r2, r5
  405cea:	6811      	ldr	r1, [r2, #0]
  405cec:	6019      	str	r1, [r3, #0]
  405cee:	6851      	ldr	r1, [r2, #4]
  405cf0:	6059      	str	r1, [r3, #4]
  405cf2:	6892      	ldr	r2, [r2, #8]
  405cf4:	609a      	str	r2, [r3, #8]
  405cf6:	4629      	mov	r1, r5
  405cf8:	4640      	mov	r0, r8
  405cfa:	f7ff fe4f 	bl	40599c <_free_r>
  405cfe:	e01c      	b.n	405d3a <_realloc_r+0xde>
  405d00:	f027 0707 	bic.w	r7, r7, #7
  405d04:	2f00      	cmp	r7, #0
  405d06:	463a      	mov	r2, r7
  405d08:	dabf      	bge.n	405c8a <_realloc_r+0x2e>
  405d0a:	2600      	movs	r6, #0
  405d0c:	230c      	movs	r3, #12
  405d0e:	4630      	mov	r0, r6
  405d10:	f8c8 3000 	str.w	r3, [r8]
  405d14:	b003      	add	sp, #12
  405d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d1a:	462e      	mov	r6, r5
  405d1c:	1be3      	subs	r3, r4, r7
  405d1e:	2b0f      	cmp	r3, #15
  405d20:	d81e      	bhi.n	405d60 <_realloc_r+0x104>
  405d22:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405d26:	f003 0301 	and.w	r3, r3, #1
  405d2a:	4323      	orrs	r3, r4
  405d2c:	444c      	add	r4, r9
  405d2e:	f8c9 3004 	str.w	r3, [r9, #4]
  405d32:	6863      	ldr	r3, [r4, #4]
  405d34:	f043 0301 	orr.w	r3, r3, #1
  405d38:	6063      	str	r3, [r4, #4]
  405d3a:	4640      	mov	r0, r8
  405d3c:	f7ff f930 	bl	404fa0 <__malloc_unlock>
  405d40:	4630      	mov	r0, r6
  405d42:	b003      	add	sp, #12
  405d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d48:	f023 0303 	bic.w	r3, r3, #3
  405d4c:	18e1      	adds	r1, r4, r3
  405d4e:	4291      	cmp	r1, r2
  405d50:	db1f      	blt.n	405d92 <_realloc_r+0x136>
  405d52:	68c3      	ldr	r3, [r0, #12]
  405d54:	6882      	ldr	r2, [r0, #8]
  405d56:	462e      	mov	r6, r5
  405d58:	60d3      	str	r3, [r2, #12]
  405d5a:	460c      	mov	r4, r1
  405d5c:	609a      	str	r2, [r3, #8]
  405d5e:	e7dd      	b.n	405d1c <_realloc_r+0xc0>
  405d60:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405d64:	eb09 0107 	add.w	r1, r9, r7
  405d68:	f002 0201 	and.w	r2, r2, #1
  405d6c:	444c      	add	r4, r9
  405d6e:	f043 0301 	orr.w	r3, r3, #1
  405d72:	4317      	orrs	r7, r2
  405d74:	f8c9 7004 	str.w	r7, [r9, #4]
  405d78:	604b      	str	r3, [r1, #4]
  405d7a:	6863      	ldr	r3, [r4, #4]
  405d7c:	f043 0301 	orr.w	r3, r3, #1
  405d80:	3108      	adds	r1, #8
  405d82:	6063      	str	r3, [r4, #4]
  405d84:	4640      	mov	r0, r8
  405d86:	f7ff fe09 	bl	40599c <_free_r>
  405d8a:	e7d6      	b.n	405d3a <_realloc_r+0xde>
  405d8c:	4611      	mov	r1, r2
  405d8e:	f7fe bd65 	b.w	40485c <_malloc_r>
  405d92:	f01e 0f01 	tst.w	lr, #1
  405d96:	d18e      	bne.n	405cb6 <_realloc_r+0x5a>
  405d98:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405d9c:	eba9 0a01 	sub.w	sl, r9, r1
  405da0:	f8da 1004 	ldr.w	r1, [sl, #4]
  405da4:	f021 0103 	bic.w	r1, r1, #3
  405da8:	440b      	add	r3, r1
  405daa:	4423      	add	r3, r4
  405dac:	4293      	cmp	r3, r2
  405dae:	db25      	blt.n	405dfc <_realloc_r+0x1a0>
  405db0:	68c2      	ldr	r2, [r0, #12]
  405db2:	6881      	ldr	r1, [r0, #8]
  405db4:	4656      	mov	r6, sl
  405db6:	60ca      	str	r2, [r1, #12]
  405db8:	6091      	str	r1, [r2, #8]
  405dba:	f8da 100c 	ldr.w	r1, [sl, #12]
  405dbe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405dc2:	1f22      	subs	r2, r4, #4
  405dc4:	2a24      	cmp	r2, #36	; 0x24
  405dc6:	60c1      	str	r1, [r0, #12]
  405dc8:	6088      	str	r0, [r1, #8]
  405dca:	f200 8094 	bhi.w	405ef6 <_realloc_r+0x29a>
  405dce:	2a13      	cmp	r2, #19
  405dd0:	d96f      	bls.n	405eb2 <_realloc_r+0x256>
  405dd2:	6829      	ldr	r1, [r5, #0]
  405dd4:	f8ca 1008 	str.w	r1, [sl, #8]
  405dd8:	6869      	ldr	r1, [r5, #4]
  405dda:	f8ca 100c 	str.w	r1, [sl, #12]
  405dde:	2a1b      	cmp	r2, #27
  405de0:	f200 80a2 	bhi.w	405f28 <_realloc_r+0x2cc>
  405de4:	3508      	adds	r5, #8
  405de6:	f10a 0210 	add.w	r2, sl, #16
  405dea:	e063      	b.n	405eb4 <_realloc_r+0x258>
  405dec:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405df0:	eba9 0a03 	sub.w	sl, r9, r3
  405df4:	f8da 1004 	ldr.w	r1, [sl, #4]
  405df8:	f021 0103 	bic.w	r1, r1, #3
  405dfc:	1863      	adds	r3, r4, r1
  405dfe:	4293      	cmp	r3, r2
  405e00:	f6ff af59 	blt.w	405cb6 <_realloc_r+0x5a>
  405e04:	4656      	mov	r6, sl
  405e06:	e7d8      	b.n	405dba <_realloc_r+0x15e>
  405e08:	6841      	ldr	r1, [r0, #4]
  405e0a:	f021 0b03 	bic.w	fp, r1, #3
  405e0e:	44a3      	add	fp, r4
  405e10:	f107 0010 	add.w	r0, r7, #16
  405e14:	4583      	cmp	fp, r0
  405e16:	da56      	bge.n	405ec6 <_realloc_r+0x26a>
  405e18:	f01e 0f01 	tst.w	lr, #1
  405e1c:	f47f af4b 	bne.w	405cb6 <_realloc_r+0x5a>
  405e20:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405e24:	eba9 0a01 	sub.w	sl, r9, r1
  405e28:	f8da 1004 	ldr.w	r1, [sl, #4]
  405e2c:	f021 0103 	bic.w	r1, r1, #3
  405e30:	448b      	add	fp, r1
  405e32:	4558      	cmp	r0, fp
  405e34:	dce2      	bgt.n	405dfc <_realloc_r+0x1a0>
  405e36:	4656      	mov	r6, sl
  405e38:	f8da 100c 	ldr.w	r1, [sl, #12]
  405e3c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405e40:	1f22      	subs	r2, r4, #4
  405e42:	2a24      	cmp	r2, #36	; 0x24
  405e44:	60c1      	str	r1, [r0, #12]
  405e46:	6088      	str	r0, [r1, #8]
  405e48:	f200 808f 	bhi.w	405f6a <_realloc_r+0x30e>
  405e4c:	2a13      	cmp	r2, #19
  405e4e:	f240 808a 	bls.w	405f66 <_realloc_r+0x30a>
  405e52:	6829      	ldr	r1, [r5, #0]
  405e54:	f8ca 1008 	str.w	r1, [sl, #8]
  405e58:	6869      	ldr	r1, [r5, #4]
  405e5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405e5e:	2a1b      	cmp	r2, #27
  405e60:	f200 808a 	bhi.w	405f78 <_realloc_r+0x31c>
  405e64:	3508      	adds	r5, #8
  405e66:	f10a 0210 	add.w	r2, sl, #16
  405e6a:	6829      	ldr	r1, [r5, #0]
  405e6c:	6011      	str	r1, [r2, #0]
  405e6e:	6869      	ldr	r1, [r5, #4]
  405e70:	6051      	str	r1, [r2, #4]
  405e72:	68a9      	ldr	r1, [r5, #8]
  405e74:	6091      	str	r1, [r2, #8]
  405e76:	eb0a 0107 	add.w	r1, sl, r7
  405e7a:	ebab 0207 	sub.w	r2, fp, r7
  405e7e:	f042 0201 	orr.w	r2, r2, #1
  405e82:	6099      	str	r1, [r3, #8]
  405e84:	604a      	str	r2, [r1, #4]
  405e86:	f8da 3004 	ldr.w	r3, [sl, #4]
  405e8a:	f003 0301 	and.w	r3, r3, #1
  405e8e:	431f      	orrs	r7, r3
  405e90:	4640      	mov	r0, r8
  405e92:	f8ca 7004 	str.w	r7, [sl, #4]
  405e96:	f7ff f883 	bl	404fa0 <__malloc_unlock>
  405e9a:	e751      	b.n	405d40 <_realloc_r+0xe4>
  405e9c:	682b      	ldr	r3, [r5, #0]
  405e9e:	6003      	str	r3, [r0, #0]
  405ea0:	686b      	ldr	r3, [r5, #4]
  405ea2:	6043      	str	r3, [r0, #4]
  405ea4:	2a1b      	cmp	r2, #27
  405ea6:	d82d      	bhi.n	405f04 <_realloc_r+0x2a8>
  405ea8:	f100 0308 	add.w	r3, r0, #8
  405eac:	f105 0208 	add.w	r2, r5, #8
  405eb0:	e71b      	b.n	405cea <_realloc_r+0x8e>
  405eb2:	4632      	mov	r2, r6
  405eb4:	6829      	ldr	r1, [r5, #0]
  405eb6:	6011      	str	r1, [r2, #0]
  405eb8:	6869      	ldr	r1, [r5, #4]
  405eba:	6051      	str	r1, [r2, #4]
  405ebc:	68a9      	ldr	r1, [r5, #8]
  405ebe:	6091      	str	r1, [r2, #8]
  405ec0:	461c      	mov	r4, r3
  405ec2:	46d1      	mov	r9, sl
  405ec4:	e72a      	b.n	405d1c <_realloc_r+0xc0>
  405ec6:	eb09 0107 	add.w	r1, r9, r7
  405eca:	ebab 0b07 	sub.w	fp, fp, r7
  405ece:	f04b 0201 	orr.w	r2, fp, #1
  405ed2:	6099      	str	r1, [r3, #8]
  405ed4:	604a      	str	r2, [r1, #4]
  405ed6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405eda:	f003 0301 	and.w	r3, r3, #1
  405ede:	431f      	orrs	r7, r3
  405ee0:	4640      	mov	r0, r8
  405ee2:	f845 7c04 	str.w	r7, [r5, #-4]
  405ee6:	f7ff f85b 	bl	404fa0 <__malloc_unlock>
  405eea:	462e      	mov	r6, r5
  405eec:	e728      	b.n	405d40 <_realloc_r+0xe4>
  405eee:	4629      	mov	r1, r5
  405ef0:	f7ff fe50 	bl	405b94 <memmove>
  405ef4:	e6ff      	b.n	405cf6 <_realloc_r+0x9a>
  405ef6:	4629      	mov	r1, r5
  405ef8:	4630      	mov	r0, r6
  405efa:	461c      	mov	r4, r3
  405efc:	46d1      	mov	r9, sl
  405efe:	f7ff fe49 	bl	405b94 <memmove>
  405f02:	e70b      	b.n	405d1c <_realloc_r+0xc0>
  405f04:	68ab      	ldr	r3, [r5, #8]
  405f06:	6083      	str	r3, [r0, #8]
  405f08:	68eb      	ldr	r3, [r5, #12]
  405f0a:	60c3      	str	r3, [r0, #12]
  405f0c:	2a24      	cmp	r2, #36	; 0x24
  405f0e:	d017      	beq.n	405f40 <_realloc_r+0x2e4>
  405f10:	f100 0310 	add.w	r3, r0, #16
  405f14:	f105 0210 	add.w	r2, r5, #16
  405f18:	e6e7      	b.n	405cea <_realloc_r+0x8e>
  405f1a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405f1e:	f023 0303 	bic.w	r3, r3, #3
  405f22:	441c      	add	r4, r3
  405f24:	462e      	mov	r6, r5
  405f26:	e6f9      	b.n	405d1c <_realloc_r+0xc0>
  405f28:	68a9      	ldr	r1, [r5, #8]
  405f2a:	f8ca 1010 	str.w	r1, [sl, #16]
  405f2e:	68e9      	ldr	r1, [r5, #12]
  405f30:	f8ca 1014 	str.w	r1, [sl, #20]
  405f34:	2a24      	cmp	r2, #36	; 0x24
  405f36:	d00c      	beq.n	405f52 <_realloc_r+0x2f6>
  405f38:	3510      	adds	r5, #16
  405f3a:	f10a 0218 	add.w	r2, sl, #24
  405f3e:	e7b9      	b.n	405eb4 <_realloc_r+0x258>
  405f40:	692b      	ldr	r3, [r5, #16]
  405f42:	6103      	str	r3, [r0, #16]
  405f44:	696b      	ldr	r3, [r5, #20]
  405f46:	6143      	str	r3, [r0, #20]
  405f48:	f105 0218 	add.w	r2, r5, #24
  405f4c:	f100 0318 	add.w	r3, r0, #24
  405f50:	e6cb      	b.n	405cea <_realloc_r+0x8e>
  405f52:	692a      	ldr	r2, [r5, #16]
  405f54:	f8ca 2018 	str.w	r2, [sl, #24]
  405f58:	696a      	ldr	r2, [r5, #20]
  405f5a:	f8ca 201c 	str.w	r2, [sl, #28]
  405f5e:	3518      	adds	r5, #24
  405f60:	f10a 0220 	add.w	r2, sl, #32
  405f64:	e7a6      	b.n	405eb4 <_realloc_r+0x258>
  405f66:	4632      	mov	r2, r6
  405f68:	e77f      	b.n	405e6a <_realloc_r+0x20e>
  405f6a:	4629      	mov	r1, r5
  405f6c:	4630      	mov	r0, r6
  405f6e:	9301      	str	r3, [sp, #4]
  405f70:	f7ff fe10 	bl	405b94 <memmove>
  405f74:	9b01      	ldr	r3, [sp, #4]
  405f76:	e77e      	b.n	405e76 <_realloc_r+0x21a>
  405f78:	68a9      	ldr	r1, [r5, #8]
  405f7a:	f8ca 1010 	str.w	r1, [sl, #16]
  405f7e:	68e9      	ldr	r1, [r5, #12]
  405f80:	f8ca 1014 	str.w	r1, [sl, #20]
  405f84:	2a24      	cmp	r2, #36	; 0x24
  405f86:	d003      	beq.n	405f90 <_realloc_r+0x334>
  405f88:	3510      	adds	r5, #16
  405f8a:	f10a 0218 	add.w	r2, sl, #24
  405f8e:	e76c      	b.n	405e6a <_realloc_r+0x20e>
  405f90:	692a      	ldr	r2, [r5, #16]
  405f92:	f8ca 2018 	str.w	r2, [sl, #24]
  405f96:	696a      	ldr	r2, [r5, #20]
  405f98:	f8ca 201c 	str.w	r2, [sl, #28]
  405f9c:	3518      	adds	r5, #24
  405f9e:	f10a 0220 	add.w	r2, sl, #32
  405fa2:	e762      	b.n	405e6a <_realloc_r+0x20e>
  405fa4:	20400454 	.word	0x20400454

00405fa8 <__ascii_wctomb>:
  405fa8:	b121      	cbz	r1, 405fb4 <__ascii_wctomb+0xc>
  405faa:	2aff      	cmp	r2, #255	; 0xff
  405fac:	d804      	bhi.n	405fb8 <__ascii_wctomb+0x10>
  405fae:	700a      	strb	r2, [r1, #0]
  405fb0:	2001      	movs	r0, #1
  405fb2:	4770      	bx	lr
  405fb4:	4608      	mov	r0, r1
  405fb6:	4770      	bx	lr
  405fb8:	238a      	movs	r3, #138	; 0x8a
  405fba:	6003      	str	r3, [r0, #0]
  405fbc:	f04f 30ff 	mov.w	r0, #4294967295
  405fc0:	4770      	bx	lr
  405fc2:	bf00      	nop

00405fc4 <__gedf2>:
  405fc4:	f04f 3cff 	mov.w	ip, #4294967295
  405fc8:	e006      	b.n	405fd8 <__cmpdf2+0x4>
  405fca:	bf00      	nop

00405fcc <__ledf2>:
  405fcc:	f04f 0c01 	mov.w	ip, #1
  405fd0:	e002      	b.n	405fd8 <__cmpdf2+0x4>
  405fd2:	bf00      	nop

00405fd4 <__cmpdf2>:
  405fd4:	f04f 0c01 	mov.w	ip, #1
  405fd8:	f84d cd04 	str.w	ip, [sp, #-4]!
  405fdc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fe0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fe4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fe8:	bf18      	it	ne
  405fea:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405fee:	d01b      	beq.n	406028 <__cmpdf2+0x54>
  405ff0:	b001      	add	sp, #4
  405ff2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405ff6:	bf0c      	ite	eq
  405ff8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405ffc:	ea91 0f03 	teqne	r1, r3
  406000:	bf02      	ittt	eq
  406002:	ea90 0f02 	teqeq	r0, r2
  406006:	2000      	moveq	r0, #0
  406008:	4770      	bxeq	lr
  40600a:	f110 0f00 	cmn.w	r0, #0
  40600e:	ea91 0f03 	teq	r1, r3
  406012:	bf58      	it	pl
  406014:	4299      	cmppl	r1, r3
  406016:	bf08      	it	eq
  406018:	4290      	cmpeq	r0, r2
  40601a:	bf2c      	ite	cs
  40601c:	17d8      	asrcs	r0, r3, #31
  40601e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  406022:	f040 0001 	orr.w	r0, r0, #1
  406026:	4770      	bx	lr
  406028:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40602c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406030:	d102      	bne.n	406038 <__cmpdf2+0x64>
  406032:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406036:	d107      	bne.n	406048 <__cmpdf2+0x74>
  406038:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40603c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406040:	d1d6      	bne.n	405ff0 <__cmpdf2+0x1c>
  406042:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406046:	d0d3      	beq.n	405ff0 <__cmpdf2+0x1c>
  406048:	f85d 0b04 	ldr.w	r0, [sp], #4
  40604c:	4770      	bx	lr
  40604e:	bf00      	nop

00406050 <__aeabi_cdrcmple>:
  406050:	4684      	mov	ip, r0
  406052:	4610      	mov	r0, r2
  406054:	4662      	mov	r2, ip
  406056:	468c      	mov	ip, r1
  406058:	4619      	mov	r1, r3
  40605a:	4663      	mov	r3, ip
  40605c:	e000      	b.n	406060 <__aeabi_cdcmpeq>
  40605e:	bf00      	nop

00406060 <__aeabi_cdcmpeq>:
  406060:	b501      	push	{r0, lr}
  406062:	f7ff ffb7 	bl	405fd4 <__cmpdf2>
  406066:	2800      	cmp	r0, #0
  406068:	bf48      	it	mi
  40606a:	f110 0f00 	cmnmi.w	r0, #0
  40606e:	bd01      	pop	{r0, pc}

00406070 <__aeabi_dcmpeq>:
  406070:	f84d ed08 	str.w	lr, [sp, #-8]!
  406074:	f7ff fff4 	bl	406060 <__aeabi_cdcmpeq>
  406078:	bf0c      	ite	eq
  40607a:	2001      	moveq	r0, #1
  40607c:	2000      	movne	r0, #0
  40607e:	f85d fb08 	ldr.w	pc, [sp], #8
  406082:	bf00      	nop

00406084 <__aeabi_dcmplt>:
  406084:	f84d ed08 	str.w	lr, [sp, #-8]!
  406088:	f7ff ffea 	bl	406060 <__aeabi_cdcmpeq>
  40608c:	bf34      	ite	cc
  40608e:	2001      	movcc	r0, #1
  406090:	2000      	movcs	r0, #0
  406092:	f85d fb08 	ldr.w	pc, [sp], #8
  406096:	bf00      	nop

00406098 <__aeabi_dcmple>:
  406098:	f84d ed08 	str.w	lr, [sp, #-8]!
  40609c:	f7ff ffe0 	bl	406060 <__aeabi_cdcmpeq>
  4060a0:	bf94      	ite	ls
  4060a2:	2001      	movls	r0, #1
  4060a4:	2000      	movhi	r0, #0
  4060a6:	f85d fb08 	ldr.w	pc, [sp], #8
  4060aa:	bf00      	nop

004060ac <__aeabi_dcmpge>:
  4060ac:	f84d ed08 	str.w	lr, [sp, #-8]!
  4060b0:	f7ff ffce 	bl	406050 <__aeabi_cdrcmple>
  4060b4:	bf94      	ite	ls
  4060b6:	2001      	movls	r0, #1
  4060b8:	2000      	movhi	r0, #0
  4060ba:	f85d fb08 	ldr.w	pc, [sp], #8
  4060be:	bf00      	nop

004060c0 <__aeabi_dcmpgt>:
  4060c0:	f84d ed08 	str.w	lr, [sp, #-8]!
  4060c4:	f7ff ffc4 	bl	406050 <__aeabi_cdrcmple>
  4060c8:	bf34      	ite	cc
  4060ca:	2001      	movcc	r0, #1
  4060cc:	2000      	movcs	r0, #0
  4060ce:	f85d fb08 	ldr.w	pc, [sp], #8
  4060d2:	bf00      	nop

004060d4 <__aeabi_dcmpun>:
  4060d4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4060d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060dc:	d102      	bne.n	4060e4 <__aeabi_dcmpun+0x10>
  4060de:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060e2:	d10a      	bne.n	4060fa <__aeabi_dcmpun+0x26>
  4060e4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060ec:	d102      	bne.n	4060f4 <__aeabi_dcmpun+0x20>
  4060ee:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4060f2:	d102      	bne.n	4060fa <__aeabi_dcmpun+0x26>
  4060f4:	f04f 0000 	mov.w	r0, #0
  4060f8:	4770      	bx	lr
  4060fa:	f04f 0001 	mov.w	r0, #1
  4060fe:	4770      	bx	lr

00406100 <__aeabi_uldivmod>:
  406100:	b953      	cbnz	r3, 406118 <__aeabi_uldivmod+0x18>
  406102:	b94a      	cbnz	r2, 406118 <__aeabi_uldivmod+0x18>
  406104:	2900      	cmp	r1, #0
  406106:	bf08      	it	eq
  406108:	2800      	cmpeq	r0, #0
  40610a:	bf1c      	itt	ne
  40610c:	f04f 31ff 	movne.w	r1, #4294967295
  406110:	f04f 30ff 	movne.w	r0, #4294967295
  406114:	f000 b97a 	b.w	40640c <__aeabi_idiv0>
  406118:	f1ad 0c08 	sub.w	ip, sp, #8
  40611c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406120:	f000 f806 	bl	406130 <__udivmoddi4>
  406124:	f8dd e004 	ldr.w	lr, [sp, #4]
  406128:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40612c:	b004      	add	sp, #16
  40612e:	4770      	bx	lr

00406130 <__udivmoddi4>:
  406130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406134:	468c      	mov	ip, r1
  406136:	460d      	mov	r5, r1
  406138:	4604      	mov	r4, r0
  40613a:	9e08      	ldr	r6, [sp, #32]
  40613c:	2b00      	cmp	r3, #0
  40613e:	d151      	bne.n	4061e4 <__udivmoddi4+0xb4>
  406140:	428a      	cmp	r2, r1
  406142:	4617      	mov	r7, r2
  406144:	d96d      	bls.n	406222 <__udivmoddi4+0xf2>
  406146:	fab2 fe82 	clz	lr, r2
  40614a:	f1be 0f00 	cmp.w	lr, #0
  40614e:	d00b      	beq.n	406168 <__udivmoddi4+0x38>
  406150:	f1ce 0c20 	rsb	ip, lr, #32
  406154:	fa01 f50e 	lsl.w	r5, r1, lr
  406158:	fa20 fc0c 	lsr.w	ip, r0, ip
  40615c:	fa02 f70e 	lsl.w	r7, r2, lr
  406160:	ea4c 0c05 	orr.w	ip, ip, r5
  406164:	fa00 f40e 	lsl.w	r4, r0, lr
  406168:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40616c:	0c25      	lsrs	r5, r4, #16
  40616e:	fbbc f8fa 	udiv	r8, ip, sl
  406172:	fa1f f987 	uxth.w	r9, r7
  406176:	fb0a cc18 	mls	ip, sl, r8, ip
  40617a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40617e:	fb08 f309 	mul.w	r3, r8, r9
  406182:	42ab      	cmp	r3, r5
  406184:	d90a      	bls.n	40619c <__udivmoddi4+0x6c>
  406186:	19ed      	adds	r5, r5, r7
  406188:	f108 32ff 	add.w	r2, r8, #4294967295
  40618c:	f080 8123 	bcs.w	4063d6 <__udivmoddi4+0x2a6>
  406190:	42ab      	cmp	r3, r5
  406192:	f240 8120 	bls.w	4063d6 <__udivmoddi4+0x2a6>
  406196:	f1a8 0802 	sub.w	r8, r8, #2
  40619a:	443d      	add	r5, r7
  40619c:	1aed      	subs	r5, r5, r3
  40619e:	b2a4      	uxth	r4, r4
  4061a0:	fbb5 f0fa 	udiv	r0, r5, sl
  4061a4:	fb0a 5510 	mls	r5, sl, r0, r5
  4061a8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4061ac:	fb00 f909 	mul.w	r9, r0, r9
  4061b0:	45a1      	cmp	r9, r4
  4061b2:	d909      	bls.n	4061c8 <__udivmoddi4+0x98>
  4061b4:	19e4      	adds	r4, r4, r7
  4061b6:	f100 33ff 	add.w	r3, r0, #4294967295
  4061ba:	f080 810a 	bcs.w	4063d2 <__udivmoddi4+0x2a2>
  4061be:	45a1      	cmp	r9, r4
  4061c0:	f240 8107 	bls.w	4063d2 <__udivmoddi4+0x2a2>
  4061c4:	3802      	subs	r0, #2
  4061c6:	443c      	add	r4, r7
  4061c8:	eba4 0409 	sub.w	r4, r4, r9
  4061cc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061d0:	2100      	movs	r1, #0
  4061d2:	2e00      	cmp	r6, #0
  4061d4:	d061      	beq.n	40629a <__udivmoddi4+0x16a>
  4061d6:	fa24 f40e 	lsr.w	r4, r4, lr
  4061da:	2300      	movs	r3, #0
  4061dc:	6034      	str	r4, [r6, #0]
  4061de:	6073      	str	r3, [r6, #4]
  4061e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061e4:	428b      	cmp	r3, r1
  4061e6:	d907      	bls.n	4061f8 <__udivmoddi4+0xc8>
  4061e8:	2e00      	cmp	r6, #0
  4061ea:	d054      	beq.n	406296 <__udivmoddi4+0x166>
  4061ec:	2100      	movs	r1, #0
  4061ee:	e886 0021 	stmia.w	r6, {r0, r5}
  4061f2:	4608      	mov	r0, r1
  4061f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061f8:	fab3 f183 	clz	r1, r3
  4061fc:	2900      	cmp	r1, #0
  4061fe:	f040 808e 	bne.w	40631e <__udivmoddi4+0x1ee>
  406202:	42ab      	cmp	r3, r5
  406204:	d302      	bcc.n	40620c <__udivmoddi4+0xdc>
  406206:	4282      	cmp	r2, r0
  406208:	f200 80fa 	bhi.w	406400 <__udivmoddi4+0x2d0>
  40620c:	1a84      	subs	r4, r0, r2
  40620e:	eb65 0503 	sbc.w	r5, r5, r3
  406212:	2001      	movs	r0, #1
  406214:	46ac      	mov	ip, r5
  406216:	2e00      	cmp	r6, #0
  406218:	d03f      	beq.n	40629a <__udivmoddi4+0x16a>
  40621a:	e886 1010 	stmia.w	r6, {r4, ip}
  40621e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406222:	b912      	cbnz	r2, 40622a <__udivmoddi4+0xfa>
  406224:	2701      	movs	r7, #1
  406226:	fbb7 f7f2 	udiv	r7, r7, r2
  40622a:	fab7 fe87 	clz	lr, r7
  40622e:	f1be 0f00 	cmp.w	lr, #0
  406232:	d134      	bne.n	40629e <__udivmoddi4+0x16e>
  406234:	1beb      	subs	r3, r5, r7
  406236:	0c3a      	lsrs	r2, r7, #16
  406238:	fa1f fc87 	uxth.w	ip, r7
  40623c:	2101      	movs	r1, #1
  40623e:	fbb3 f8f2 	udiv	r8, r3, r2
  406242:	0c25      	lsrs	r5, r4, #16
  406244:	fb02 3318 	mls	r3, r2, r8, r3
  406248:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40624c:	fb0c f308 	mul.w	r3, ip, r8
  406250:	42ab      	cmp	r3, r5
  406252:	d907      	bls.n	406264 <__udivmoddi4+0x134>
  406254:	19ed      	adds	r5, r5, r7
  406256:	f108 30ff 	add.w	r0, r8, #4294967295
  40625a:	d202      	bcs.n	406262 <__udivmoddi4+0x132>
  40625c:	42ab      	cmp	r3, r5
  40625e:	f200 80d1 	bhi.w	406404 <__udivmoddi4+0x2d4>
  406262:	4680      	mov	r8, r0
  406264:	1aed      	subs	r5, r5, r3
  406266:	b2a3      	uxth	r3, r4
  406268:	fbb5 f0f2 	udiv	r0, r5, r2
  40626c:	fb02 5510 	mls	r5, r2, r0, r5
  406270:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406274:	fb0c fc00 	mul.w	ip, ip, r0
  406278:	45a4      	cmp	ip, r4
  40627a:	d907      	bls.n	40628c <__udivmoddi4+0x15c>
  40627c:	19e4      	adds	r4, r4, r7
  40627e:	f100 33ff 	add.w	r3, r0, #4294967295
  406282:	d202      	bcs.n	40628a <__udivmoddi4+0x15a>
  406284:	45a4      	cmp	ip, r4
  406286:	f200 80b8 	bhi.w	4063fa <__udivmoddi4+0x2ca>
  40628a:	4618      	mov	r0, r3
  40628c:	eba4 040c 	sub.w	r4, r4, ip
  406290:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406294:	e79d      	b.n	4061d2 <__udivmoddi4+0xa2>
  406296:	4631      	mov	r1, r6
  406298:	4630      	mov	r0, r6
  40629a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40629e:	f1ce 0420 	rsb	r4, lr, #32
  4062a2:	fa05 f30e 	lsl.w	r3, r5, lr
  4062a6:	fa07 f70e 	lsl.w	r7, r7, lr
  4062aa:	fa20 f804 	lsr.w	r8, r0, r4
  4062ae:	0c3a      	lsrs	r2, r7, #16
  4062b0:	fa25 f404 	lsr.w	r4, r5, r4
  4062b4:	ea48 0803 	orr.w	r8, r8, r3
  4062b8:	fbb4 f1f2 	udiv	r1, r4, r2
  4062bc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4062c0:	fb02 4411 	mls	r4, r2, r1, r4
  4062c4:	fa1f fc87 	uxth.w	ip, r7
  4062c8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4062cc:	fb01 f30c 	mul.w	r3, r1, ip
  4062d0:	42ab      	cmp	r3, r5
  4062d2:	fa00 f40e 	lsl.w	r4, r0, lr
  4062d6:	d909      	bls.n	4062ec <__udivmoddi4+0x1bc>
  4062d8:	19ed      	adds	r5, r5, r7
  4062da:	f101 30ff 	add.w	r0, r1, #4294967295
  4062de:	f080 808a 	bcs.w	4063f6 <__udivmoddi4+0x2c6>
  4062e2:	42ab      	cmp	r3, r5
  4062e4:	f240 8087 	bls.w	4063f6 <__udivmoddi4+0x2c6>
  4062e8:	3902      	subs	r1, #2
  4062ea:	443d      	add	r5, r7
  4062ec:	1aeb      	subs	r3, r5, r3
  4062ee:	fa1f f588 	uxth.w	r5, r8
  4062f2:	fbb3 f0f2 	udiv	r0, r3, r2
  4062f6:	fb02 3310 	mls	r3, r2, r0, r3
  4062fa:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062fe:	fb00 f30c 	mul.w	r3, r0, ip
  406302:	42ab      	cmp	r3, r5
  406304:	d907      	bls.n	406316 <__udivmoddi4+0x1e6>
  406306:	19ed      	adds	r5, r5, r7
  406308:	f100 38ff 	add.w	r8, r0, #4294967295
  40630c:	d26f      	bcs.n	4063ee <__udivmoddi4+0x2be>
  40630e:	42ab      	cmp	r3, r5
  406310:	d96d      	bls.n	4063ee <__udivmoddi4+0x2be>
  406312:	3802      	subs	r0, #2
  406314:	443d      	add	r5, r7
  406316:	1aeb      	subs	r3, r5, r3
  406318:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40631c:	e78f      	b.n	40623e <__udivmoddi4+0x10e>
  40631e:	f1c1 0720 	rsb	r7, r1, #32
  406322:	fa22 f807 	lsr.w	r8, r2, r7
  406326:	408b      	lsls	r3, r1
  406328:	fa05 f401 	lsl.w	r4, r5, r1
  40632c:	ea48 0303 	orr.w	r3, r8, r3
  406330:	fa20 fe07 	lsr.w	lr, r0, r7
  406334:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406338:	40fd      	lsrs	r5, r7
  40633a:	ea4e 0e04 	orr.w	lr, lr, r4
  40633e:	fbb5 f9fc 	udiv	r9, r5, ip
  406342:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406346:	fb0c 5519 	mls	r5, ip, r9, r5
  40634a:	fa1f f883 	uxth.w	r8, r3
  40634e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406352:	fb09 f408 	mul.w	r4, r9, r8
  406356:	42ac      	cmp	r4, r5
  406358:	fa02 f201 	lsl.w	r2, r2, r1
  40635c:	fa00 fa01 	lsl.w	sl, r0, r1
  406360:	d908      	bls.n	406374 <__udivmoddi4+0x244>
  406362:	18ed      	adds	r5, r5, r3
  406364:	f109 30ff 	add.w	r0, r9, #4294967295
  406368:	d243      	bcs.n	4063f2 <__udivmoddi4+0x2c2>
  40636a:	42ac      	cmp	r4, r5
  40636c:	d941      	bls.n	4063f2 <__udivmoddi4+0x2c2>
  40636e:	f1a9 0902 	sub.w	r9, r9, #2
  406372:	441d      	add	r5, r3
  406374:	1b2d      	subs	r5, r5, r4
  406376:	fa1f fe8e 	uxth.w	lr, lr
  40637a:	fbb5 f0fc 	udiv	r0, r5, ip
  40637e:	fb0c 5510 	mls	r5, ip, r0, r5
  406382:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406386:	fb00 f808 	mul.w	r8, r0, r8
  40638a:	45a0      	cmp	r8, r4
  40638c:	d907      	bls.n	40639e <__udivmoddi4+0x26e>
  40638e:	18e4      	adds	r4, r4, r3
  406390:	f100 35ff 	add.w	r5, r0, #4294967295
  406394:	d229      	bcs.n	4063ea <__udivmoddi4+0x2ba>
  406396:	45a0      	cmp	r8, r4
  406398:	d927      	bls.n	4063ea <__udivmoddi4+0x2ba>
  40639a:	3802      	subs	r0, #2
  40639c:	441c      	add	r4, r3
  40639e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4063a2:	eba4 0408 	sub.w	r4, r4, r8
  4063a6:	fba0 8902 	umull	r8, r9, r0, r2
  4063aa:	454c      	cmp	r4, r9
  4063ac:	46c6      	mov	lr, r8
  4063ae:	464d      	mov	r5, r9
  4063b0:	d315      	bcc.n	4063de <__udivmoddi4+0x2ae>
  4063b2:	d012      	beq.n	4063da <__udivmoddi4+0x2aa>
  4063b4:	b156      	cbz	r6, 4063cc <__udivmoddi4+0x29c>
  4063b6:	ebba 030e 	subs.w	r3, sl, lr
  4063ba:	eb64 0405 	sbc.w	r4, r4, r5
  4063be:	fa04 f707 	lsl.w	r7, r4, r7
  4063c2:	40cb      	lsrs	r3, r1
  4063c4:	431f      	orrs	r7, r3
  4063c6:	40cc      	lsrs	r4, r1
  4063c8:	6037      	str	r7, [r6, #0]
  4063ca:	6074      	str	r4, [r6, #4]
  4063cc:	2100      	movs	r1, #0
  4063ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063d2:	4618      	mov	r0, r3
  4063d4:	e6f8      	b.n	4061c8 <__udivmoddi4+0x98>
  4063d6:	4690      	mov	r8, r2
  4063d8:	e6e0      	b.n	40619c <__udivmoddi4+0x6c>
  4063da:	45c2      	cmp	sl, r8
  4063dc:	d2ea      	bcs.n	4063b4 <__udivmoddi4+0x284>
  4063de:	ebb8 0e02 	subs.w	lr, r8, r2
  4063e2:	eb69 0503 	sbc.w	r5, r9, r3
  4063e6:	3801      	subs	r0, #1
  4063e8:	e7e4      	b.n	4063b4 <__udivmoddi4+0x284>
  4063ea:	4628      	mov	r0, r5
  4063ec:	e7d7      	b.n	40639e <__udivmoddi4+0x26e>
  4063ee:	4640      	mov	r0, r8
  4063f0:	e791      	b.n	406316 <__udivmoddi4+0x1e6>
  4063f2:	4681      	mov	r9, r0
  4063f4:	e7be      	b.n	406374 <__udivmoddi4+0x244>
  4063f6:	4601      	mov	r1, r0
  4063f8:	e778      	b.n	4062ec <__udivmoddi4+0x1bc>
  4063fa:	3802      	subs	r0, #2
  4063fc:	443c      	add	r4, r7
  4063fe:	e745      	b.n	40628c <__udivmoddi4+0x15c>
  406400:	4608      	mov	r0, r1
  406402:	e708      	b.n	406216 <__udivmoddi4+0xe6>
  406404:	f1a8 0802 	sub.w	r8, r8, #2
  406408:	443d      	add	r5, r7
  40640a:	e72b      	b.n	406264 <__udivmoddi4+0x134>

0040640c <__aeabi_idiv0>:
  40640c:	4770      	bx	lr
  40640e:	bf00      	nop

00406410 <sysfont_glyphs>:
	...
  406430:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406440:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406450:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406468:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406478:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406488:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  4064a0:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  4064b0:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  4064c0:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4064d8:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4064f4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406504:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406514:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406524:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40654c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406574:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406584:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  4065a8:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  4065b8:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  4065c8:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4065d8:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4065f0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406600:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406610:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  406628:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  406638:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406648:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406660:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406670:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406680:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406698:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  4066a8:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  4066b8:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4066d0:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4066e0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4066f0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  40670c:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  40671c:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  40672c:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406748:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406760:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406778:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406788:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406798:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  4067b0:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  4067c0:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4067d0:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4067e8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4067f8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406808:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406820:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406830:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406840:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406858:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406868:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406878:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406890:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4068a0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4068b0:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  4068c8:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4068d8:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4068e8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406900:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406910:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406920:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406938:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406948:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406958:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406970:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406980:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406990:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  4069a8:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  4069b8:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4069c8:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4069e0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4069f0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406a00:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  406a18:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  406a28:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406a38:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406a50:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406a60:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406a70:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406a88:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406a98:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406aa8:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406ac0:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406ad0:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406ae0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406b08:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406b18:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406b34:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406b4c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406b5c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b6c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406b84:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406b94:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406ba4:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406bbc:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406bcc:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406bdc:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406bec:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406bfc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406c0c:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406c1c:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406c2c:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406c3c:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406c4c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406c64:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406c74:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c84:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406ca0:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406cbc:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406cd8:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406ce8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406cf8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406d10:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406d2c:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406d48:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406d64:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406d80:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406d9c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406db8:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406dd4:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406de4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406df4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406e04:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406e14:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406e24:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406e34:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406e44:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406e54:	0000 0000 7245 6f72 202e 3225 322e 2066     ....Erro. %2.2f 
  406e64:	006d 0000 6964 7473 203a 3225 322e 2066     m...dist: %2.2f 
  406e74:	006d 0000                                   m...

00406e78 <_global_impure_ptr>:
  406e78:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406e88:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406e98:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406ea8:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406eb8:	296c 0000 0030 0000                         l)..0...

00406ec0 <blanks.7223>:
  406ec0:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406ed0 <zeroes.7224>:
  406ed0:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406ee0:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406ef0 <__mprec_bigtens>:
  406ef0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406f00:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406f10:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406f18 <__mprec_tens>:
  406f18:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406f28:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406f38:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406f48:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406f58:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406f68:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406f78:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406f88:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406f98:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406fa8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406fb8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406fc8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406fd8:	9db4 79d9 7843 44ea                         ...yCx.D

00406fe0 <p05.6055>:
  406fe0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406ff0:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406ffc <_ctype_>:
  406ffc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40700c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40701c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40702c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40703c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40704c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40705c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40706c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40707c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407100 <_init>:
  407100:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407102:	bf00      	nop
  407104:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407106:	bc08      	pop	{r3}
  407108:	469e      	mov	lr, r3
  40710a:	4770      	bx	lr

0040710c <__init_array_start>:
  40710c:	00403865 	.word	0x00403865

00407110 <__frame_dummy_init_array_entry>:
  407110:	00400165                                e.@.

00407114 <_fini>:
  407114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407116:	bf00      	nop
  407118:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40711a:	bc08      	pop	{r3}
  40711c:	469e      	mov	lr, r3
  40711e:	4770      	bx	lr

00407120 <__fini_array_start>:
  407120:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6410 0040 0e0a 7d20               .....d@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <freq>:
20400020:	21ac 0000                                   .!..

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb0 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5fa9 0040 5b69 0040 0000 0000 6ffc 0040     ._@.i[@......o@.
20400954:	6ff8 0040 6e9c 0040 6e9c 0040 6e9c 0040     .o@..n@..n@..n@.
20400964:	6e9c 0040 6e9c 0040 6e9c 0040 6e9c 0040     .n@..n@..n@..n@.
20400974:	6e9c 0040 6e9c 0040 ffff ffff ffff ffff     .n@..n@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
